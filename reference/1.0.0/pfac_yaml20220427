{
   openapi :  3.0.0 ,
   info : {
     title :  Exchange APIs Documentation ,
     description :  To authenticate with Technologi you use your API token, the authentication type is: __OAuth 2.0__  \n The Authentication token should be sent as an authorization header for every request.  \n  \n  The Request and Reposes will always be in __JSON__ format.  \n \n #### __Security__  \n For security purposes your __IP__ needs to be whitelisted in order to perform any operations on the given endpoints.  \n #### __Postman__ \n The Postman library can be accessed from this link   <a href='/project/downloaddocument/Exchange APIs.postman_collection.json' target='_blank'>Exchange APIs library</a>, simply go in your Postman click import than import from link and copy paste the url.  ,
     version :  2.0.0 
  },
   servers : [
    {
       url :  https://uat-fd-pfac-c-api.technologi.co.uk 
    }
  ],
   paths : {
     /oauth/token : {
       post : {
         tags : [
           OAuth Token 
        ],
         summary :  Get Token ,
         description :  In order to get the token you need to set the authentication for this endpoint to basic auth.  \n Input the __client_id__ as username and __client_secret__ as password.  \n \n After receiving the token please update the other endpoints authentication with the given token changing the authentication type to __OAuth 2.0__.  ,
         operationId :  GET_OAUTH_TOKEN ,
         requestBody : {
           description :  Transaction Search ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/refresh_token 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/OAuth_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /offering/available : {
       post : {
         tags : [
           Offerings 
        ],
         summary :  Retrieve Available Offerings ,
         description :  Retrieve Available Offerings ,
         requestBody : {
           description :  Retrieve Available Offerings for Alliance and Partner PFACs ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/ListAvailableOffersRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/ListAvailableOffersResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /offering/processing : {
       post : {
         tags : [
           Offerings 
        ],
         summary :  Retrieve Processing Offerings ,
         description :  Retrieve Processing Offerings ,
         requestBody : {
           description :  Retrieve Requested Processing Offerings for Alliance and Partner PFACs ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/ProcessingOffersRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/ProcessingOffersResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /offering/equipment : {
       post : {
         tags : [
           Offerings 
        ],
         summary :  Retrieve Equipment/Online Offerings ,
         description :  Retrieve Equipment/Online Offerings ,
         requestBody : {
           description :  Retrieve Requested Equipment/Online Offerings for Alliance and Partner PFACs ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/EquipmentOffersRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/EquipmentOffersResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding/application : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Add Merchant ,
         description :  Add Merchant ,
         requestBody : {
           description :  Adding a new Merchant Application ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/AddApplicationRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/ApplicationResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding//merchant : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Update Merchant ,
         description :  Update Merchant Details ,
         requestBody : {
           description :  Updating a Merchant Application ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/UpdateMerchantRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/ApplicationResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding///merchant : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Add Subgroup ,
         description :  Add Subgroup ,
         requestBody : {
           description :  Adding a new Merchant Subgroup ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/AddSubGroupRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/AddSubGroupResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding////merchant : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Update Subgroup ,
         description :  Update Subgroup ,
         requestBody : {
           description :  Updating a Merchant Subgroup ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/UpdateSubGroupRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/AddSubGroupResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding/outlet : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Add Outlet ,
         description :  Add Outlet ,
         requestBody : {
           description :  Adding a new Merchant Outlet ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/AddOutletRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/AddOutletResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding//outlet : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Update Outlet ,
         description :  Update Outlet ,
         requestBody : {
           description :  Updating a Merchant Outlet ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/UpdateOutletRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/AddSubGroupResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding/////merchant : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Application Retrieve ,
         description :  Application Retrieve ,
         requestBody : {
           description :  Application Retrieve ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/ApplicationRetrieveRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/ApplicationRetrieveResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding///application : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Application Status Check ,
         description :  Check the status of an application ,
         requestBody : {
           description :  Check the status of an application ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/ApplicationStatusCheckRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/ApplicationStatusCheckResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding//application : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Application Submission ,
         description :  Application Submission ,
         requestBody : {
           description :  Application Submission ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/ApplicationSubmissionRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/ApplicationRetrieveResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /boarding/nonprocessingapplication : {
       post : {
         tags : [
           Application Boarding 
        ],
         summary :  Add Non-Processing Merchant ,
         description :  Add Non-Processing Merchant ,
         requestBody : {
           description :  Adding a new Non-Processing Merchant Application ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/AddNonProcessingApplicationRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/AddNonProcessingApplicationResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /intelligence/retrieve_intelligence : {
       post : {
         tags : [
           Risk Screening 
        ],
         summary :  Retrieve Risk Available Reports List for Screening ,
         description :  Retrieve Risk Available Reports List for Screening ,
         requestBody : {
           description :  Retrieve Risk Available Reports List for Screening ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/RetrieveIntelligenceRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/RetrieveIntelligenceResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /intelligence/retrieve_report : {
       post : {
         tags : [
           Risk Screening 
        ],
         summary :  Retrieve Risk Full Report for Screening ,
         description :  Retrieve Risk Full Report for Screening ,
         requestBody : {
           description :  Retrieve Risk Full Report for Screening ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/RetrieveIntelligenceFullRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/RetrieveIntelligenceFullResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /intelligence/overwrite_aml_reports : {
       post : {
         tags : [
           Risk Screening 
        ],
         summary :  Overwriting AML Report for Screening (OFAC Report) ,
         description :  Overwriting AML Report for Screening (OFAC Report) ,
         requestBody : {
           description :  Overwriting AML Report for Screening (OFAC Report) ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/OverwriteAMLRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/OverwriteAMLResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /monitoring/retrieve_hits : {
       post : {
         tags : [
           Risk Monitoring 
        ],
         summary :  Retrieve Risk Available Reports List for Monitoring ,
         description :  Retrieve Risk Available Reports List for Monitoring ,
         requestBody : {
           description :  Retrieve Risk Available Reports List for Monitoring ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/RetrieveHitRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/RetrieveHitResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /monitoring/retrieve_report : {
       post : {
         tags : [
           Risk Monitoring 
        ],
         summary :  Retrieve Risk Full Reports for Monitoring ,
         description :  Retrieve Risk Full Reports for Monitoring ,
         requestBody : {
           description :  Retrieve Risk Full Reports for Monitoring ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/RetrieveMonitoringRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/RetrieveMonitoringResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /monitoring/overwrite_monitoring_report : {
       post : {
         tags : [
           Risk Monitoring 
        ],
         summary :  Overwriting AML Report for Monitoring (OFAC Report) ,
         description :  Overwriting AML Report for Monitoring (OFAC Report) ,
         requestBody : {
           description :  Overwriting AML Report for Monitoring (OFAC Report) ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/OverwriteMonitorRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/OverwriteMonitorResponseBlock 
                }
              }
            }
          },
           default : {
             description :  Unexpected error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/error_response 
                }
              }
            }
          }
        }
      }
    },
     /funding/instruction : {
       post : {
         tags : [
           Funding Instruction 
        ],
         summary :  Funding Instruction ,
         description :  A single merchant, simplified structure ,
         operationId :  funding_instruction ,
         requestBody : {
           description :  A single merchant funding instruction ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/InstructionRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/InstructionResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /funding/detailed-instruction : {
       post : {
         tags : [
           Funding Instruction 
        ],
         summary :  Funding Details Instruction ,
         description :  a single merchant, extended structure ,
         operationId :  funding_details_instruction ,
         requestBody : {
           description :  single merchant funding instruction details ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/InstructionDetails 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/InstructionDetailsResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /reserve/release : {
       post : {
         tags : [
           Account Operations 
        ],
         summary :  Account Reserve Release ,
         description :  Account Reserve Release ,
         operationId :  release_reserve ,
         requestBody : {
           description :  PFAC account balance ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Release_Reserve_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Release_Reserve_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /account/balance : {
       post : {
         tags : [
           Account Operations 
        ],
         summary :  Get Account Balance ,
         description :  Gets the account balance ,
         operationId :  get_account_balance ,
         requestBody : {
           description :  PFAC account balance ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Get_Account_Balance_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Get_Account_Balance_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /settlement/rejects : {
       post : {
         tags : [
           Account Operations 
        ],
         summary :  Get Settlement Rejects ,
         description :  Get a list of all rejected settlement transactions under a PFAC and the related merchants. Can be filtered to only display certain transactions. ,
         operationId :  GET_SETTLEMENT_REJECTS ,
         requestBody : {
           description :  PFAC account balance ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Get_Settlement_Reject_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Get_Settlement_Reject_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /account/trade-info : {
       post : {
         tags : [
           Account Operations 
        ],
         summary :  Get Trade Info ,
         description :  Get Trade Info ,
         operationId :  GET_TRADE_INFO ,
         requestBody : {
           description :  PFAC account balance ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Get_Trade_Account_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Get_Trade_Account_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /account/settlement-info : {
       post : {
         tags : [
           Account Operations 
        ],
         summary :  Get Settlement Info ,
         description :  Get Settlement Info ,
         operationId :  GET_SETTLEMENT_INFO ,
         requestBody : {
           description :  Get Settlement Info ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Get_Settlement_Info_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Get_Settlement_Info_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /account/account-summary : {
       post : {
         tags : [
           Account Operations 
        ],
         summary :  Get Account Summary ,
         description :  Get Account Summary ,
         operationId :  GET_ACCOUNT_SUMMARY ,
         requestBody : {
           description :  Get Account Summary ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Get_Account_Summary_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Get_Account_Summary_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /transaction/ : {
       post : {
         tags : [
           Search Transactions 
        ],
         summary :  Search Transactions ,
         description :  Search Transactions, Including Refund, Not Rejected ,
         operationId :  TRANSACTION_SEARCH ,
         requestBody : {
           description :  Transaction Search ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Account_Transaction_Search_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Account_Transaction_Search_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /transaction/rejects : {
       post : {
         tags : [
           Search Transactions 
        ],
         summary :  Search Transactions Rejects ,
         description :  Search Transactions Rejects ,
         operationId :  TRANSACTION_SEARCH_REJECTS ,
         requestBody : {
           description :  Transaction Search ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Account_Transaction_Search_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Account_Transaction_Search_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /transaction/adjustments : {
       post : {
         tags : [
           Search Transactions 
        ],
         summary :  Search Transactions Adjustments ,
         description :  Search Transactions Adjustments ,
         operationId :  TRANSACTION_SEARCH_ADJUSTMENTS ,
         requestBody : {
           description :  Transaction Search ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Account_Transaction_Search_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Account_Transaction_Search_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /transaction/chargebacks : {
       post : {
         tags : [
           Search Transactions 
        ],
         summary :  Search Transactions Chargebacks ,
         description :  Search Transactions Chargebacks ,
         operationId :  TRANSACTION_SEARCH_CHARGEBACKS ,
         requestBody : {
           description :  Transaction Search ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Account_Transaction_Search_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Account_Transaction_Search_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /transaction/chargeback-adjustments : {
       post : {
         tags : [
           Search Transactions 
        ],
         summary :  Search Transactions Chargeback-adjustments ,
         description :  Search Transactions Chargeback-adjustments ,
         operationId :  TRANSACTION_SEARCH_CHARGEBACK_ADJUSTMENTS ,
         requestBody : {
           description :  Transaction Search ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/Account_Transaction_Search_Request 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Account_Transaction_Search_Response 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /account/bank-details : {
       post : {
         tags : [
           Information Retrieval 
        ],
         summary :  Get Bank Account Detail ,
         description :  Get Bank Account Detail ,
         operationId :  get_bank_detail ,
         requestBody : {
           description :  Get merchant bank information ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/GetBankRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/GetBankResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /split/transaction-details : {
       post : {
         tags : [
           Split Funding by Transaction 
        ],
         summary :  Split Funding Instruction ,
         description :  A funding instruction to sub-merchant and other involved entities ,
         requestBody : {
           description :  Funding Instruction to sub-merchant and other involved entities ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/SplitTransactionRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/SplitTransactionResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    },
     /split/status : {
       post : {
         tags : [
           Split Funding by Transaction 
        ],
         summary :  Split Funding Instruction ,
         description :  A funding status of each sub-merchant and other involved entities ,
         requestBody : {
           description :  Funding Instruction to sub-merchant and other involved entities ,
           content : {
             application/json : {
               schema : {
                 $ref :  #/components/schemas/SplitFundingStatusRequest 
              }
            }
          },
           required : true
        },
         responses : {
           200 : {
             description :  OK ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/SplitFundingStatusResponse 
                }
              }
            }
          },
           default : {
             description :  Unexpected Error ,
             content : {
               application/json : {
                 schema : {
                   $ref :  #/components/schemas/Error 
                }
              }
            }
          }
        }
      }
    }
  },
   components : {
     schemas : {
       grant_type_object : {
         type :  object ,
         properties : {
           grant_type : {
             type :  string ,
             description :  The type of grant requested, can be __Refresh__ or __Client Credentials__ ,
             example :  client_credentials ,
             enum : [
               client_credentials 
            ]
          }
        }
      },
       refresh_token_object : {
         type :  object ,
         properties : {
           refresh_token : {
             type :  string ,
             description :  Returned by the response when __grant_type__ is __client_credentials__ ,
             example :  f17717317f4ea744b04fce476428b74529ada809 
          }
        }
      },
       refresh_token : {
         required : [
           grant_type 
        ],
         type :  object ,
         discriminator : {
           propertyName :  grant_type ,
           mapping : {
             client_credentials :  #/components/schemas/grant_type_object 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/grant_type_object 
          },
          {
             $ref :  #/components/schemas/refresh_token_object 
          }
        ]
      },
       OAuth_Response : {
         type :  object ,
         properties : {
           access_token : {
             type :  string ,
             description :  Access token key ,
             example :  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.yq9gPZKvEN_gNmLEsc_9u15tay_9DqZx46XMxdjt_MvuhsIZdZXIqEeSInKg6shYl-oWcrliXEc1KSJPIyrACvrZIcN5Y8mNEEZ9Sfm11-918etADfloKkckZBZG605pvnTQvcSS88vCTLkb_gsqVU8c17kR2thPBsU09pzfwAIRoG7c2NQveDliGrK8UWUoqu5lCPsDWihM_ZpoMfPxIxaN6NNVNfP2dk2rsKmgpz-PlEHvX6ReEVpUeMNbSdXU.wXWVwAxNifIuWuKtUPGBdLTfFtR9ubXUGKHFROEMkMg 
          },
           token_type : {
             type :  string ,
             description :  the type of the token ,
             example :  bearer 
          },
           expires_in : {
             type :  number ,
             description :  Time until the token expires, displayed in __seconds__  ,
             example : 3600
          },
           refresh_token : {
             type :  string ,
             description :  the refresh token ,
             example :  f17717317f4ea744b04fce476428b74529ada809 
          }
        }
      },
       OverwriteMonitorResponseBlock : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           reports : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/MonitorFullReport 
            }
          }
        }
      },
       RetrieveMonitoringResponseBlock : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           reports : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/MonitorFullReport 
            }
          }
        }
      },
       MonitorFullReport : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           intelligence_data (Acuris) : {
             $ref :  #/components/schemas/MonitorFullReportDetail 
          },
           intelligence_data (creditsafe) : {
             $ref :  #/components/schemas/MonitorCreditSafeFullReportDetail 
          }
        }
      },
       MonitorCreditSafeFullReportDetail : {
         type :  object ,
         properties : {
           corporate_identification : {
             $ref :  #/components/schemas/CreditSafeCorpIdentification 
          },
           corporate_structure : {
             $ref :  #/components/schemas/CorporateStructure 
          },
           corporate_directors : {
             $ref :  #/components/schemas/CorporateDirector 
          },
           corporate_financials : {
             $ref :  #/components/schemas/MonitorCreditSafeFullReportDetail_corporate_financials 
          },
           corporate_summary : {
             $ref :  #/components/schemas/MonitorCreditSafeFullReportDetail_corporate_summary 
          },
           corporate_rating : {
             $ref :  #/components/schemas/MonitorCreditFinaRate 
          },
           third_party_source : {
             type :  string ,
             example :  Creditsafe 
          },
           date_added : {
             $ref :  #/components/schemas/DateTime 
          }
        }
      },
       MonitorCreditFinaRate : {
         type :  object ,
         properties : {
           commercial_score : {
             type :  string 
          },
           commercial_score_min_value : {
             type :  string 
          },
           commercial_score_max_value : {
             type :  string 
          },
           credit_rating : {
             type :  string 
          },
           credit_limit : {
             type :  string 
          },
           company_band : {
             type :  string 
          },
           credit_summary : {
             type :  string 
          },
           previous_commercial_score : {
             type :  string 
          },
           previous_commercial_score_min_value : {
             type :  string 
          },
           previous_commercial_score_max_value : {
             type :  string 
          },
           previous_credit_limit : {
             type :  string 
          },
           previous_credit_summary : {
             type :  string 
          },
           stability_odds : {
             type :  string 
          },
           score_history : {
             type :  string 
          },
           all_average_commercial_score : {
             type :  string 
          },
           all_average_stability_odds : {
             type :  string 
          },
           industry_average_commercial_score : {
             type :  string 
          },
           industry_average_stability_odds : {
             type :  string 
          },
           size_average_commercial_score : {
             type :  string 
          },
           size_average_stability_odds : {
             type :  string 
          },
           age_average_commercial_score : {
             type :  string 
          },
           age_average_stability_odds : {
             type :  string 
          },
           all_number_lower_score : {
             type :  string 
          },
           all_number_same_score : {
             type :  string 
          },
           all_number_higher_score : {
             type :  string 
          },
           all_percentile : {
             type :  string 
          },
           industry_number_lower_score : {
             type :  string 
          },
           industry_number_same_score : {
             type :  string 
          },
           industry_number_higher_score : {
             type :  string 
          },
           ind_percentile : {
             type :  string 
          },
           size_number_lower_score : {
             type :  string 
          },
           size_number_same_score : {
             type :  string 
          },
           size_number_higher_score : {
             type :  string 
          },
           size_percentile : {
             type :  string 
          },
           age_number_lower_score : {
             type :  string 
          },
           age_number_same_score : {
             type :  string 
          },
           age_number_higher_score : {
             type :  string 
          },
           age_percentile : {
             type :  string 
          },
           legal_notices_count : {
             type :  string 
          }
        }
      },
       MonitorCreditSumDirector : {
         type :  object ,
         properties : {
           number_creditors_winddown : {
             type :  string 
          },
           number_ccjs_last_12_months : {
             type :  string 
          },
           value_ccjs_last_12_months : {
             type :  string 
          },
           percentage_failures : {
             type :  string 
          },
           number_of_failures : {
             type :  string 
          },
           number_disqualifications : {
             type :  string 
          },
           number_convictions : {
             type :  string 
          },
           number_cifas : {
             type :  string 
          },
           number_current_dissolved_directorships : {
             type :  string 
          },
           number_directorships_failed : {
             type :  string 
          },
           number_directorships_not_failed : {
             type :  string 
          },
           number_directorships_compulsory_liquidator : {
             type :  string 
          },
           number_directorships_creditor_liquidator : {
             type :  string 
          },
           number_directorships_member_liquidator : {
             type :  string 
          },
           number_directorships_unknown_liquidator : {
             type :  string 
          },
           number_directorships_windup_order : {
             type :  string 
          },
           number_directorships_administrator_appointed : {
             type :  string 
          },
           number_directorships_administrator_discharge : {
             type :  string 
          },
           number_directorships_appointment_administrative_receiver : {
             type :  string 
          },
           number_directorships_receiver_appointed : {
             type :  string 
          },
           number_directorships_administrative_receiver_cessation : {
             type :  string 
          },
           number_directorships_receiver_cessation : {
             type :  string 
          },
           number_directorships_approval_voluntary_arrangements : {
             type :  string 
          },
           number_directorships_completion_voluntary_arrangements : {
             type :  string 
          },
           number_directorships_revocation_voluntary_arrangements : {
             type :  string 
          },
           number_directorships_suspension_voluntary_arrangements : {
             type :  string 
          },
           number_directorships_reinstated : {
             type :  string 
          },
           number_directorships_dissolved : {
             type :  string 
          }
        }
      },
       MonitorCreditSumCompany : {
         type :  object ,
         properties : {
           ccjs : {
             $ref :  #/components/schemas/MonitorCreditSumCompanyCCJ 
          },
           time_since_last_derogatory_item : {
             type :  string 
          },
           dormancy_flag : {
             type :  string 
          },
           changes : {
             $ref :  #/components/schemas/MonitorCreditSumCompany_changes 
          },
           legal_notices : {
             $ref :  #/components/schemas/MonitorCreditSumCompany_legal_notices 
          },
           alerts : {
             $ref :  #/components/schemas/MonitorCreditSumCompany_alerts 
          },
           windup_orders : {
             $ref :  #/components/schemas/MonitorCreditSumCompanyWindUp 
          },
           liquidators : {
             $ref :  #/components/schemas/MonitorCreditSumCompanyLiquid 
          },
           receivers : {
             $ref :  #/components/schemas/MonitorCreditSumCompanyRecv 
          },
           administration : {
             $ref :  #/components/schemas/MonitorCreditSumCompanyAdmin 
          },
           voluntary_arrangements : {
             $ref :  #/components/schemas/MonitorCreditSumVolunteer 
          },
           dissolvements : {
             $ref :  #/components/schemas/MonitorCreditSumDissolve 
          },
           bankruptcy : {
             $ref :  #/components/schemas/MonitorCreditSumBankrupt 
          },
           tax_lien_filings : {
             $ref :  #/components/schemas/MonitorCreditSumTaxLien 
          },
           court_judgements : {
             $ref :  #/components/schemas/MonitorCreditSumCourt 
          },
           uniform_commercial_code_filings : {
             $ref :  #/components/schemas/MonitorCreditUniForm 
          },
           suits : {
             $ref :  #/components/schemas/MonitorCreditSumSuit 
          }
        }
      },
       MonitorCreditSumSuit : {
         type :  object ,
         properties : {
           number_of_suits_filed : {
             type :  string 
          },
           filing_details : {
             $ref :  #/components/schemas/filingDetail 
          }
        }
      },
       MonitorCreditUniForm : {
         type :  object ,
         properties : {
           number_of_ucc_filed : {
             type :  string 
          },
           number_of_cautionary_ucc_filed : {
             type :  string 
          },
           filing_details : {
             $ref :  #/components/schemas/filingDetail 
          }
        }
      },
       MonitorCreditSumCourt : {
         type :  object ,
         properties : {
           number_of_court_judgements_filed : {
             type :  string 
          },
           filing_details : {
             $ref :  #/components/schemas/filingDetail 
          }
        }
      },
       MonitorCreditSumTaxLien : {
         type :  object ,
         properties : {
           number_of_tax_liens_filed : {
             type :  string 
          },
           filing_details : {
             $ref :  #/components/schemas/filingDetail 
          }
        }
      },
       MonitorCreditSumBankrupt : {
         type :  object ,
         properties : {
           bankruptcy_filed : {
             type :  string 
          },
           filing_details : {
             $ref :  #/components/schemas/filingDetail 
          },
           filling_details : {
             $ref :  #/components/schemas/MonitorCreditSumBankrupt_filling_details 
          }
        }
      },
       MonitorCreditSumDissolve : {
         type :  object ,
         properties : {
           number_intention_to_dissolve : {
             type :  string 
          },
           time_since_last_intention_to_dissolve : {
             type :  string 
          },
           number_company_dissolved : {
             type :  string 
          },
           time_since_last_company_dissolved : {
             type :  string 
          },
           number_company_reinstated : {
             type :  string 
          },
           time_since_last_company_reinstated : {
             type :  string 
          }
        }
      },
       MonitorCreditSumVolunteer : {
         type :  object ,
         properties : {
           number_approval_vol_arrangement : {
             type :  string 
          },
           time_since_last_approval_vol_arrangement : {
             type :  string 
          },
           number_revocation_voluntary_arrangement : {
             type :  string 
          },
           time_since_last_revocation_vol_arrangement : {
             type :  string 
          },
           number_suspension_vol_arrangement : {
             type :  string 
          },
           time_since_last_suspension_vol_arrangement : {
             type :  string 
          },
           num_completions_vol_arrangement : {
             type :  string 
          },
           time_since_last_completion_vol_arrangement : {
             type :  string 
          }
        }
      },
       MonitorCreditSumCompanyAdmin : {
         type :  object ,
         properties : {
           number_appointment_administrator : {
             type :  string 
          },
           time_since_last_appointment_administrator : {
             type :  string 
          },
           number_discharge_administrator : {
             type :  string 
          },
           time_since_last_discharge_administrator : {
             type :  string 
          }
        }
      },
       MonitorCreditSumCompanyRecv : {
         type :  object ,
         properties : {
           number_appointment_receiver : {
             type :  string 
          },
           time_since_last_appointment_receiver : {
             type :  string 
          },
           number_receiver_ceasing : {
             type :  string 
          },
           time_since_last_receiver_ceasing : {
             type :  string 
          }
        }
      },
       MonitorCreditSumCompanyLiquid : {
         type :  object ,
         properties : {
           number_appointment_vol_liquidator : {
             type :  string 
          },
           time_since_last_appointment_vol_liquidator : {
             type :  string 
          },
           number_appointment_comp_liquidator : {
             type :  string 
          },
           time_since_last_appointment_comp_liquidator : {
             type :  string 
          }
        }
      },
       MonitorCreditSumCompanyWindUp : {
         type :  object ,
         properties : {
           number_windup_orders : {
             type :  string 
          },
           time_since_last_windup_order : {
             type :  string 
          },
           number_resolution_windup : {
             type :  string 
          },
           time_since_last_resolution_windup : {
             type :  string 
          },
           number_petition_comp_windup : {
             type :  string 
          },
           time_since_last_petition_comp_windup : {
             type :  string 
          },
           number_dismissed_petition : {
             type :  string 
          },
           time_since_last_dismissed_petition : {
             type :  string 
          },
           time_since_last_wind_up_hearing : {
             type :  string 
          }
        }
      },
       MonitorCreditSumCompanyCCJ : {
         type :  object ,
         properties : {
           number_ccjs_0_to_72 : {
             type :  string 
          },
           value_ccjs_0_to_72 : {
             type :  string 
          },
           number_ccjs_last_12_months : {
             type :  string 
          },
           value_ccjs_last_12_months : {
             type :  string 
          }
        }
      },
       MonitorCreditFinCAI : {
         type :  object ,
         properties : {
           number_defaults : {
             type :  string 
          },
           value_defaults : {
             type :  string 
          },
           age_most_recent : {
             type :  string 
          },
           number_settled : {
             type :  string 
          },
           monthly_data : {
             type :  array ,
             items : {
               type :  object ,
               additionalProperties : {
                 type :  string 
              }
            }
          }
        }
      },
       MonitorCreditFinTradePayment : {
         type :  object ,
         properties : {
           trade_payment_summary : {
             $ref :  #/components/schemas/MonitorCreditFinTradePayment_trade_payment_summary 
          },
           continuous : {
             $ref :  #/components/schemas/MonitorCreditFinTradePaymentDetail 
          },
           combined : {
             $ref :  #/components/schemas/MonitorCreditFinTradePaymentDetail 
          },
           total : {
             $ref :  #/components/schemas/MonitorCreditFinTradePaymentDetail 
          }
        }
      },
       MonitorCreditFinTradePaymentDetail : {
         type :  object ,
         properties : {
           currency : {
             $ref :  #/components/schemas/Currency 
          },
           number : {
             type :  string 
          },
           balance : {
             type :  string 
          },
           current : {
             type :  string 
          },
           value_1_to_30_bt : {
             type :  string 
          },
           value_31_to_60_bt : {
             type :  string 
          },
           value_61_to_90_bt : {
             type :  string 
          },
           value_91_plus_bt : {
             type :  string 
          }
        }
      },
       MonitorCreditFinPercChange : {
         type :  object ,
         properties : {
           percentage_change_gross_asset : {
             type :  string 
          },
           percentage_change_net_worth : {
             type :  string 
          },
           percentage_change_fixed_asset : {
             type :  string 
          },
           percentage_change_current_assets : {
             type :  string 
          },
           percentage_change_current_liabilities : {
             type :  string 
          },
           percent_change_retained_earnings : {
             type :  string 
          },
           percent_change_shareholders_funds : {
             type :  string 
          },
           percent_change_uk_turnover : {
             type :  string 
          },
           percent_change_total_turnover : {
             type :  string 
          },
           percent_change_pre_tax_profit_loss : {
             type :  string 
          },
           percent_change_retained_profit_loss : {
             type :  string 
          },
           percent_change_credit_period : {
             type :  string 
          },
           percent_change_working_period : {
             type :  string 
          },
           percent_change_issued_period : {
             type :  string 
          },
           percent_change_return_on_capital : {
             type :  string 
          },
           percent_change_pre_tax_profit_margin : {
             type :  string 
          },
           percent_change_borrowing_ratio : {
             type :  string 
          },
           percent_change_equity_gearing : {
             type :  string 
          },
           percent_change_debt_gearing : {
             type :  string 
          },
           percentage_change_net_asset : {
             type :  string 
          }
        }
      },
       MonitorCreditFinancialMonthly : {
         type :  object ,
         properties : {
           date : {
             $ref :  #/components/schemas/Date 
          },
           dbt : {
             type :  string 
          },
           industry : {
             type :  string 
          }
        }
      },
       CorporateDirector : {
         type :  object ,
         properties : {
           number_current_directors : {
             type :  string ,
             example :  1 
          },
           number_previous_directors : {
             type :  string ,
             example :  1 
          },
           number_of_disqualifications : {
             type :  string ,
             example :  1 
          },
           directors : {
             $ref :  #/components/schemas/CorporateDirector_directors 
          }
        }
      },
       MonitorCreditSafeDirector : {
         type :  object ,
         properties : {
           foreign_address : {
             $ref :  #/components/schemas/AddressSummary 
          },
           director_flag : {
             type :  string ,
             enum : [
               1 ,
               0 
            ]
          },
           director_number : {
             type :  string ,
             example :  1 
          },
           appointment_date : {
             $ref :  #/components/schemas/Date 
          },
           resignation_date : {
             $ref :  #/components/schemas/Date 
          },
           number_of_convictions : {
             type :  string ,
             example :  1 
          },
           director_details : {
             $ref :  #/components/schemas/MonitorCreditSafeDetail 
          }
        }
      },
       MonitorCreditSafeDetail : {
         type :  object ,
         properties : {
           first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           last_name : {
             $ref :  #/components/schemas/LastName 
          },
           address : {
             $ref :  #/components/schemas/MonitorCreditAddress 
          },
           date_of_birth : {
             $ref :  #/components/schemas/Date 
          },
           occupation : {
             type :  string ,
             example :  Director 
          },
           nationality : {
             type :  string ,
             example :  American 
          }
        }
      },
       CorporateStructure : {
         type :  object ,
         properties : {
           number_principle_shareholders : {
             type :  string ,
             example :  1 
          },
           parent_company : {
             $ref :  #/components/schemas/CorporateStructureCompany 
          },
           ultimate_parent_company : {
             $ref :  #/components/schemas/CorporateStructureCompany 
          },
           share_capital : {
             type :  array ,
             items : {
               type :  object ,
               additionalProperties : {
                 type :  string 
              }
            }
          },
           shareholdings : {
             type :  array ,
             items : {
               type :  object ,
               additionalProperties : {
                 type :  string 
              }
            }
          },
           shareholders : {
             type :  array ,
             items : {
               type :  object ,
               additionalProperties : {
                 type :  string 
              }
            }
          }
        }
      },
       CorporateStructureCompany : {
         type :  object ,
         properties : {
           legal_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           registration_number : {
             $ref :  #/components/schemas/RegNumber 
          },
           business_type : {
             type :  string ,
             example :  other 
          },
           company_status : {
             type :  string ,
             example :  other 
          },
           vat_number : {
             $ref :  #/components/schemas/TaxID 
          },
           address : {
             $ref :  #/components/schemas/MonitorCreditAddress 
          }
        }
      },
       CreditSafeCorpIdentification : {
         type :  object ,
         properties : {
           business_type : {
             type :  string ,
             example :  Limited 
          },
           company_status : {
             type :  string ,
             example :  Active 
          },
           reference_number : {
             type :  string ,
             example :  45889050 
          },
           legal_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           registration_number : {
             $ref :  #/components/schemas/RegNumber 
          },
           incorporation_date : {
             $ref :  #/components/schemas/Date 
          },
           trading_start_date : {
             $ref :  #/components/schemas/Date 
          },
           vat_number : {
             $ref :  #/components/schemas/TaxID 
          },
           vat_registration_date : {
             $ref :  #/components/schemas/Date 
          },
           registered_address : {
             $ref :  #/components/schemas/MonitorCreditAddress 
          },
           sic_codes : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/SICCode 
            }
          },
           filing_details : {
             $ref :  #/components/schemas/filingDetail 
          },
           previous_searches : {
             $ref :  #/components/schemas/PreviousSearchMonitoring 
          },
           ccls : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/CCLSDetail 
            }
          }
        }
      },
       MonitorCreditAddress : {
         type :  object ,
         properties : {
           address_line_1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           address_line_2 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           town_city : {
             $ref :  #/components/schemas/City 
          },
           county : {
             $ref :  #/components/schemas/State 
          },
           postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           country : {
             type :  string ,
             description :  ISO2 Country ,
             example :  US 
          },
           summary : {
             $ref :  #/components/schemas/AddressSummary 
          }
        }
      },
       AddressSummary : {
         type :  string ,
         example :  Sheila Lane, Sparks, NV 89431 
      },
       CCLSDetail : {
         type :  object ,
         properties : {
           additionalProperties : {
             type :  string 
          }
        }
      },
       PreviousSearchMonitoring : {
         type :  object ,
         properties : {
           number_of_previous_searches : {
             type :  string ,
             example :  1 
          },
           number_of_previous_searches_3_months : {
             type :  string ,
             example :  1 
          },
           number_of_previous_searches_6_months : {
             type :  string ,
             example :  1 
          },
           number_of_previous_searches_12_months : {
             type :  string ,
             example :  1 
          }
        }
      },
       filingDetail : {
         type :  object ,
         properties : {
           accounts_out_of_date : {
             $ref :  #/components/schemas/Date 
          },
           latest_accounts_date : {
             $ref :  #/components/schemas/Date 
          },
           latest_returns_date : {
             $ref :  #/components/schemas/Date 
          },
           days_to_file_accounts : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       SICCode : {
         type :  object ,
         properties : {
           code : {
             $ref :  #/components/schemas/MCC 
          },
           description : {
             type :  string ,
             example :  MCC description 
          }
        }
      },
       MonitorFullReportDetail : {
         type :  object ,
         properties : {
           hash_key : {
             type :  string 
          },
           intelligence_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           third_party_source : {
             $ref :  #/components/schemas/ThirdPartySource 
          },
           request_reference : {
             $ref :  #/components/schemas/MonitorFullReportDetail_request_reference 
          },
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           company : {
             $ref :  #/components/schemas/MonitorIntelligenceCompanyBlock 
          },
           person : {
             $ref :  #/components/schemas/IntelligencePrincipalBlock 
          },
           intelligence_report : {
             $ref :  #/components/schemas/MonitorFullReportDetail_intelligence_report 
          },
           date_added : {
             $ref :  #/components/schemas/DateTime 
          }
        }
      },
       MonitorIntelligenceCompanyBlock : {
         type :  object ,
         properties : {
           business : {
             $ref :  #/components/schemas/MonitorIntelligenceCompanyBlock_business 
          }
        }
      },
       RetrieveHitResponseBlock : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           ofacHits : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/OFACHitBlock 
            }
          }
        }
      },
       OFACHitBlock : {
         type :  object ,
         properties : {
           ofac_hit_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           parent_type : {
             $ref :  #/components/schemas/ParentType 
          },
           merchant_id : {
             $ref :  #/components/schemas/MID 
          },
           business_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           merchant_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           report_reference_id : {
             $ref :  #/components/schemas/EntityReference 
          },
           decision_made : {
             $ref :  #/components/schemas/DecisionMade 
          },
           ofac_hit : {
             $ref :  #/components/schemas/OFACHit 
          },
           material_change_hit : {
             $ref :  #/components/schemas/MaterialChangeHit 
          },
           date_added : {
             $ref :  #/components/schemas/DateTime 
          },
           date_updated : {
             $ref :  #/components/schemas/DateTime 
          },
           monitoring_data : {
             $ref :  #/components/schemas/MonitorDataHit 
          },
           monitoring_event_codes : {
             $ref :  #/components/schemas/MonitorEventCodeHit 
          }
        }
      },
       MonitorEventCodeHit : {
         type :  object ,
         properties : {
           additionalProperties : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/MonitorEventCodeDetail 
            }
          }
        }
      },
       MonitorEventCodeDetail : {
         type :  object ,
         properties : {
           factor_code : {
             $ref :  #/components/schemas/MonitorFactor 
          },
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           factor_name : {
             $ref :  #/components/schemas/MonitorFactorName 
          },
           third_party_source : {
             $ref :  #/components/schemas/MonitorThirdPartySource 
          }
        }
      },
       MonitorFactorName : {
         type :  string ,
         enum : [
           Company Name Change ,
           Financial Regulator ,
           Law Enforcement ,
           Deceased ,
           Sanctions ,
           Address Change ,
           Director Change ,
           Telephone Number Change ,
           Company Status Change ,
           Days Beyond Terms Change  ,
           Bankruptcy ,
           Possible OFAC ,
           PEP ,
           Disqualified Director ,
           Insolvency ,
           Adverse Media 
        ]
      },
       MonitorThirdPartySource : {
         type :  string ,
         enum : [
           creditsafe ,
           acuris_business_monitor 
        ]
      },
       MonitorDataHit : {
         type :  object ,
         properties : {
           alert_summary : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/OFACHitAlert 
            }
          },
           intelligence_references : {
             $ref :  #/components/schemas/IntelligenceRef 
          }
        }
      },
       IntelligenceRef : {
         type :  object ,
         properties : {
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           entity_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           available_reports : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/AvailableReportsMonitor 
            }
          }
        }
      },
       AvailableReportsMonitor : {
         type :  object ,
         properties : {
           report_type : {
             $ref :  #/components/schemas/ReportType 
          },
           report_reference : {
             $ref :  #/components/schemas/EntityReference 
          }
        }
      },
       OFACHitAlert : {
         type :  object ,
         properties : {
           rule_name : {
             $ref :  #/components/schemas/MonitoringRules 
          },
           entity_group : {
             $ref :  #/components/schemas/EntityType 
          },
           original_decision : {
             $ref :  #/components/schemas/MonitorDecision 
          },
           decision : {
             $ref :  #/components/schemas/MonitorDecision 
          },
           entity_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           new_value : {
             $ref :  #/components/schemas/AMLStatus 
          },
           previous_value : {
             $ref :  #/components/schemas/AMLStatus 
          },
           criteria_value : {
             $ref :  #/components/schemas/AMLStatus 
          },
           factor_code : {
             $ref :  #/components/schemas/MonitorFactor 
          }
        }
      },
       MonitoringRules : {
         type :  string ,
         description :  The name of configured monitoring rule ,
         example :  Monitor Rule 
      },
       MonitorFactor : {
         type :  string ,
         description :  Factors which are used for monitoring ,
         enum : [
           B_BANKRUPTCY_EVENT_US ,
           B_POSSIBLE_OFAC_EVENT_US ,
           B_COMPANY_NAME_CHANGE_EVENT_XX ,
           B_NEGATIVE_FINANCIAL_REGULATOR ,
           B_NEGATIVE_LAW_ENFORCEMENT ,
           B_DECEASED_EVENT_XX ,
           B_NEGATIVE_SANCTIONS ,
           B_ADDRESS_CHANGE_EVENT_XX ,
           B_DIRECTOR_CHANGE_EVENT_XX ,
           B_TELEPHONE_NUMBER_CHANGE_EVENT_XX ,
           B_COMPANY_STATUS_EVENT_US ,
           B_DBT_CHANGE_EVENT_US ,
           B_NEGATIVE_HAS_PEP ,
           P_PEP_EVENT_XX ,
           P_SANCTION_EVENT_XX ,
           P_DECEASED_EVENT_XX ,
           P_LAWENFORCEMENT_EVENT_XX ,
           P_FINANCIALREGULATOR_EVENT_XX ,
           P_DISQUALIFIEDDIRECTOR_EVENT_XX ,
           P_INSOLVENT_EVENT_XX ,
           P_ADVERSEMEDIA_EVENT_XX 
        ]
      },
       MonitorDecision : {
         type :  string ,
         description :  Monitoring decision ,
         enum : [
           ALERT ,
           IGNORE 
        ]
      },
       DecisionMade : {
         type :  string ,
         description :  Has OFAC hits? 1= Yes 0= No ,
         enum : [
           0 ,
           1 
        ]
      },
       OFACHit : {
         type :  string ,
         description :  Has OFAC hits? 1= Yes 0= No ,
         enum : [
           0 ,
           1 
        ]
      },
       MaterialChangeHit : {
         type :  string ,
         description :  Has Material Change hits? 1= Yes 0= No ,
         enum : [
           0 ,
           1 
        ]
      },
       GetBankRequest : {
         type :  object ,
         properties : {
           merchant_id : {
             $ref :  #/components/schemas/MID 
          }
        }
      },
       GetBankResponse : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           banks : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/BankRetrieveBlock 
            }
          }
        }
      },
       BankRetrieveBlock : {
         type :  object ,
         properties : {
           dda_number : {
             $ref :  #/components/schemas/DDA 
          },
           routing_number : {
             $ref :  #/components/schemas/ABA 
          },
           account_holder_name : {
             $ref :  #/components/schemas/AccountHolder 
          },
           bank_name : {
             $ref :  #/components/schemas/BankName 
          },
           floor : {
             $ref :  #/components/schemas/Floor 
          },
           suite_apart_number : {
             $ref :  #/components/schemas/Apartment 
          },
           street_line_1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           bank_city : {
             $ref :  #/components/schemas/City 
          },
           county_code : {
             $ref :  #/components/schemas/State 
          },
           country_code : {
             $ref :  #/components/schemas/Country 
          },
           zip_code : {
             $ref :  #/components/schemas/ZipCode 
          },
           account_type : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/BankFor 
            }
          },
           bank_account_type : {
             $ref :  #/components/schemas/BankAccountTypeRetrieve 
          }
        }
      },
       RetrieveIntelligenceFullRequest : {
         required : [
           application_reference ,
           reports 
        ],
         type :  object ,
         properties : {
           application_reference : {
             $ref :  #/components/schemas/ApplicationRef 
          },
           reports : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ReportBlock 
            }
          }
        }
      },
       RetrieveIntelligenceFullResponse : {
         required : [
           reports ,
           result 
        ],
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           reports : {
             $ref :  #/components/schemas/RetrieveIntelligenceFullResponse_reports 
          }
        }
      },
       RetrieveHitRequest : {
         type :  object ,
         properties : {
           search : {
             $ref :  #/components/schemas/RetrieveHitRequest_search 
          }
        }
      },
       RetrieveMonitoringRequest : {
         type :  object ,
         properties : {
           reports : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/MonitoringReportRetrieveBlock 
            }
          }
        }
      },
       MonitoringReportRetrieveBlock : {
         type :  object ,
         properties : {
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           entity_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           report_type : {
             $ref :  #/components/schemas/ReportType 
          },
           report_reference : {
             $ref :  #/components/schemas/EntityReference 
          }
        }
      },
       ReportType : {
         type :  string ,
         enum : [
           NEW_SANCTION_REPORT 
        ]
      },
       OverwriteMonitorRequest : {
         type :  object ,
         properties : {
           merchant : {
             $ref :  #/components/schemas/OverwriteMonitorRequest_merchant 
          },
           review_note : {
             $ref :  #/components/schemas/ReviewNote 
          },
           report_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           overwrite : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/MonitorOverwriteBlock 
            }
          }
        }
      },
       MonitorOverwriteBlock : {
         type :  object ,
         properties : {
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           entity_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           report_type : {
             $ref :  #/components/schemas/ReportType 
          },
           report_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           intelligence_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           email : {
             $ref :  #/components/schemas/Email 
          },
           review_note : {
             $ref :  #/components/schemas/ReviewNote 
          },
           possible_matches : {
             $ref :  #/components/schemas/PossibleMatchOverwriteBlock 
          }
        }
      },
       OverwriteAMLRequest : {
         type :  object ,
         properties : {
           application : {
             $ref :  #/components/schemas/MonitorFullReportDetail_request_reference 
          },
           overwrite : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/OverwriteBlock 
            }
          }
        }
      },
       OverwriteAMLResponseBlock : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           operation : {
             $ref :  #/components/schemas/AMLOverwriteOperation 
          },
           additionalProperties : {
             $ref :  #/components/schemas/OverwriteAMLResponseBlock_additionalProperties 
          }
        }
      },
       OriginalCopy : {
         type :  string ,
         enum : [
           0 ,
           1 
        ]
      },
       IsTestData : {
         type :  string ,
         enum : [
           0 ,
           1 
        ]
      },
       PartnerID : {
         type :  string ,
         description :  Alliance unique ID in the system in Exchange ,
         example :  160000999 
      },
       AllianceID : {
         type :  string ,
         description :  Alliance unique ID in the system in Exchange ,
         example :  160000777 
      },
       AMLOverwriteOperation : {
         type :  object ,
         properties : {
           operation_type : {
             $ref :  #/components/schemas/AMLOverwrite_OperationType 
          }
        },
         description :  The operation to be performed on this endpoint 
      },
       AMLOverwrite_OperationType : {
         type :  string ,
         description :  OVERWRITE_OFAC_REPORT ,
         example :  OVERWRITE_OFAC_REPORT ,
         enum : [
           OVERWRITE_OFAC_REPORT 
        ]
      },
       OverwriteBlock : {
         type :  object ,
         properties : {
           intelligence_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           third_party_source : {
             $ref :  #/components/schemas/ThirdPartySource 
          },
           email : {
             $ref :  #/components/schemas/Email 
          },
           review_note : {
             $ref :  #/components/schemas/ReviewNote 
          },
           possible_matches : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/PossibleMatchOverwriteBlock 
            }
          }
        }
      },
       ReviewNote : {
         type :  string ,
         description :  A note from the reviewer ,
         example :  This is my review 
      },
       PossibleMatchOverwriteBlock : {
         type :  object ,
         properties : {
           match_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           status : {
             $ref :  #/components/schemas/AMLStatus 
          },
           review_info : {
             $ref :  #/components/schemas/ReviewInfoBlock 
          }
        }
      },
       ReviewInfoBlock : {
         type :  object ,
         properties : {
           reviewer_name : {
             $ref :  #/components/schemas/Name 
          },
           reviewer_email : {
             $ref :  #/components/schemas/Email 
          },
           review_note : {
             $ref :  #/components/schemas/ReviewNote 
          }
        }
      },
       AMLStatus : {
         type :  string ,
         enum : [
           PM ,
           EM ,
           NM 
        ]
      },
       PepSancBusiness : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           intelligence_data : {
             $ref :  #/components/schemas/IntelligenceDataBusiness 
          }
        }
      },
       PepSancPrincipal : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           intelligence_data : {
             $ref :  #/components/schemas/IntelligenceDataPrincipal 
          }
        }
      },
       IntelligenceDataBusiness : {
         type :  object ,
         properties : {
           hash_key : {
             type :  string 
          },
           intelligence_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           third_party_source : {
             $ref :  #/components/schemas/ThirdPartySource 
          },
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           company : {
             $ref :  #/components/schemas/IntelligenceCompanyBlock 
          },
           person : {
             $ref :  #/components/schemas/IntelligencePrincipalBlock 
          },
           intelligence_report : {
             $ref :  #/components/schemas/BusinessIntelligenceReportBlockDetail 
          },
           date_added : {
             $ref :  #/components/schemas/DateTime 
          }
        }
      },
       IntelligenceDataPrincipal : {
         type :  object ,
         properties : {
           hash_key : {
             type :  string 
          },
           intelligence_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           third_party_source : {
             $ref :  #/components/schemas/ThirdPartySource 
          },
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           request_reference : {
             $ref :  #/components/schemas/MonitorFullReportDetail_request_reference 
          },
           company : {
             $ref :  #/components/schemas/IntelligenceCompanyBlock 
          },
           person : {
             $ref :  #/components/schemas/IntelligencePrincipalBlock 
          },
           intelligence_report : {
             $ref :  #/components/schemas/PrincipalIntelligenceReportBlockDetail 
          },
           date_added : {
             $ref :  #/components/schemas/DateTime 
          }
        }
      },
       IntelligenceCompanyBlock : {
         type :  object ,
         properties : {
           business : {
             $ref :  #/components/schemas/IntelligenceCompanyBlock_business 
          },
           outlet : {
             $ref :  #/components/schemas/IntelligenceCompanyBlock_outlet 
          }
        }
      },
       ReportBankShort : {
         type :  object ,
         properties : {
           bank_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           account_name : {
             type :  string ,
             description :  Merchant account holder name ,
             example :  John 
          },
           account_number : {
             $ref :  #/components/schemas/dda 
          },
           account_type : {
             type :  string ,
             example :  IBAN 
          },
           business_type : {
             $ref :  #/components/schemas/BusinessLegalEntity 
          },
           proprietor : {
             $ref :  #/components/schemas/ReportBankShort_proprietor 
          }
        }
      },
       AddressReportShort : {
         type :  object ,
         properties : {
           address_line_1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           city : {
             $ref :  #/components/schemas/City 
          },
           postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           country_code : {
             $ref :  #/components/schemas/CountryCodeLetter 
          }
        }
      },
       MCardATO : {
         type :  string ,
         example :  20000.00 
      },
       MATO : {
         type :  string ,
         example :  20000.00 
      },
       ReportAddressBlock : {
         type :  object ,
         properties : {
           premise : {
             $ref :  #/components/schemas/ZipCode 
          },
           postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           post_town : {
             $ref :  #/components/schemas/City 
          },
           street : {
             $ref :  #/components/schemas/AddressLine1 
          },
           country_code : {
             $ref :  #/components/schemas/CountryCodeLetter 
          }
        }
      },
       IntelligencePrincipalBlock : {
         type :  object ,
         properties : {
           principal_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           forename : {
             $ref :  #/components/schemas/FirstName 
          },
           surname : {
             $ref :  #/components/schemas/LastName 
          },
           date_of_birth : {
             $ref :  #/components/schemas/Date 
          },
           email : {
             $ref :  #/components/schemas/Email 
          },
           ownership_percentage : {
             $ref :  #/components/schemas/OwnershipPerc 
          },
           nationality : {
             $ref :  #/components/schemas/EntityReference 
          },
           current_address : {
             $ref :  #/components/schemas/ReportAddressBlock 
          },
           role : {
             $ref :  #/components/schemas/Position 
          },
           entity_number : {
             type :  number ,
             example : 0
          }
        }
      },
       BusinessIntelligenceReportBlockDetail : {
         type :  object ,
         properties : {
           possible_matches : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/possibleMatch 
            }
          },
           overall_evaluation : {
             $ref :  #/components/schemas/MonitorFullReportDetail_intelligence_report_overall_evaluation 
          },
           original_status : {
             type :  string ,
             description :  original decision suggested by Prospect based on the rules possible match, exact match, no match ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           status : {
             type :  string ,
             description :  decision made from user ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           is_overwritten : {
             type :  string ,
             description :  1 = Yes, 0 = No ,
             enum : [
               1 ,
               0 
            ]
          },
           review_info : {
             $ref :  #/components/schemas/reviewInfo 
          },
           third_party_source : {
             type :  string ,
             description :  decision made from user ,
             enum : [
               AcurisSearch 
            ]
          },
           date_updated : {
             $ref :  #/components/schemas/DateyMdTime 
          }
        }
      },
       PrincipalIntelligenceReportBlockDetail : {
         type :  object ,
         properties : {
           possible_matches : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/possibleMatch 
            }
          },
           overall_evaluation : {
             $ref :  #/components/schemas/MonitorFullReportDetail_intelligence_report_overall_evaluation 
          },
           original_status : {
             type :  string ,
             description :  original decision suggested by Prospect based on the rules possible match, exact match, no match ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           status : {
             type :  string ,
             description :  decision made from user ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           is_overwritten : {
             type :  string ,
             description :  1 = Yes, 0 = No ,
             enum : [
               1 ,
               0 
            ]
          },
           review_info : {
             $ref :  #/components/schemas/reviewInfo 
          },
           third_party_source : {
             type :  string ,
             description :  decision made from user ,
             enum : [
               AcurisSearch 
            ]
          },
           date_updated : {
             $ref :  #/components/schemas/DateyMdTime 
          }
        }
      },
       BusinessPossibleMatch : {
         type :  object ,
         properties : {
           unique_id : {
             type :  number ,
             example : 8101182
          },
           score : {
             type :  number ,
             example : 80
          },
           business : {
             $ref :  #/components/schemas/possibleMatchBusinessBlock 
          },
           person : {
             $ref :  #/components/schemas/possibleMatchPersonBlock 
          },
           match_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           original_status : {
             type :  string ,
             description :  original decision suggested by Prospect based on the rules possible match, exact match, no match ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           status : {
             type :  string ,
             description :  decision made from user ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           is_overwritten : {
             type :  string ,
             description :  1 = Yes, 0 = No ,
             enum : [
               1 ,
               0 
            ]
          },
           review_info : {
             $ref :  #/components/schemas/reviewInfo 
          },
           watchlist : {
             $ref :  #/components/schemas/watchlistReport 
          },
           credit_reference : {
             $ref :  #/components/schemas/creditReference 
          },
           date_updated : {
             $ref :  #/components/schemas/DateyMdTime 
          }
        }
      },
       possibleMatchBusinessBlock : {
         type :  object ,
         properties : {
           id : {
             type :  number ,
             example : 8101182
          },
           title : {
             $ref :  #/components/schemas/possibleMatchBusinessBlock_title 
          },
           alternativeTitle : {
             type :  string 
          },
           first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           middle_name : {
             $ref :  #/components/schemas/SecondName 
          },
           last_name : {
             $ref :  #/components/schemas/LastName 
          },
           date_of_birth : {
             type :  string 
          },
           year_of_birth : {
             type :  string 
          },
           date_of_death : {
             type :  string 
          },
           year_of_death : {
             type :  string 
          },
           isDeceased : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           gender : {
             type :  string ,
             enum : [
               Male ,
               Female 
            ]
          },
           nationality : {
             $ref :  #/components/schemas/possibleMatchBusinessBlock_nationality 
          },
           imageURL : {
             type :  string 
          },
           telephone_number : {
             type :  string 
          },
           fax_number : {
             type :  string 
          },
           mobile_number : {
             type :  string 
          },
           email : {
             $ref :  #/components/schemas/Email 
          },
           pepLevel : {
             type :  string 
          },
           isPEP : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isSanctionsCurrent : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isSanctionsPrevious : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isLawEnforcement : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isFinancialregulator : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isDisqualifiedDirector : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isInsolvent : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isAdverseMedia : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           addresses : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/Addresses 
            }
          },
           aliases : {
             type :  array ,
             example : [],
             items : {}
          },
           sanctions : {
             type :  array ,
             example : [],
             items : {}
          },
           notes : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ReportNote 
            }
          },
           linkedBusinesses : {
             type :  array ,
             example : [],
             items : {}
          },
           linkedPersons : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/LinkedPersonReport 
            }
          },
           politicalPositions : {
             type :  array ,
             example : [],
             items : {}
          },
           external_link : {
             type :  object ,
             additionalProperties : {
               type :  array ,
               items : {
                 $ref :  #/components/schemas/Link 
              }
            }
          }
        }
      },
       possibleMatch : {
         type :  object ,
         properties : {
           unique_id : {
             type :  number ,
             example : 8101182
          },
           score : {
             type :  number ,
             example : 80
          },
           person : {
             $ref :  #/components/schemas/possibleMatchPersonBlock 
          },
           match_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           original_status : {
             type :  string ,
             description :  original decision suggested by Prospect based on the rules possible match, exact match, no match ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           status : {
             type :  string ,
             description :  decision made from user ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           is_overwritten : {
             type :  string ,
             description :  1 = Yes, 0 = No ,
             enum : [
               1 ,
               0 
            ]
          },
           review_info : {
             $ref :  #/components/schemas/reviewInfo 
          },
           watchlist : {
             $ref :  #/components/schemas/watchlistReport 
          },
           credit_reference : {
             $ref :  #/components/schemas/creditReference 
          },
           date_updated : {
             $ref :  #/components/schemas/DateyMdTime 
          }
        }
      },
       DateyMdTime : {
         type :  string ,
         example :  2022-Mar-18 13:02:38 
      },
       creditReference : {
         type :  object ,
         properties : {
           disqualified_director_match : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           adverse_media_match : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           insolvent_match : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           deceased : {
             type :  string ,
             description :  1 = Yes, 0 = No ,
             enum : [
               1 ,
               0 
            ]
          },
           date_of_death : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       watchlistReport : {
         type :  object ,
         properties : {
           pep_hits : {
             type :  string ,
             enum : [
               1 ,
               0 
            ]
          },
           pep_level : {
             type :  string ,
             enum : [
               1 ,
               0 
            ]
          },
           enforcement_hits : {
             type :  string ,
             enum : [
               1 ,
               0 
            ]
          },
           sanctions_hits : {
             type :  string ,
             enum : [
               1 ,
               0 
            ]
          },
           previous_sanctions : {
             type :  string ,
             enum : [
               1 ,
               0 
            ]
          },
           financial_regulator : {
             type :  string ,
             enum : [
               1 ,
               0 
            ]
          }
        }
      },
       reviewInfo : {
         type :  object ,
         properties : {
           reviewer_name : {
             $ref :  #/components/schemas/Name 
          },
           reviewer_email : {
             $ref :  #/components/schemas/Email 
          },
           review_date : {
             $ref :  #/components/schemas/Date 
          },
           review_note : {
             type :  string 
          }
        }
      },
       possibleMatchPersonBlock : {
         type :  object ,
         properties : {
           id : {
             type :  number ,
             example : 8101182
          },
           title : {
             $ref :  #/components/schemas/possibleMatchBusinessBlock_title 
          },
           alternativeTitle : {
             type :  string 
          },
           first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           middle_name : {
             $ref :  #/components/schemas/SecondName 
          },
           last_name : {
             $ref :  #/components/schemas/LastName 
          },
           date_of_birth : {
             type :  string 
          },
           year_of_birth : {
             type :  string 
          },
           date_of_death : {
             type :  string 
          },
           year_of_death : {
             type :  string 
          },
           isDeceased : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           gender : {
             type :  string ,
             enum : [
               Male ,
               Female 
            ]
          },
           nationality : {
             $ref :  #/components/schemas/possibleMatchBusinessBlock_nationality 
          },
           imageURL : {
             type :  string 
          },
           telephone_number : {
             type :  string 
          },
           fax_number : {
             type :  string 
          },
           mobile_number : {
             type :  string 
          },
           email : {
             $ref :  #/components/schemas/Email 
          },
           pepLevel : {
             type :  string 
          },
           isPEP : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isSanctionsCurrent : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isSanctionsPrevious : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isLawEnforcement : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isFinancialregulator : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isDisqualifiedDirector : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isInsolvent : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           isAdverseMedia : {
             type :  string ,
             enum : [
               true ,
               false 
            ]
          },
           addresses : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/Addresses 
            }
          },
           aliases : {
             type :  array ,
             example : [],
             items : {}
          },
           sanctions : {
             type :  array ,
             example : [],
             items : {}
          },
           notes : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ReportNote 
            }
          },
           linkedBusinesses : {
             type :  array ,
             example : [],
             items : {}
          },
           linkedPersons : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/LinkedPersonReport 
            }
          },
           politicalPositions : {
             type :  array ,
             example : [],
             items : {}
          },
           external_link : {
             type :  object ,
             additionalProperties : {
               type :  array ,
               items : {
                 $ref :  #/components/schemas/Link 
              }
            }
          }
        }
      },
       Link : {
         type :  string 
      },
       LinkedPersonReport : {
         type :  object ,
         properties : {
           personId : {
             type :  number 
          },
           name : {
             type :  string 
          },
           association : {
             type :  string 
          }
        }
      },
       ReportNote : {
         type :  object ,
         properties : {
           dataSource : {
             type :  string 
          },
           text : {
             type :  string 
          }
        }
      },
       Addresses : {
         type :  object ,
         properties : {
           address1 : {
             type :  string 
          },
           address2 : {
             type :  string 
          },
           address3 : {
             type :  string 
          },
           address4 : {
             type :  string 
          },
           city : {
             $ref :  #/components/schemas/Email 
          },
           county : {
             $ref :  #/components/schemas/State 
          },
           postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           country : {
             $ref :  #/components/schemas/Addresses_country 
          }
        }
      },
       CountryCodeLetter : {
         type :  string ,
         example :  USA 
      },
       DateOnly : {
         type :  string ,
         example :  13-06-2000 
      },
       DateTime : {
         type :  string ,
         example :  2022-01-01 12:00:00 
      },
       ReportBlock : {
         type :  object ,
         properties : {
           third_party_source : {
             $ref :  #/components/schemas/ThirdPartySource 
          },
           intelligence_ref : {
             $ref :  #/components/schemas/EntityReference 
          }
        }
      },
       RetrieveIntelligenceRequest : {
         required : [
           application 
        ],
         type :  object ,
         properties : {
           application : {
             $ref :  #/components/schemas/MonitorFullReportDetail_request_reference 
          }
        }
      },
       RetrieveIntelligenceResponse : {
         type :  object ,
         properties : {
           application_reference : {
             $ref :  #/components/schemas/ApplicationRef 
          },
           aml_check_response : {
             $ref :  #/components/schemas/RetrieveIntelligenceResponse_aml_check_response 
          }
        }
      },
       EntityDecisionsBlock : {
         type :  object ,
         properties : {
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           entity_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           decision : {
             type :  string ,
             enum : [
               REFER ,
               PREAPPROVE ,
               APPROVE 
            ]
          },
           name : {
             $ref :  #/components/schemas/Name 
          }
        }
      },
       ThirdPartySource : {
         type :  string ,
         enum : [
           PEP_SANCTION_PRINCIPAL ,
           PEP_SANCTION_BUSINESS ,
           AML_DECISION 
        ]
      },
       IntelligenceReferenceBlock : {
         type :  object ,
         properties : {
           third_party_source : {
             $ref :  #/components/schemas/ThirdPartySource 
          },
           intelligence_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           entities : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EntityBlock 
            }
          }
        }
      },
       EntityBlock : {
         type :  object ,
         properties : {
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           entity_reference : {
             $ref :  #/components/schemas/EntityReference 
          },
           name : {
             $ref :  #/components/schemas/Name 
          }
        }
      },
       EntityType : {
         type :  string ,
         enum : [
           PRINCIPAL ,
           BUSINESS 
        ]
      },
       EntityReference : {
         maxLength : 24,
         minLength : 24,
         type :  string ,
         example :  6234795714d105062c143e92 
      },
       Name : {
         type :  string ,
         example :  Miss Megan Sharp 
      },
       Reviewer : {
         type :  string ,
         example :  John Doe 
      },
       UserName : {
         type :  string ,
         example :  pfac.user 
      },
       Get_Trade_Account_Request : {
         required : [
           currency ,
           date ,
           merchant_id 
        ],
         type :  object ,
         properties : {
           currency : {
             $ref :  #/components/schemas/currency 
          },
           date : {
             $ref :  #/components/schemas/date 
          }
        },
         description :  Get Trade Account Response ,
         allOf : [
          {
             $ref :  #/components/schemas/MerchantInfo 
          }
        ]
      },
       Get_Trade_Account_Response : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           account : {
             $ref :  #/components/schemas/Get_Trade_Account_Response_account 
          }
        },
         description :  Get Trade Account Response 
      },
       Account_Transaction_Search_Response : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           response : {
             $ref :  #/components/schemas/Account_Transaction_Search_Response_response 
          }
        },
         description :  Transaction Search Repose 
      },
       Account_Transaction_Search_Request : {
         required : [
           limit 
        ],
         type :  object ,
         properties : {
           limit : {
             type :  number ,
             description :  The limit on how many transaction reports to retrieve 
          },
           page : {
             type :  number ,
             description :  The page where to get those reports from 
          },
           query : {
             $ref :  #/components/schemas/Account_Transaction_Search_Request_query 
          }
        },
         description :  Transaction Search Request 
      },
       Get_Settlement_Info_Request : {
         required : [
           currency ,
           merchant_id ,
           settlement_date 
        ],
         type :  object ,
         properties : {
           settlement_date : {
             $ref :  #/components/schemas/settlement_date 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          }
        },
         description :  Get Settlement Info Request ,
         allOf : [
          {
             $ref :  #/components/schemas/MerchantInfo 
          }
        ]
      },
       Get_Settlement_Info_Response : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           settlment_summary : {
             type :  array ,
             description :  Settlement Information ,
             items : {
               $ref :  #/components/schemas/Get_Settlement_Info_Response_settlment_summary 
            }
          },
           settlement_details : {
             type :  array ,
             description :  Settlement Details ,
             items : {
               $ref :  #/components/schemas/Get_Settlement_Info_Response_settlement_details 
            }
          },
           instructions_received : {
             type :  array ,
             description :  Instruction ,
             items : {
               $ref :  #/components/schemas/Get_Settlement_Info_Response_instructions_received 
            }
          }
        },
         description :  Response of get settlement rejects 
      },
       Get_Account_Summary_Request : {
         required : [
           currency ,
           date ,
           merchant_id 
        ],
         type :  object ,
         properties : {
           date : {
             $ref :  #/components/schemas/date 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          }
        },
         description :  Get Settlement Info Request ,
         allOf : [
          {
             $ref :  #/components/schemas/MerchantInfo 
          }
        ]
      },
       Get_Account_Summary_Response : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           trade_summary : {
             $ref :  #/components/schemas/Get_Account_Summary_Response_trade_summary 
          },
           account_summary : {
             type :  array ,
             description :  Account Summary ,
             items : {
               $ref :  #/components/schemas/Get_Account_Summary_Response_account_summary 
            }
          }
        },
         description :  Response of get settlement rejects 
      },
       DestinationsBlock : {
         type :  object ,
         properties : {
           amount : {
             multipleOf : 0.01,
             type :  number ,
             description :  Amount for the specified destination 
          },
           destination : {
             type :  string ,
             description :  Destination of the specified amount 
          }
        }
      },
       Release_Reserve_Request : {
         required : [
           accounts ,
           currency ,
           merchant_id ,
           total_amount 
        ],
         type :  object ,
         properties : {
           merchant_id : {
             type :  string ,
             description :  Unique merchant identifier ,
             example :  1121212 
          },
           total_amount : {
             type :  string ,
             description :  Total funding amount ,
             example :  1100.00 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           accounts : {
             $ref :  #/components/schemas/AccountsArrayRelease 
          }
        },
         description :  Instruction request 
      },
       InstructionRequest : {
         required : [
           accounts ,
           currency ,
           merchant_id ,
           total_amount 
        ],
         type :  object ,
         properties : {
           merchant_id : {
             type :  string ,
             description :  Unique merchant identifier ,
             example :  1121212 
          },
           total_amount : {
             type :  string ,
             description :  Total funding amount ,
             example :  1100.00 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           accounts : {
             $ref :  #/components/schemas/AccountsArray 
          }
        },
         description :  Instruction request 
      },
       SplitTransactionRequest : {
         required : [
           accounts ,
           currency ,
           merchant_id ,
           total_amount 
        ],
         type :  object ,
         properties : {
           processing_merchant_id : {
             type :  string ,
             description :  Unique processing merchant identifier who is the owner of this transaction ,
             example :  123456789038 
          },
           amount : {
             type :  string ,
             description :  Total funding amount ,
             example :  100.00 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           transaction_type : {
             $ref :  #/components/schemas/TransactionType 
          },
           transaction_date : {
             $ref :  #/components/schemas/Date 
          },
           transaction_id : {
             $ref :  #/components/schemas/TransactionId 
          },
           authorization_code : {
             $ref :  #/components/schemas/AuthCode 
          },
           invoice_id : {
             $ref :  #/components/schemas/InvoiceID 
          },
           split_details : {
             $ref :  #/components/schemas/TrasnactionSplitDetail 
          }
        },
         description :  Instruction request 
      },
       TrasnactionSplitDetail : {
         type :  array ,
         description :  detail of how much money will be paid to each entity including PFAC and Merchants for Processing and Non-Processing ,
         example : [
          {
             amount :  85.00 ,
             merchant_id :  123456789039 
          },
          {
             amount :  15.00 ,
             merchant_id :  123456789039 
          }
        ],
         items : {
           $ref :  #/components/schemas/TrasnactionSplitDetailBlock 
        }
      },
       TrasnactionSplitDetailBlock : {
         type :  object ,
         properties : {
           amount : {
             type :  string ,
             description :  An amount for this specific MID that get from this transaction ,
             example :  80.00 
          },
           merchant_id : {
             type :  string ,
             description :  MID, can be to Processing Merchant, PFAC, Non-Processing Merchant, Non-processing outlet ,
             example :  1245789998502 
          }
        }
      },
       SplitTransactionResponse : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           summary : {
             $ref :  #/components/schemas/SplitTransactionResponse_summary 
          }
        }
      },
       SplitFundingStatusRequest : {
         type :  object ,
         properties : {
           transaction_id : {
             $ref :  #/components/schemas/TransactionId 
          },
           authorization_code : {
             $ref :  #/components/schemas/AuthCode 
          },
           invoice_id : {
             $ref :  #/components/schemas/InvoiceID 
          },
           transaction_date : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       SplitFundingStatusResponse : {
         type :  object ,
         properties : {
           processing_merchant_id : {
             type :  string ,
             description :  Unique processing merchant identifier who is the owner of this transaction ,
             example :  123456789038 
          },
           amount : {
             type :  string ,
             description :  Total funding amount ,
             example :  100.00 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           transaction_type : {
             $ref :  #/components/schemas/TransactionType 
          },
           transaction_date : {
             $ref :  #/components/schemas/Date 
          },
           transaction_id : {
             $ref :  #/components/schemas/TransactionId 
          },
           authorization_code : {
             $ref :  #/components/schemas/AuthCode 
          },
           invoice_id : {
             $ref :  #/components/schemas/InvoiceID 
          },
           split_details : {
             $ref :  #/components/schemas/TrasnactionSplitDetail 
          },
           status : {
             type :  string ,
             description :  Statue of the split request ,
             example :  SUCCESS ,
             enum : [
               PENDING ,
               SUCCESS ,
               FAILED ,
               REPROCESS ,
               DISCARDED 
            ]
          }
        }
      },
       TransactionType : {
         type :  string ,
         description :  Type of the required split transaction: 1-Purchase, 2-Refund, 3-Chargeback ,
         example :  1 ,
         enum : [
           1 ,
           2 ,
           3 
        ]
      },
       TransactionId : {
         maxLength : 20,
         type :  string ,
         description :  Transaction unique identification (for this PFAC); required if Authorization code and Invoice ID are not provided ,
         example :  123456789X 
      },
       AuthCode : {
         maxLength : 8,
         type :  string ,
         description :  Authorization Code; to be used with Invoice ID as a unique combination for each transaction; required if transaction ID is not provided ,
         example :  1234567X 
      },
       InvoiceID : {
         maxLength : 20,
         type :  string ,
         description :  Invoice ID; to be used with Authorization Code as a unique combination for each transaction; required if transaction ID is not provided ,
         example :  12345678900X 
      },
       Release_Reserve_Response : {
         required : [
           result ,
           summary 
        ],
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           summary : {
             $ref :  #/components/schemas/AccountArrayReleaseReponse 
          }
        },
         description :  Instruction result 
      },
       InstructionResponse : {
         required : [
           result ,
           summary 
        ],
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           summary : {
             $ref :  #/components/schemas/AccountsArrayResponse 
          }
        },
         description :  Instruction result 
      },
       Instruction : {
         required : [
           accounts ,
           merchant_id ,
           total_amount 
        ],
         type :  object ,
         properties : {
           merchant_id : {
             type :  string ,
             description :  Unique merchant identifier ,
             example :  1121212 
          },
           total_amount : {
             type :  string ,
             description :  Total funding amount ,
             example :  1100.00 
          },
           accounts : {
             $ref :  #/components/schemas/AccountsArray 
          }
        },
         description :  A single instruction block 
      },
       settlement_ref : {
         type :  string ,
         description :  Unique identifier of the settlement ref ,
         example :  XYZ 
      },
       currency : {
         type :  string ,
         description :  Currency type ,
         example :  USD ,
         enum : [
           USD 
        ]
      },
       date : {
         type :  string ,
         description :  date ,
         format :  yyyy-mm-dd ,
         example :  2019-08-30T00:00:00.000+0000 
      },
       transaction : {
         type :  object ,
         properties : {
           _id : {
             type :  string ,
             example :  5d54252a26f87b00901404f2 
          },
           alliance_id : {
             type :  string ,
             example :  16000180 
          },
           pfac_node_id : {
             type :  string ,
             example :  19 
          },
           merchant_id : {
             type :  string ,
             example :  5 
          },
           merchant_node_id : {
             type :  string ,
             example :  44 
          },
           outlet_id : {
             type :  string ,
             example :  38 
          },
           record_type : {
             type :  string ,
             example :  003 
          },
           hierarchy_id : {
             type :  string ,
             example :  311970029881 
          },
           hierarchy_level_no : {
             type :  string ,
             example :  60 
          },
           location_id : {
             type :  string ,
             example :  311202575883 
          },
           location_dba_name : {
             type :  string ,
             example :  RENTPAYMENT 
          },
           store_number : {
             type :  string ,
             example :   
          },
           external_id : {
             type :  string ,
             example :  8888000000493032 
          },
           funded_date : {
             type :  string ,
             example :  2019-07-08T00:00:00.000+0000 
          },
           card_type : {
             type :  string ,
             example :  00001 
          },
           card_number : {
             type :  string ,
             example :  5213331209908509 
          },
           terminal_id : {
             type :  string ,
             example :  00000 
          },
           batch_number : {
             type :  string ,
             example :  009070806150 
          },
           batch_date : {
             type :  string ,
             example :  2019-07-08T00:00:00.000+0000 
          },
           authorization_code : {
             type :  string ,
             example :  00881P 
          },
           invoice_id : {
             type :  string ,
             example :  RP64199521 
          },
           reference_number : {
             type :  string ,
             example :  55131589189083324012993 
          },
           transaction_id : {
             type :  string ,
             example :  MCWDV18EB 
          },
           transaction_date : {
             type :  string ,
             example :  2019-07-08T00:00:00.000+0000 
          },
           transaction_amount : {
             type :  number ,
             example : 80
          },
           processed_currency_code : {
             type :  string ,
             example :  840 
          },
           submitted_currency_amount : {
             type :  number ,
             example : 0
          },
           submitted_currency_code : {
             type :  string ,
             example :  840 
          },
           currency_conversion_rate : {
             type :  string ,
             example :  0000000000.000000000 
          },
           transaction_status : {
             type :  string ,
             example :  A 
          },
           reject_indicator : {
             type :  string ,
             example :  N 
          },
           reject_reason : {
             type :  string ,
             example :   
          },
           entry_mode : {
             type :  string ,
             example :  81 
          },
           pc_terminal_capability : {
             type :  string ,
             example :   
          },
           pinless_debit : {
             type :  string ,
             example :  N 
          },
           plan_code : {
             type :  string ,
             example :  M119 
          },
           billback_reason : {
             type :  string ,
             example :   
          },
           reclass_code : {
             type :  string ,
             example :   
          },
           partial_auth_indicator : {
             type :  string ,
             example :   
          },
           transaction_type : {
             type :  string ,
             example :  5 
          },
           transaction_mode : {
             type :  string ,
             example :  E 
          },
           transaction_source : {
             type :  string ,
             example :  BT 
          },
           health_care_card : {
             type :  string ,
             example :   
          },
           authorization_amount : {
             type :  number ,
             example : 80
          },
           authorization_date : {
             type :  string ,
             example :  0021-07-07T00:00:00.000+0000 
          },
           transaction_time : {
             type :  string ,
             example :  0800:00:00 
          },
           expiration_date : {
             type :  string ,
             example :  01 
          },
           authorization_sic_code : {
             type :  string ,
             example :  2265 
          },
           avs_flag : {
             type :  string ,
             example :  1 
          },
           response_code : {
             type :  string ,
             example :  3 
          },
           cvc2_result : {
             type :  string ,
             example :   
          },
           cvv2_result : {
             type :  string ,
             example :   
          },
           special_reference_1 : {
             type :  string ,
             example :  +000000000000.00+0000000 
          },
           special_reference_2 : {
             type :  string ,
             example :  00000.00      000000.0000 
          },
           authorization_response_code : {
             type :  string ,
             example :  0 
          },
           convenience_fee_amount : {
             type :  number ,
             example : 0
          },
           submerchant_id : {
             type :  string ,
             example :  0.00      000000.000 
          },
           soft_descriptor : {
             type :  string ,
             example :  0+000000000000.00      000000.00 
          },
           bank_reference_number : {
             type :  string ,
             example :  00+000000000000.00 
          },
           auth_source : {
             type :  string ,
             example :   
          },
           cat_level : {
             type :  string ,
             example :   
          },
           cardholder_id_method : {
             type :  string ,
             example :   
          },
           card_presence_indicator : {
             type :  string ,
             example :   
          },
           merchant_reference_number : {
             type :  string ,
             example :  000000.00 
          },
           total_auth_amount : {
             type :  number ,
             example : 0
          },
           market_specific_indicator : {
             type :  string ,
             example :  0 
          },
           visa_service_develop : {
             type :  string ,
             example :  0 
          },
           visa_purchase_identifier_format : {
             type :  string ,
             example :   
          },
           visa_purchase_identifier : {
             type :  string ,
             example :  000000.0000+00000000 
          },
           visa_chip_condition_code : {
             type :  string ,
             example :  0 
          },
           mc_security_protocol : {
             type :  string ,
             example :  0 
          },
           mc_cardholder_authentication : {
             type :  string ,
             example :  0 
          },
           transaction_country : {
             type :  string ,
             example :  0.0 
          },
           transaction_charges : {
             type :  number ,
             example : 0
          },
           capture_method : {
             type :  string ,
             example :   
          },
           usage_indicator : {
             type :  string ,
             example :   
          },
           airline_ticket_number : {
             type :  string ,
             example :   
          },
           transaction_integrity_class : {
             type :  string ,
             example :   
          },
           mobile_indicator : {
             type :  string ,
             example :  RP 
          },
           user_data_2 : {
             type :  string ,
             example :  64199521                                        00          103274              YPS*BLACK HILLS SELF S                               64732401299 
          },
           posting_charge_description_1 : {
             type :  string ,
             example :  +000000000000.00                             21Y    +000000000000 
          },
           charge_type_1 : {
             type :  string ,
             example :  000000.00         00 
          },
           tran_type_1 : {
             type :  string ,
             example :  0000.0000+000000000000.00 
          },
           service_id_1 : {
             type :  string ,
             example :  000000.0000+00000 
          },
           fee_category_1 : {
             type :  string ,
             example :  0000000.00      0000 
          },
           charge_amount_1 : {
             type :  number ,
             example : 0
          },
           posting_charge_description_2 : {
             type :  string ,
             example :  00      000000.0000+000000000000.00      000000.0000+000000000000 
          },
           charge_type_2 : {
             type :  string ,
             example :  .00C 
          },
           tran_type_2 : {
             type :  string ,
             example :  0 
          },
           service_id_2 : {
             type :  string ,
             example :  0 
          },
           fee_category_2 : {
             type :  string ,
             example :  0.0960+000000000000. 
          },
           charge_amount_2 : {
             type :  number ,
             example : 395
          },
           posting_charge_description_3 : {
             type :  string ,
             example :  0000+000000000000.00 
          },
           charge_type_3 : {
             type :  string ,
             example :   
          },
           tran_type_3 : {
             type :  string ,
             example :   
          },
           service_id_3 : {
             type :  string ,
             example :   
          },
           fee_category_3 : {
             type :  string ,
             example :   
          },
           charge_amount_3 : {
             type :  number ,
             example : 0
          },
           posting_charge_description_4 : {
             type :  string ,
             example :   
          },
           charge_type_4 : {
             type :  string ,
             example :   
          },
           tran_type_4 : {
             type :  string ,
             example :   
          },
           service_id_4 : {
             type :  string ,
             example :   
          },
           fee_category_4 : {
             type :  string ,
             example :   
          },
           charge_amount_4 : {
             type :  number ,
             example : 0
          },
           posting_charge_description_5 : {
             type :  string ,
             example :   
          },
           charge_type_5 : {
             type :  string ,
             example :   
          },
           tran_type_5 : {
             type :  string ,
             example :   
          },
           service_id_5 : {
             type :  string ,
             example :   
          },
           fee_category_5 : {
             type :  string ,
             example :   
          },
           charge_amount_5 : {
             type :  number ,
             example : 0
          },
           date_added : {
             $ref :  #/components/schemas/date 
          }
        },
         description :  Transaction data 
      },
       exactDate : {
         type :  string ,
         description :  Date and time ,
         format :  yyyy-mm-dd hh-mm-ss ,
         example :  2019-09-13T14:49:19.000+0000 
      },
       settlement_date : {
         type :  string ,
         description :  Settlement date ,
         format :  yyyy-mm-dd ,
         example :  2019-08-30T00:00:00.000+0000 
      },
       settlement_type : {
         type :  string ,
         description :  The type of settlement, credit or debit ,
         example :  DEBIT ,
         enum : [
           DEBIT ,
           CREDIT 
        ]
      },
       settlement_status : {
         type :  string ,
         description :  The status of the settlement ,
         example :  PENDING ,
         enum : [
           PENDING ,
           REJECTED ,
           PROCESSING 
        ]
      },
       settlement_category : {
         type :  string ,
         description :  The category of settlement ,
         example :  REJECT_REPROCESS ,
         enum : [
           REJECT_REPROCESS ,
           REVENUE 
        ]
      },
       amount : {
         multipleOf : 0.01,
         type :  number ,
         description :  The amount in this balance ,
         example : 140.5
      },
       dda : {
         type :  string ,
         description :  Demand Deposit Account (DDA) number ,
         example :  *****1234 
      },
       aba : {
         type :  string ,
         description :  American Banks Association (ABA) routing number ,
         example :  123456789 
      },
       effective_date : {
         type :  string ,
         description :  Effective date ,
         format :  yyyy-mm-dd ,
         example :  2019-08-30T00:00:00.000+0000 
      },
       Reprocess_Settlement_RejectRequest : {
         required : [
           settlement_ref 
        ],
         type :  object ,
         properties : {
           settlement_ref : {
             $ref :  #/components/schemas/settlement_ref 
          }
        }
      },
       Reprocess_Settlement_RejectResponse : {
         type :  object ,
         properties : {
           reject_info : {
             $ref :  #/components/schemas/Reprocess_Settlement_RejectResponse_reject_info 
          }
        },
         description :  Returns the transaction details of the new settlement transaction (with the new ref under reprocess_settlement_ref)  
      },
       Get_Settlement_Reject_Request : {
         required : [
           merchant_id ,
           reject_date ,
           settlement_date 
        ],
         type :  object ,
         properties : {
           reject_date : {
             $ref :  #/components/schemas/date 
          },
           settlement_date : {
             $ref :  #/components/schemas/date 
          }
        },
         description :  Get a list of all rejected settlement transactions under a PFAC and the related merchants. Can be filtered to only display certain transactions. ,
         allOf : [
          {
             $ref :  #/components/schemas/MerchantInfo 
          }
        ]
      },
       reject_reason_code : {
         type :  string ,
         description :  The code for the rejection reason ,
         example :  XXX 
      },
       Get_Settlement_Reject_Response : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           rejected_transaction : {
             type :  array ,
             description :  Rejected Transactions ,
             items : {
               $ref :  #/components/schemas/Get_Settlement_Reject_Response_rejected_transaction 
            }
          }
        },
         description :  Response of get settlement rejects 
      },
       Account : {
         required : [
           account_type ,
           amount 
        ],
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           amount : {
             type :  string ,
             description :  Amount to be funded to this account 
          }
        },
         description :  An account block 
      },
       AccountResponse : {
         required : [
           account_type ,
           balance 
        ],
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           balance : {
             type :  string ,
             description :  Amount for this account ,
             example :  100 
          }
        },
         description :  An account block 
      },
       AccountArrayReleaseReponse : {
         type :  array ,
         description :  Response of the reserve release request ,
         example : [
          {
             account_type :  RESERVE_DEDUCTION_ACCOUNT ,
             balance :  0.10 
          },
          {
             account_type :  RESERVE_RELEASE_ACCOUNT ,
             balance :  0.00 
          },
          {
             account_type :  RESERVE_ACCOUNT ,
             balance :  205.01 
          },
          {
             account_type :  ROLLING_RESERVE_ACCOUNT ,
             balance :  0.00 
          }
        ],
         items : {
           $ref :  #/components/schemas/AccountArrayReleaseReponse_inner 
        }
      },
       AccountsArrayRelease : {
         type :  array ,
         description :  Array of merchant's accounts: at least one account is required ,
         example : [
          {
             account_type :  RESERVE_DEDUCTION_ACCOUNT ,
             amount :  1000.00 ,
             release_reason :  Chargeback Recovery 
          },
          {
             account_type :  RESERVE_RELEASE_ACCOUNT ,
             amount :  100.00 ,
             release_reason :  Reserve Limit Decrease 
          }
        ],
         items : {
           $ref :  #/components/schemas/AccountsArrayRelease_inner 
        }
      },
       AccountsArray : {
         type :  array ,
         description :  Array of merchant's accounts: at least one account is required ,
         example : [
          {
             account_type :  REVENUE_ACCOUNT ,
             amount :  1000.00 
          },
          {
             account_type :  FEE_ACCOUNT ,
             amount :  100.00 
          }
        ],
         items : {
           $ref :  #/components/schemas/Account 
        }
      },
       AccountsArrayResponse : {
         type :  array ,
         description :  Array of merchant's accounts: all accounts is required ,
         example : [
          {
             account_type :  REVENUE_ACCOUNT ,
             balance :  1000.00 
          },
          {
             account_type :  FEE_ACCOUNT ,
             balance :  100.00 
          },
          {
             account_type :  SERVICE_FEE_ACCOUNT ,
             balance :  0.00 
          },
          {
             account_type :  RESERVE_ACCOUNT ,
             balance :  0.00 
          },
          {
             account_type :  CHARGEBACK_ACCOUNT ,
             balance :  0.00 
          }
        ],
         items : {
           $ref :  #/components/schemas/AccountResponse 
        }
      },
       AccountType : {
         type :  string ,
         description :  An account type ,
         example :  REVENUE_ACCOUNT ,
         enum : [
           REVENUE_ACCOUNT ,
           FEE_ACCOUNT ,
           SERVICE_FEE_ACCOUNT ,
           RESERVE_ACCOUNT ,
           CHARGEBACK_ACCOUNT 
        ]
      },
       InstructionDetailsResponse : {
         required : [
           operation ,
           request_source ,
           result ,
           summary 
        ],
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           summary : {
             $ref :  #/components/schemas/InstructionDetailsResponse_summary 
          }
        },
         description :  Instruction detail result 
      },
       Get_Account_Balance_Request : {
         required : [
           account_type ,
           currency ,
           merchant_id 
        ],
         type :  object ,
         properties : {
           currency : {
             $ref :  #/components/schemas/currency 
          },
           account_type : {
             $ref :  #/components/schemas/AccountType 
          }
        },
         description :  The operation to be performed on this endpoint ,
         allOf : [
          {
             $ref :  #/components/schemas/MerchantInfo 
          }
        ]
      },
       Get_Account_Balance_Response : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           account : {
             $ref :  #/components/schemas/Get_Account_Balance_Response_account 
          }
        },
         description :  The response of the get account balance request 
      },
       InstructionDetails_OperationType : {
         type :  string ,
         description :  FUNDING_DETAILS_INSTRUCTION ,
         example :  FUNDING_DETAILS_INSTRUCTION ,
         enum : [
           FUNDING_DETAILS_INSTRUCTION 
        ]
      },
       InstructionDetails : {
         required : [
           accounts ,
           currency ,
           merchant_id ,
           total_amount 
        ],
         type :  object ,
         properties : {
           merchant_id : {
             type :  string ,
             description :  Unique merchant identifier ,
             example :  1121212 
          },
           total_amount : {
             type :  string ,
             description :  Total funding amount ,
             example :  1100.00 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           accounts : {
             $ref :  #/components/schemas/AccountsDetailsArray 
          }
        },
         description :  A single instruction detail block 
      },
       AccountsDetailsArray : {
         type :  array ,
         description :  Array of merchant's account details: at least one accout is required ,
         example : [
          {
             account_type :  REVENUE_ACCOUNT ,
             amount :  550.00 ,
             details : {
               item_key :   ,
               item_name :   ,
               item_description :   ,
               item_amount :   
            }
          },
          {
             account_type :  FEE_ACCOUNT ,
             amount :  550.00 ,
             details : {
               item_key :   ,
               item_name :   ,
               item_description :   ,
               item_amount :   
            }
          }
        ],
         items : {
           $ref :  #/components/schemas/AccountDetail 
        }
      },
       AccountDetail : {
         required : [
           account_type ,
           amount ,
           details 
        ],
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           amount : {
             type :  string ,
             description :  Amount to be funded to this account 
          },
           details : {
             required : [
               item_amount ,
               item_key 
            ],
             type :  array ,
             description :  Detail of this account ,
             items : {
               $ref :  #/components/schemas/AccountDetails 
            }
          }
        },
         description :  An account detail block 
      },
       AccountDetails : {
         properties : {
           item_key : {
             $ref :  #/components/schemas/ItemKey 
          },
           item_name : {
             $ref :  #/components/schemas/ItemName 
          },
           item_description : {
             $ref :  #/components/schemas/ItemDescription 
          },
           item_amount : {
             $ref :  #/components/schemas/ItemAmount 
          }
        },
         description :  Details of this Account 
      },
       InstructionBatchResponse : {
         required : [
           operation ,
           request_source ,
           result ,
           summary 
        ],
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           summary : {
             $ref :  #/components/schemas/InstructionBatchResponse_summary 
          }
        },
         description :  Instruction batch result 
      },
       InstructionBatch_Operation_Response : {
         type :  object ,
         properties : {
           operation_type : {
             $ref :  #/components/schemas/InstructionBatch_OperationType 
          }
        },
         description :  The operation to be performed on this endpoint 
      },
       InstructionBatch_OperationType : {
         type :  string ,
         description :  FUNDING_BATCH_INSTRUCTION ,
         example :  FUNDING_BATCH_INSTRUCTION ,
         enum : [
           FUNDING_BATCH_INSTRUCTION 
        ]
      },
       InstructionBatchRequest : {
         required : [
           batch_number ,
           batch_total_amount ,
           batch_total_merchant ,
           merchants 
        ],
         type :  object ,
         properties : {
           batch_number : {
             $ref :  #/components/schemas/BatchNumber 
          },
           batch_total_merchant : {
             $ref :  #/components/schemas/BatchTotalMerchant 
          },
           batch_total_amount : {
             $ref :  #/components/schemas/BatchTotalAmount 
          },
           merchants : {
             $ref :  #/components/schemas/Merchants 
          }
        },
         description :  A batch instruction for merchants 
      },
       Merchants : {
         type :  array ,
         description :  Array of instructions fir each merchant ,
         items : {
           $ref :  #/components/schemas/Instruction 
        }
      },
       InstructionBatchDetailsResponse : {
         required : [
           operation ,
           request_source ,
           result ,
           summary 
        ],
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           summary : {
             $ref :  #/components/schemas/InstructionBatchResponse_summary 
          }
        },
         description :  Instruction batch detail result 
      },
       InstructionBatchDetails_Operation : {
         required : [
           operation_type 
        ],
         type :  object ,
         properties : {
           operation_type : {
             $ref :  #/components/schemas/InstructionBatchDetails_OperationType 
          }
        },
         description :  The operation to be performed on this endpoint ,
         example : {
           operation_type :  FUNDING_BATCH_DETAILS_INSTRUCTION 
        }
      },
       InstructionBatchDetails_Operation_Response : {
         type :  object ,
         properties : {
           operation_type : {
             $ref :  #/components/schemas/InstructionBatchDetails_OperationType 
          }
        },
         description :  The operation to be performed on this endpoint 
      },
       InstructionBatchDetails_OperationType : {
         type :  string ,
         description :  FUNDING_BATCH_DETAILS_INSTRUCTION ,
         example :  FUNDING_BATCH_DETAILS_INSTRUCTION ,
         enum : [
           FUNDING_BATCH_DETAILS_INSTRUCTION 
        ]
      },
       InstructionDetailBatch : {
         required : [
           batch_number ,
           batch_total_amount ,
           batch_total_merchant ,
           merchants 
        ],
         type :  object ,
         properties : {
           batch_number : {
             $ref :  #/components/schemas/BatchNumber 
          },
           batch_total_merchant : {
             $ref :  #/components/schemas/BatchTotalMerchant 
          },
           batch_total_amount : {
             $ref :  #/components/schemas/BatchTotalAmount 
          },
           merchants : {
             $ref :  #/components/schemas/BatchMerchants 
          }
        },
         description :  A batch instruction detail for merchants 
      },
       BatchMerchants : {
         type :  array ,
         description :  Array of instructions for merchants ,
         items : {
           $ref :  #/components/schemas/InstructionDetails 
        }
      },
       BatchNumber : {
         type :  string ,
         description :  A batch identifier ,
         example :  2 
      },
       BatchTotalMerchant : {
         type :  string ,
         description :  Total merchants in the batch ,
         example :  2 
      },
       BatchTotalAmount : {
         type :  string ,
         description :  Total amount in the batch ,
         example :  2200.00 
      },
       ItemKey : {
         type :  string ,
         description :  Item key 
      },
       ItemDescription : {
         type :  string ,
         description :  Item description 
      },
       ItemAmount : {
         type :  string ,
         description :  Item amount 
      },
       RetrieveAccountBalanceRequest : {
         required : [
           account ,
           operation ,
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          },
           operation : {
             $ref :  #/components/schemas/RetrieveAccountBalance_Operation 
          },
           merchant : {
             $ref :  #/components/schemas/MerchantInfo 
          },
           account : {
             $ref :  #/components/schemas/RetrieveAccountBalance 
          }
        },
         description :  Instruction batch request 
      },
       RetrieveAccountBalanceResponse : {
         required : [
           accounts ,
           operation ,
           request_source ,
           result 
        ],
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          },
           operation : {
             $ref :  #/components/schemas/RetrieveAccountBalance_Operation 
          },
           accounts : {
             $ref :  #/components/schemas/AccountResponse 
          }
        },
         description :  Balance of each account 
      },
       RetrieveAccountBalance_Operation : {
         required : [
           operation_type 
        ],
         type :  object ,
         properties : {
           operation_type : {
             $ref :  #/components/schemas/RetrieveAccountBalance_OperationType 
          }
        },
         description :  The operation to be performed on this endpoint ,
         example : {
           operation_type :  RETRIEVE_ACCOUNT_BALANCE 
        }
      },
       RetrieveAccountBalance_OperationType : {
         type :  string ,
         description :  RETRIEVE_ACCOUNT_BALANCE ,
         example :  RETRIEVE_ACCOUNT_BALANCE ,
         enum : [
           RETRIEVE_ACCOUNT_BALANCE 
        ]
      },
       RetrieveAccountBalance : {
         type :  array ,
         description :  Array required accounts ,
         example : [
          {
             account_type :  REVENUE_ACCOUNT 
          }
        ],
         items : {
           $ref :  #/components/schemas/RetrieveAccountList 
        }
      },
       MerchantInfo : {
         type :  object ,
         properties : {
           merchant_id : {
             type :  string ,
             description :  Unique merchant identifier ,
             example :  000000000000 
          }
        },
         description :  Merchant Information 
      },
       hierarchy : {
         type :  string ,
         description :  Merchant hierarchy ,
         enum : [
           PFAC ,
           SUBMERCHANT 
        ]
      },
       merchant_id_optional : {
         type :  string ,
         description :  __Conditional__ only provided if hierarchy is __SUBMERCHANT__ , unique merchant identifier ,
         example :  000000000000 
      },
       reprocessed : {
         type :  string ,
         description :  0: NO , 1: YES ,
         example :  1 
      },
       RetrieveAccountList : {
         required : [
           account_type 
        ],
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          }
        },
         description :  An account block 
      },
       Error : {
         required : [
           error ,
           result 
        ],
         type :  object ,
         properties : {
           result : {
             type :  string ,
             description :  ERROR, always provide ,
             example :  ERROR 
          },
           error : {
             $ref :  #/components/schemas/ErrorMessage 
          }
        }
      },
       ErrorMessage : {
         required : [
           cause ,
           code ,
           explanation ,
           reference 
        ],
         type :  object ,
         properties : {
           cause : {
             $ref :  #/components/schemas/Cause 
          },
           code : {
             type :  string ,
             description :  Always Provided ,
             example :  11-11-1111 
          },
           reference : {
             type :  string ,
             description :  Always Provided ,
             example :  IP_5C498C675DCD5699525335 
          },
           explanation : {
             type :  string ,
             description :  Always Provided ,
             example :  The request has been rejected 
          }
        },
         description :  Error detail 
      },
       Cause : {
         type :  string ,
         description :  Always Provided: To return the cause for the Error ,
         example :  REQUEST_REJECTED ,
         enum : [
           REQUEST_REJECTED ,
           INVALID_REQUEST ,
           REQUEST_FAILED ,
           SYSTEM_ERROR ,
           INVALID_OPERATION ,
           VALIDATION_ERROR ,
           FILE_OPERATION ,
           HTTP_ERROR ,
           THIRD_PARTY_ERROR 
        ]
      },
       ListAvailableOffersOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  LIST_AVAILABLE_OFFERINGS ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       ProcessingOffersOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  RETRIEVE_PROCESSING_OFFERING ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       EquipmentOffersOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  RETRIEVE_EQUIPMENT_OFFERING ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       AddNonProcessingApplicationOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  ADD_APPLICATION ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       ApplicationStatusCheckOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  APPLICATION_STATUS_CHECK ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       AddApplicationOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  ADD_APPLICATION ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       AddSubGroupOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  ADD_MERCHANT_SUB_GROUP ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       AddOutletOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  ADD_OUTLET ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       ApplicationRetrieveOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  RETRIEVE_MERCHANT_HIERARCHY ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       ApplicationSubmissionOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  APPLICATION_SUBMIT ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       GeneralOperation : {
         required : [
           operation_type ,
           version 
        ],
         type :  object ,
         properties : {
           operation_type : {
             maxLength : 30,
             type :  string ,
             description :  The type of the operation 
          },
           version : {
             maxLength : 6,
             type :  string ,
             description :  The version of the operation 
          }
        }
      },
       AddNonProcessingApplicationRequest : {
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          },
           merchant : {
             $ref :  #/components/schemas/NonProcMerchant 
          },
           outlet : {
             $ref :  #/components/schemas/NonProcOutlet 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddNonProcessingApplicationOperation 
          }
        ]
      },
       NonProcMerchant : {
         type :  object ,
         properties : {
           business_entity : {
             $ref :  #/components/schemas/NonProcBusinessEntity 
          },
           registration_address : {
             $ref :  #/components/schemas/AddressBlock 
          },
           owners : {
             $ref :  #/components/schemas/Owners 
          }
        }
      },
       NonProcBusinessEntity : {
         type :  object ,
         properties : {
           legal_name : {
             $ref :  #/components/schemas/LegalName 
          },
           ownership_entity_type : {
             $ref :  #/components/schemas/BusinessLegalEntity 
          },
           reg_number : {
             $ref :  #/components/schemas/RegNumber 
          },
           business_tin_ssn_number : {
             $ref :  #/components/schemas/TinNumber 
          },
           irs_status : {
             $ref :  #/components/schemas/IrsStatus 
          },
           irs_filing_name : {
             $ref :  #/components/schemas/IrsName 
          },
           tin_type : {
             $ref :  #/components/schemas/TinType 
          },
           int_tax_id : {
             $ref :  #/components/schemas/TaxID 
          },
           mcc_code : {
             $ref :  #/components/schemas/MCC 
          },
           date_incorporated : {
             $ref :  #/components/schemas/Date 
          },
           incorp_state : {
             $ref :  #/components/schemas/State 
          },
           foundation_date : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       NonProcOutlet : {
         type :  object ,
         properties : {
           trade_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           currencies : {
             $ref :  #/components/schemas/Currency 
          },
           banks : {
             $ref :  #/components/schemas/Bank 
          },
           contacts : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/NonProcContact 
            }
          }
        }
      },
       NonProcContact : {
         type :  object ,
         properties : {
           contact_type : {
             type :  string ,
             description :  Contact type ,
             enum : [
               L ,
               B ,
               OT 
            ]
          },
           contact_title : {
             $ref :  #/components/schemas/Title 
          },
           contact_first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           contact_second_name : {
             $ref :  #/components/schemas/SecondName 
          },
           contact_last_name : {
             $ref :  #/components/schemas/LastName 
          },
           email_address : {
             $ref :  #/components/schemas/Email 
          },
           ent_telephone_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           telephone_number : {
             $ref :  #/components/schemas/PhoneNumber 
          },
           ent_alternative_phone_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           alternative_phone_number : {
             $ref :  #/components/schemas/PhoneNumber 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddressBlock 
          }
        ]
      },
       AddNonProcessingApplicationResponse : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddNonProcessingApplicationOperation 
          },
          {
             $ref :  #/components/schemas/NonProcessingMerchantResponseBlock 
          },
          {
             $ref :  #/components/schemas/NonProcessingOutletResponseBlock 
          }
        ]
      },
       ListAvailableOffersRequest : {
         type :  object ,
         allOf : [
          {
             $ref :  #/components/schemas/ListAvailableOffersOperation 
          },
          {
             $ref :  #/components/schemas/OfferingCreiteria 
          }
        ]
      },
       ListAvailableOffersResponse : {
         type :  object ,
         additionalProperties : {
           $ref :  #/components/schemas/PackageBlock 
        }
      },
       RequestedProcessingOffer : {
         type :  object ,
         properties : {
           processing_offering : {
             $ref :  #/components/schemas/RequestedProcessingOffer_processing_offering 
          }
        }
      },
       RequestedEquipmentOffer : {
         type :  object ,
         properties : {
           equipment_offering : {
             $ref :  #/components/schemas/RequestedEquipmentOffer_equipment_offering 
          }
        }
      },
       ProcessingOffersRequest : {
         type :  object ,
         allOf : [
          {
             $ref :  #/components/schemas/ProcessingOffersOperation 
          },
          {
             $ref :  #/components/schemas/RequestedProcessingOffer 
          }
        ]
      },
       ProcessingOffersResponse : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           charge_item_groups : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ChargeItemGroupRetrieve 
            }
          },
           service_charge_items : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ServiceItemsRetrieve 
            }
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/ProcessingOffersOperation 
          }
        ]
      },
       EquipmentOffersRequest : {
         type :  object ,
         allOf : [
          {
             $ref :  #/components/schemas/EquipmentOffersOperation 
          },
          {
             $ref :  #/components/schemas/RequestedEquipmentOffer 
          }
        ]
      },
       EquipmentOffersResponse : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          },
           equipment_offering : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EquipmentRetrieve 
            }
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/EquipmentOffersOperation 
          }
        ]
      },
       EquipmentRetrieve : {
         type :  object ,
         properties : {
           offering_name : {
             $ref :  #/components/schemas/OfferingName 
          },
           equipment_offering_ref : {
             $ref :  #/components/schemas/Reference 
          },
           equipment_terminal_network : {
             $ref :  #/components/schemas/ProductNetwork 
          },
           acquiring_only : {
             $ref :  #/components/schemas/AcqOnly 
          },
           is_dcc : {
             $ref :  #/components/schemas/DCC 
          },
           currency : {
             $ref :  #/components/schemas/Currency 
          },
           is_online_offering : {
             $ref :  #/components/schemas/IsOnline 
          },
           language_code : {
             $ref :  #/components/schemas/Currency 
          },
           date_added : {
             $ref :  #/components/schemas/OfferDate 
          },
           status : {
             $ref :  #/components/schemas/ItemStatus 
          },
           equipment_offering_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           equipment_offering_bundles : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/BundleItemsRetrieve 
            }
          }
        }
      },
       BundleItemsRetrieve : {
         type :  object ,
         properties : {
           equipment_bundle_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           bundle_name : {
             $ref :  #/components/schemas/ItemName 
          },
           individual_item_only : {
             $ref :  #/components/schemas/IsIndividual 
          },
           bundle_ref : {
             $ref :  #/components/schemas/Reference 
          },
           bundle_type : {
             $ref :  #/components/schemas/BundleType 
          },
           status : {
             $ref :  #/components/schemas/ItemStatus 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           bundle_items : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/BundleItemRetrieve 
            }
          }
        }
      },
       BundleItemRetrieve : {
         type :  object ,
         properties : {
           equipment_bundle_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           is_mandatory : {
             $ref :  #/components/schemas/IsMandatory 
          },
           is_invisible : {
             $ref :  #/components/schemas/IsInvisible 
          },
           equipment : {
             $ref :  #/components/schemas/EquipmentItemRetrieve 
          },
           billing_plans : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/BillingPlanRetrieve 
            }
          }
        }
      },
       BillingPlanRetrieve : {
         type :  object ,
         properties : {
           minimum_charge : {
             $ref :  #/components/schemas/MinimumCharge 
          },
           maximum_charge : {
             $ref :  #/components/schemas/MaximumCharge 
          },
           default_charge : {
             $ref :  #/components/schemas/DefaultCharge 
          },
           billing_method_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           billing_method_name : {
             $ref :  #/components/schemas/ItemName 
          },
           billing_type : {
             $ref :  #/components/schemas/BillingType 
          },
           billing_method_ref : {
             $ref :  #/components/schemas/Reference 
          },
           equipment_bundle_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          }
        }
      },
       EquipmentItemRetrieve : {
         type :  object ,
         properties : {
           equipment_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           equipment_name : {
             $ref :  #/components/schemas/ItemName 
          },
           equipment_manufacturer : {
             $ref :  #/components/schemas/EquipmentManufac 
          },
           equipment_api_code : {
             $ref :  #/components/schemas/APICode 
          },
           equipment_type_code : {
             $ref :  #/components/schemas/EquipmentType 
          },
           supplier_code : {
             $ref :  #/components/schemas/ExtID 
          },
           equipment_pos_type : {
             $ref :  #/components/schemas/PosType 
          },
           equipment_description : {
             $ref :  #/components/schemas/ItemDesc 
          },
           is_service : {
             $ref :  #/components/schemas/IsService 
          },
           is_dcc : {
             $ref :  #/components/schemas/DCC 
          }
        }
      },
       IsService : {
         type :  string ,
         description :  If this is Equippment or Services/Online Services ,
         enum : [
           1 ,
           0 
        ]
      },
       PosType : {
         type :  string ,
         description :  If this is Equippment is terminal or accessory ,
         enum : [
           ACCESSORY ,
           POS 
        ]
      },
       ItemDesc : {
         type :  string ,
         description :  Item/Product Description 
      },
       IsIndividual : {
         type :  string ,
         description :  If this is an individual item or bundle: 1 Equipment/Product 2 Bundle ,
         enum : [
           1 ,
           2 
        ]
      },
       BundleType : {
         type :  string ,
         description :  Is the bundle created by system or user: 1 System 2 User ,
         enum : [
           1 ,
           2 
        ]
      },
       IsOnline : {
         type :  string ,
         description :  If the offer id online offering: 1 Yes 0 No ,
         enum : [
           1 ,
           0 
        ]
      },
       ServiceItemsRetrieve : {
         type :  object ,
         properties : {
           service_charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           acquirer_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           service_item_name : {
             $ref :  #/components/schemas/ItemName 
          },
           service_item_type : {
             type :  string 
          },
           service_frequency : {
             type :  string 
          },
           processing_platform : {
             $ref :  #/components/schemas/Platform 
          },
           order_by : {
             $ref :  #/components/schemas/Order 
          },
           service_ownership : {
             type :  string 
          },
           charge_decimals : {
             $ref :  #/components/schemas/Decimal 
          },
           item_status : {
             $ref :  #/components/schemas/ItemStatus 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           date_added : {
             $ref :  #/components/schemas/OfferDate 
          },
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           is_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           is_mandatory : {
             $ref :  #/components/schemas/IsMandatory 
          },
           is_invisible : {
             $ref :  #/components/schemas/IsInvisible 
          },
           service_item_charges : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ServiceChargeItemRetrieveBlock 
            }
          },
           charges : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ServiceChargesRetrieveBlock 
            }
          }
        }
      },
       ServiceChargeItemRetrieveBlock : {
         type :  object ,
         properties : {
           fee_type : {
             $ref :  #/components/schemas/FeeType 
          },
           minimum_base_charge : {
             $ref :  #/components/schemas/MinimumCharge 
          },
           maximum_base_charge : {
             $ref :  #/components/schemas/MaximumCharge 
          },
           default_base_charge : {
             $ref :  #/components/schemas/DefaultCharge 
          },
           minimum_perc_charge : {
             $ref :  #/components/schemas/MinimumPerc 
          },
           maximum_perc_charge : {
             $ref :  #/components/schemas/MaximumPerc 
          },
           default_perc_charge : {
             $ref :  #/components/schemas/DefaultPerc 
          },
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           service_charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          }
        }
      },
       ServiceChargesRetrieveBlock : {
         type :  object ,
         properties : {
           service_charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           fee_type : {
             $ref :  #/components/schemas/FeeType 
          },
           minimum_base_charge : {
             $ref :  #/components/schemas/MinimumCharge 
          },
           maximum_base_charge : {
             $ref :  #/components/schemas/MaximumCharge 
          },
           default_base_charge : {
             $ref :  #/components/schemas/DefaultCharge 
          },
           minimum_perc_charge : {
             $ref :  #/components/schemas/MinimumPerc 
          },
           maximum_perc_charge : {
             $ref :  #/components/schemas/MaximumPerc 
          },
           default_perc_charge : {
             $ref :  #/components/schemas/DefaultPerc 
          },
           status : {
             $ref :  #/components/schemas/ItemStatus 
          }
        }
      },
       ChargeItemGroupRetrieve : {
         type :  object ,
         properties : {
           charge_item_group_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           acquirer_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           processing_platform : {
             $ref :  #/components/schemas/Platform 
          },
           fee_collection_type : {
             $ref :  #/components/schemas/FeeCollection 
          },
           charge_item_group_name : {
             $ref :  #/components/schemas/ItemName 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           date_added : {
             $ref :  #/components/schemas/OfferDate 
          },
           order_by : {
             type :  string ,
             description :  Group order in this offering 
          },
           item_status : {
             $ref :  #/components/schemas/ItemStatus 
          },
           charge_items : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ChargeItemRetrieve 
            }
          }
        }
      },
       ChargeItemRetrieve : {
         type :  object ,
         properties : {
           charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           acquirer_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           processing_platform : {
             $ref :  #/components/schemas/Platform 
          },
           charge_item_name : {
             $ref :  #/components/schemas/ItemName 
          },
           charge_item_ref : {
             $ref :  #/components/schemas/Reference 
          },
           fee_collection_type : {
             $ref :  #/components/schemas/FeeCollection 
          },
           is_merged_charges : {
             $ref :  #/components/schemas/MergeredCharge 
          },
           charge_decimals : {
             $ref :  #/components/schemas/Decimal 
          },
           order_by : {
             $ref :  #/components/schemas/Order 
          },
           item_status : {
             $ref :  #/components/schemas/ItemStatus 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           date_added : {
             $ref :  #/components/schemas/OfferDate 
          },
           charges : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ChargesRetrieveBlock 
            }
          },
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           charge_item_group_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           is_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           is_mandatory : {
             $ref :  #/components/schemas/IsMandatory 
          },
           is_invisible : {
             $ref :  #/components/schemas/IsInvisible 
          },
           is_default_other_charges : {
             $ref :  #/components/schemas/IsDefault 
          },
           charge_item_prices : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ChargeItemsRetrieveBlock 
            }
          }
        }
      },
       ChargesRetrieveBlock : {
         type :  object ,
         properties : {
           charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           category : {
             $ref :  #/components/schemas/ChargeCategory 
          },
           fee_type : {
             $ref :  #/components/schemas/FeeType 
          },
           minimum_base_charge : {
             $ref :  #/components/schemas/MinimumCharge 
          },
           maximum_base_charge : {
             $ref :  #/components/schemas/MaximumCharge 
          },
           default_base_charge : {
             $ref :  #/components/schemas/DefaultCharge 
          },
           minimum_perc_charge : {
             $ref :  #/components/schemas/MinimumPerc 
          },
           maximum_perc_charge : {
             $ref :  #/components/schemas/MaximumPerc 
          },
           default_perc_charge : {
             $ref :  #/components/schemas/DefaultPerc 
          },
           status : {
             $ref :  #/components/schemas/ItemStatus 
          }
        }
      },
       ChargeItemsRetrieveBlock : {
         type :  object ,
         properties : {
           charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           charge_item_group_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           tier_number : {
             $ref :  #/components/schemas/TierNumber 
          },
           category : {
             $ref :  #/components/schemas/ChargeCategory 
          },
           fee_type : {
             $ref :  #/components/schemas/FeeType 
          },
           minimum_base_charge : {
             $ref :  #/components/schemas/MinimumCharge 
          },
           maximum_base_charge : {
             $ref :  #/components/schemas/MaximumCharge 
          },
           default_base_charge : {
             $ref :  #/components/schemas/DefaultCharge 
          },
           minimum_perc_charge : {
             $ref :  #/components/schemas/MinimumPerc 
          },
           maximum_perc_charge : {
             $ref :  #/components/schemas/MaximumPerc 
          },
           default_perc_charge : {
             $ref :  #/components/schemas/DefaultPerc 
          }
        }
      },
       TierNumber : {
         type :  string ,
         description :  Level of the tier for this pricing 
      },
       IsDefault : {
         type :  string ,
         description :  If the item will be used as a defaulted price for managed funding: 1 Yes 0 No ,
         enum : [
           1 ,
           0 
        ]
      },
       ItemStatus : {
         type :  string ,
         description :  If the item is Active: 1 Yes 0 No ,
         enum : [
           1 ,
           0 
        ]
      },
       OfferDate : {
         type :  string ,
         description :  Available date of the package from: yyyy-mm-dd hh:mm:ss ,
         example :  2021-01-01T00:00:00.000+0000 
      },
       Order : {
         type :  string ,
         description :  Item order in this offering 
      },
       PackageBlock : {
         type :  object ,
         properties : {
           package_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           package_name : {
             maxLength : 50,
             type :  string ,
             description :  Offering Package name 
          },
           offer_code : {
             maxLength : 50,
             type :  string ,
             description :  Offering Code 
          },
           package_weight : {
             maxLength : 50,
             type :  string ,
             description :  Package weight to prioritise the list of the package 
          },
           package_channel : {
             type :  string ,
             description :  1 for Assisted Boarding 2 for Self-Boarding 3 for Both ,
             enum : [
               1 ,
               2 ,
               3 
            ]
          },
           package_status : {
             type :  string ,
             description :  1 Active 2 Inactive ,
             enum : [
               1 ,
               2 
            ]
          },
           offer_code_from : {
             type :  string ,
             description :  Available date of the package from: yyyy-dd-mm 00:00:00 ,
             example :  2021-01-01T00:00:00.000+0000 
          },
           offer_code_to : {
             type :  string ,
             description :  Available date of the package until: yyyy-dd-mm 00:00:00 ,
             example :  2021-01-12T00:00:00.000+0000 
          },
           offer_code_status : {
             type :  string ,
             description :  Offer code active: 1 Active 2 Inactive ,
             example :  1 
          },
           processing_offers : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ProcessingOfferPackage 
            }
          },
           equipment_offers : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EQorOnlineOfferPackage 
            }
          },
           online_offers : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EQorOnlineOfferPackage 
            }
          }
        },
         description :  Each object will have the Package name as a key 
      },
       EQorOnlineOfferPackage : {
         type :  object ,
         properties : {
           offering_name : {
             $ref :  #/components/schemas/OfferingName 
          },
           equipment_terminal_network : {
             $ref :  #/components/schemas/ProductNetwork 
          },
           acquiring_only : {
             $ref :  #/components/schemas/AcqOnly 
          },
           equipment_offering_ref : {
             $ref :  #/components/schemas/Reference 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           is_dcc : {
             $ref :  #/components/schemas/DCC 
          },
           equipment_offering_external_id : {
             $ref :  #/components/schemas/ExtID 
          }
        }
      },
       ProcessingOfferPackage : {
         type :  object ,
         properties : {
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           acquirer_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           processing_platform : {
             $ref :  #/components/schemas/Platform 
          },
           transaction_pricing_name : {
             $ref :  #/components/schemas/OfferingName 
          },
           fee_collection_type : {
             $ref :  #/components/schemas/FeeCollection 
          },
           currency : {
             $ref :  #/components/schemas/Currency 
          },
           is_tier_price : {
             type :  string ,
             description :  If the offer support teir pricing: 1 Yes 0 No ,
             enum : [
               1 ,
               0 
            ]
          },
           tier_price_type : {
             type :  string ,
             description :  Level of tier ,
             example :  1 
          },
           tiers : {
             $ref :  #/components/schemas/PricingTiers 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          }
        }
      },
       ProductNetwork : {
         type :  string ,
         description :  Marketplace Product Network ,
         enum : [
           NASHVILLE ,
           CARDNET ,
           BUYPASS ,
           COMPASS ,
           SOUTH ,
           FDR 
        ]
      },
       DCC : {
         type :  string ,
         description :  The item support Dynamic Currency Converter: 1 Yes, 0 No ,
         enum : [
           1 ,
           0 
        ]
      },
       AcqOnly : {
         type :  string ,
         description :  The Application only require Acquiring service: 1 Yes, 0 No ,
         enum : [
           1 ,
           0 
        ]
      },
       OfferingName : {
         maxLength : 50,
         type :  string ,
         description :  Offering name 
      },
       PricingTiers : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/PricingTiers_inner 
        }
      },
       OfferingCreiteria : {
         type :  object ,
         properties : {
           criteria : {
             $ref :  #/components/schemas/Criteria 
          }
        }
      },
       Criteria : {
         required : [
           alliance_code 
        ],
         type :  object ,
         properties : {
           alliance_code : {
             $ref :  #/components/schemas/AllianceCode 
          },
           partner_code : {
             $ref :  #/components/schemas/PartnerCode 
          },
           mcc : {
             $ref :  #/components/schemas/MCC 
          },
           atv : {
             $ref :  #/components/schemas/ATV 
          },
           ato : {
             $ref :  #/components/schemas/ATO 
          },
           business_address : {
             $ref :  #/components/schemas/Criteria_business_address 
          }
        }
      },
       RequestSource : {
         required : [
           alliance_code ,
           initiator 
        ],
         type :  object ,
         properties : {
           initiator : {
             type :  string ,
             description :  Required, The initiator of the request ,
             example :  ALLIANCE ,
             enum : [
               ALLIANCE 
            ]
          },
           alliance_code : {
             $ref :  #/components/schemas/AllianceCode 
          }
        },
         description :  Request source ,
         example : {
           initiator :  ALLIANCE ,
           alliance_code :  PFAC 
        }
      },
       AllianceCode : {
         maxLength : 20,
         minLength : 6,
         type :  string ,
         description :  Unique identifier of a ALLIANCE ,
         example :  PFAC 
      },
       PartnerCode : {
         maxLength : 20,
         minLength : 6,
         type :  string ,
         description :  Unique identifier of a PARTNER ,
         example :  PFAC_PARTNER 
      },
       error : {
         required : [
           error ,
           result 
        ],
         type :  object ,
         properties : {
           result : {
             type :  string ,
             description :  __[Always Provided]__: ,
             example :  Error 
          },
           error : {
             $ref :  #/components/schemas/error_error 
          }
        }
      },
       Result : {
         type :  string ,
         description :  __[ Always Provided ]__ ,
         example :  SUCCESS ,
         enum : [
           SUCCESS 
        ]
      },
       error_response : {
         allOf : [
          {
             $ref :  #/components/schemas/error 
          }
        ]
      },
       ApplicationStatusCheckResponseBlock : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/ApplicationStatusCheckOperation 
          },
          {
             $ref :  #/components/schemas/ApplicationStatusResponseBlock 
          },
          {
             $ref :  #/components/schemas/errorsarray 
          }
        ]
      },
       ApplicationStatusResponseBlock : {
         type :  object ,
         properties : {
           application : {
             $ref :  #/components/schemas/ApplicationStatus 
          }
        }
      },
       ApplicationStatus : {
         type :  object ,
         properties : {
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           sales_owner_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           creator_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           external_mid : {
             $ref :  #/components/schemas/MID 
          },
           legal_name : {
             $ref :  #/components/schemas/LegalName 
          },
           contact_country_code : {
             $ref :  #/components/schemas/Country 
          },
           hold_suspend_flag : {
             $ref :  #/components/schemas/HoldSuspend 
          },
           settlement_method : {
             $ref :  #/components/schemas/SettlementMethod 
          },
           parent_type : {
             $ref :  #/components/schemas/ParentType 
          },
           reserve_flag : {
             $ref :  #/components/schemas/ReserveFlag 
          },
           country_code : {
             $ref :  #/components/schemas/Country 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          },
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           status_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           application_status_key : {
             $ref :  #/components/schemas/ApplicationStatusKey 
          }
        }
      },
       ApplicationStatusKey : {
         type :  string ,
         description :  Key for Application Status ,
         example :  OPEN 
      },
       errorsarray : {
         type :  object ,
         properties : {
           errors : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ApplicationError 
            }
          }
        }
      },
       ApplicationError : {
         type :  object ,
         properties : {
           error_code : {
             $ref :  #/components/schemas/AppErrorCode 
          },
           message : {
             $ref :  #/components/schemas/AppErrorMessage 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       AppErrorCode : {
         type :  string ,
         description :  Error code associated with the application ,
         example :  1126302 
      },
       AppErrorMessage : {
         type :  string ,
         description :  Error associated with the application ,
         example :  Business Information is invalid - The depth 1 of the hierarchy tree in the application is not equal to the depth 3 configured in the hierarchy config template. 
      },
       ApplicationStatusCheckRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/ApplicationStatusCheckOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          }
        ]
      },
       ApplicationRetrieveResponse : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/ApplicationRetrieveOperation 
          },
          {
             $ref :  #/components/schemas/ApplicationFullDetail 
          }
        ]
      },
       ApplicationRetrieveRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/ApplicationRetrieveOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          }
        ]
      },
       ApplicationSubmissionRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/ApplicationSubmissionOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          }
        ]
      },
       AddApplicationRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddApplicationOperation 
          },
          {
             $ref :  #/components/schemas/ApplicationRequestBlock 
          }
        ]
      },
       ApplicationResponseBlock : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddApplicationOperation 
          },
          {
             $ref :  #/components/schemas/MerchantResponseBlock 
          },
          {
             $ref :  #/components/schemas/SubGroupResponseBlock 
          }
        ]
      },
       AddSubGroupRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddSubGroupOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          },
          {
             $ref :  #/components/schemas/SubGroupRequestBlock 
          }
        ]
      },
       AddSubGroupResponseBlock : {
         type :  object ,
         properties : {
           result : {
             $ref :  #/components/schemas/Result 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddSubGroupOperation 
          },
          {
             $ref :  #/components/schemas/MerchantShortResponseBlock 
          },
          {
             $ref :  #/components/schemas/SubGroupResponseBlock 
          }
        ]
      },
       AddOutletRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddOutletOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          },
          {
             $ref :  #/components/schemas/AddOutletRequestBlock 
          }
        ]
      },
       AddOutletResponseBlock : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/Result 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddOutletOperation 
          },
          {
             $ref :  #/components/schemas/MerchantShortResponseBlock 
          },
          {
             $ref :  #/components/schemas/OutletResponseBlock 
          }
        ]
      },
       UpdateMerchantRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/UpdateMerchantOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          },
          {
             $ref :  #/components/schemas/UpdateMerchantBlock 
          }
        ]
      },
       UpdateMerchantBlock : {
         type :  object ,
         properties : {
           merchant : {
             $ref :  #/components/schemas/MerchantUpdate 
          }
        }
      },
       UpdateMerchantOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  UPDATE_MERCHANT ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       MerchantUpdate : {
         type :  object ,
         properties : {
           billing_level : {
             $ref :  #/components/schemas/BillingLevel 
          },
           funding_level : {
             $ref :  #/components/schemas/FundingLevel 
          },
           pricing_level : {
             $ref :  #/components/schemas/PricingLevel 
          },
           settlement_method : {
             $ref :  #/components/schemas/SettlementMethod 
          },
           chargeback_settlement_method : {
             $ref :  #/components/schemas/ChargebackSettlementMethod 
          },
           allow_split_flag : {
             $ref :  #/components/schemas/AllowSplitFlag 
          },
           split_level : {
             $ref :  #/components/schemas/SplitLevel 
          },
           take_reserves_flag : {
             $ref :  #/components/schemas/TakeReservesFlag 
          },
           reserve_entity_level : {
             $ref :  #/components/schemas/ReserveEntityLevel 
          },
           business_entity : {
             $ref :  #/components/schemas/BusinessEntity 
          },
           registration_address : {
             $ref :  #/components/schemas/AddressBlock 
          },
           owners : {
             $ref :  #/components/schemas/Owners 
          },
           acquiring_offer : {
             $ref :  #/components/schemas/AcquiringOffering 
          },
           merchant_sub_group : {
             $ref :  #/components/schemas/SubGroup 
          }
        }
      },
       UpdateSubGroupRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/UpdateSubGroupOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          },
          {
             $ref :  #/components/schemas/SubGroupRequestBlock 
          }
        ]
      },
       applicationref : {
         required : [
           operation_type ,
           version 
        ],
         type :  object ,
         properties : {
           application : {
             $ref :  #/components/schemas/applicationref_application 
          }
        }
      },
       UpdateSubGroupOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  UPDATE_MERCHANT_SUB_GROUP ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       UpdateOutletRequest : {
         required : [
           request_source 
        ],
         type :  object ,
         properties : {
           request_source : {
             $ref :  #/components/schemas/RequestSource 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/UpdateOutletOperation 
          },
          {
             $ref :  #/components/schemas/applicationref 
          },
          {
             $ref :  #/components/schemas/UpdateOutletRequestBlock 
          }
        ]
      },
       UpdateOutletOperation : {
         required : [
           operation 
        ],
         type :  object ,
         properties : {
           operation : {
             description :  Operation ,
             example : {
               operation_type :  UPDATE_OUTLET ,
               version :  2.0.0 
            },
             allOf : [
              {
                 $ref :  #/components/schemas/GeneralOperation 
              }
            ]
          }
        }
      },
       UpdateOutletRequestBlock : {
         type :  object ,
         properties : {
           outlet : {
             $ref :  #/components/schemas/OutletRequest 
          }
        }
      },
       OutletResponseBlock : {
         type :  object ,
         properties : {
           outlet : {
             $ref :  #/components/schemas/OutletResponse 
          }
        }
      },
       ApplicationRequestBlock : {
         required : [
           merchant 
        ],
         type :  object ,
         properties : {
           merchant : {
             $ref :  #/components/schemas/Merchant 
          }
        }
      },
       MerchantResponseBlock : {
         type :  object ,
         properties : {
           merchant : {
             $ref :  #/components/schemas/MerchantResponse 
          }
        }
      },
       SubGroupResponseBlock : {
         type :  object ,
         properties : {
           merchant_sub_groups : {
             $ref :  #/components/schemas/SubGroupResponse 
          }
        }
      },
       SubGroupRequestBlock : {
         type :  object ,
         properties : {
           merchant_sub_group : {
             $ref :  #/components/schemas/SubGroup 
          }
        }
      },
       MerchantShortResponseBlock : {
         type :  object ,
         properties : {
           merchant : {
             $ref :  #/components/schemas/MerchantShort 
          }
        }
      },
       AddOutletRequestBlock : {
         type :  object ,
         properties : {
           outlet : {
             $ref :  #/components/schemas/OutletRequest 
          }
        }
      },
       NonProcessingMerchantResponseBlock : {
         type :  object ,
         properties : {
           merchant : {
             $ref :  #/components/schemas/NonProcMerchantShort 
          }
        }
      },
       NonProcessingOutletResponseBlock : {
         type :  object ,
         properties : {
           outlet : {
             $ref :  #/components/schemas/NonProcessingOutletResponse 
          }
        }
      },
       ApplicationFullDetail : {
         type :  object ,
         properties : {
           application_relation : {
             $ref :  #/components/schemas/ApplicationRelation 
          },
           alliance : {
             $ref :  #/components/schemas/AllianceDetail 
          },
           application : {
             $ref :  #/components/schemas/MerchantResponse 
          },
           outlets : {
             $ref :  #/components/schemas/OutletArray 
          },
           merchant_sub_groups : {
             $ref :  #/components/schemas/SubGroupArray 
          },
           merchant_hierarchy : {
             $ref :  #/components/schemas/HeirarchyArray 
          },
           tree_descendants : {
             $ref :  #/components/schemas/Tree 
          },
           merchant_hierarchy_configuration_templates : {
             $ref :  #/components/schemas/HierarchyTemplate 
          },
           substatuses : {
             $ref :  #/components/schemas/SubStatus 
          }
        }
      },
       OutletArray : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/OutletResponse 
        }
      },
       SubGroupArray : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/SubGroupResponse 
        }
      },
       HeirarchyArray : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/Hierarchy 
        }
      },
       Tree : {
         type :  object ,
         additionalProperties : {
           $ref :  #/components/schemas/HierarchyTree 
        },
         description :  External ID of the Node 
      },
       HierarchyTemplate : {
         type :  object ,
         additionalProperties : {
           $ref :  #/components/schemas/NodeTemplate 
        },
         description :  External ID of the Node 
      },
       SubStatus : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/SubStatusObject 
        }
      },
       SubStatusObject : {
         type :  object ,
         properties : {
           substatus_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           application_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           status : {
             $ref :  #/components/schemas/Status 
          }
        }
      },
       HierarchyTree : {
         type :  object ,
         properties : {
           ancestor : {
             $ref :  #/components/schemas/HierarchyTreeObject 
          },
           descendants : {
             $ref :  #/components/schemas/HierarchyTreeObject 
          }
        }
      },
       HierarchyTreeObject : {
         type :  object ,
         properties : {
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          }
        },
         description :  Node above or under the object 
      },
       NodeTemplate : {
         type :  object ,
         properties : {
           merchant_hierarchy_template_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_hierarchy_config_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           page_config_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           entity_type : {
             $ref :  #/components/schemas/HierarchyEntityType 
          },
           hierarchy_depth : {
             $ref :  #/components/schemas/HierarchyDepth 
          },
           status : {
             $ref :  #/components/schemas/Status 
          }
        }
      },
       Hierarchy : {
         type :  object ,
         properties : {
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           ancestor_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           descendant_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           billing_flag : {
             $ref :  #/components/schemas/BillingFlag 
          },
           funding_flag : {
             $ref :  #/components/schemas/FundingFlag 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           hold_suspend_flag : {
             $ref :  #/components/schemas/HoldSuspend 
          },
           depth : {
             $ref :  #/components/schemas/HierarchyDepth 
          },
           entity_type : {
             $ref :  #/components/schemas/HierarchyEntityType 
          }
        }
      },
       HierarchyDepth : {
         type :  string ,
         description :  Level in the Hierarchy ,
         example :  1 
      },
       HierarchyEntityType : {
         type :  string ,
         description :  Type of the node int he hierarchy ,
         example :  SUB_MERCHANT_GROUP 
      },
       AllianceDetail : {
         type :  object ,
         properties : {
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           time_zone_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_code : {
             $ref :  #/components/schemas/AllianceCode 
          },
           alliance_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           contact_company_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           contact_title : {
             $ref :  #/components/schemas/Title 
          },
           contact_firstname : {
             $ref :  #/components/schemas/FirstName 
          },
           contact_surname : {
             $ref :  #/components/schemas/LastName 
          },
           contact_address1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           contact_address2 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           contact_town_city : {
             $ref :  #/components/schemas/City 
          },
           contact_county : {
             $ref :  #/components/schemas/State 
          },
           contact_postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           contact_country : {
             $ref :  #/components/schemas/Country 
          },
           contact_phone_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           contact_phone : {
             $ref :  #/components/schemas/PhoneNumber 
          },
           contact_mobile_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           contact_mobile : {
             $ref :  #/components/schemas/PhoneNumber 
          },
           contact_email : {
             $ref :  #/components/schemas/Email 
          },
           default_currency : {
             $ref :  #/components/schemas/Currency 
          },
           default_language : {
             $ref :  #/components/schemas/Language 
          },
           allowed_alt_languages : {
             $ref :  #/components/schemas/Language 
          },
           status : {
             $ref :  #/components/schemas/Status 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           pfac_mode : {
             $ref :  #/components/schemas/Status 
          },
           hold_suspend_flag : {
             $ref :  #/components/schemas/HoldSuspend 
          }
        }
      },
       ApplicationRelation : {
         type :  object ,
         properties : {
           _id : {
             $ref :  #/components/schemas/SystemID 
          },
           application_reference : {
             $ref :  #/components/schemas/Reference 
          },
           business_id : {
             $ref :  #/components/schemas/SystemID 
          },
           merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           main_owner : {
             $ref :  #/components/schemas/SystemID 
          },
           main_outlet : {
             $ref :  #/components/schemas/SystemID 
          },
           total_outlets : {
             $ref :  #/components/schemas/TotalNode 
          },
           total_subgroups : {
             $ref :  #/components/schemas/TotalNode 
          },
           owner : {
             $ref :  #/components/schemas/OwnerRefArray 
          },
           merchant_sub_group : {
             $ref :  #/components/schemas/SubGroupRefArray 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       OwnerRefArray : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/OwnerRef 
        }
      },
       OwnerRef : {
         type :  object ,
         properties : {
           owner_id : {
             $ref :  #/components/schemas/SystemID 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       SubGroupRefArray : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/SubGroupRef 
        }
      },
       SubGroupRef : {
         type :  object ,
         properties : {
           sub_group_id : {
             $ref :  #/components/schemas/NodeID 
          },
           sub_group_data_id : {
             $ref :  #/components/schemas/SystemID 
          },
           merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           parent_mid : {
             $ref :  #/components/schemas/MID 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       TotalNode : {
         type :  string ,
         description :  Total Node under the merchant hierarchy ,
         example :  1 
      },
       Merchant : {
         required : [
           business_entity ,
           owners ,
           registration_address 
        ],
         type :  object ,
         properties : {
           billing_level : {
             $ref :  #/components/schemas/BillingLevel 
          },
           funding_level : {
             $ref :  #/components/schemas/FundingLevel 
          },
           pricing_level : {
             $ref :  #/components/schemas/PricingLevel 
          },
           settlement_method : {
             $ref :  #/components/schemas/SettlementMethod 
          },
           chargeback_settlement_method : {
             $ref :  #/components/schemas/ChargebackSettlementMethod 
          },
           allow_split_flag : {
             $ref :  #/components/schemas/AllowSplitFlag 
          },
           split_level : {
             $ref :  #/components/schemas/SplitLevel 
          },
           take_reserves_flag : {
             $ref :  #/components/schemas/TakeReservesFlag 
          },
           reserve_entity_level : {
             $ref :  #/components/schemas/ReserveEntityLevel 
          },
           business_entity : {
             $ref :  #/components/schemas/BusinessEntity 
          },
           registration_address : {
             $ref :  #/components/schemas/AddressBlock 
          },
           owners : {
             $ref :  #/components/schemas/Owners 
          },
           acquiring_offer : {
             $ref :  #/components/schemas/AcquiringOffering 
          },
           merchant_sub_group : {
             $ref :  #/components/schemas/SubGroup 
          }
        }
      },
       MerchantResponse : {
         type :  object ,
         properties : {
           merchant_hierarchy_config_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_hierarchy_template_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           sales_owner_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           creator_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_status_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_data_id : {
             $ref :  #/components/schemas/SystemID 
          },
           parent_type : {
             $ref :  #/components/schemas/ParentType 
          },
           status_id : {
             $ref :  #/components/schemas/Status 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           external_mid : {
             $ref :  #/components/schemas/MID 
          },
           legal_name : {
             $ref :  #/components/schemas/LegalName 
          },
           contact_title : {
             $ref :  #/components/schemas/Title 
          },
           contact_first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           contact_last_name : {
             $ref :  #/components/schemas/LastName 
          },
           contact_address1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           contact_town_city : {
             $ref :  #/components/schemas/City 
          },
           contact_county : {
             $ref :  #/components/schemas/State 
          },
           contact_postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           contact_country_code : {
             $ref :  #/components/schemas/Country 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          },
           billing_level : {
             $ref :  #/components/schemas/BillingLevel 
          },
           funding_level : {
             $ref :  #/components/schemas/FundingLevel 
          },
           pricing_level : {
             $ref :  #/components/schemas/PricingLevel 
          },
           settlement_method : {
             $ref :  #/components/schemas/SettlementMethod 
          },
           chargeback_settlement_method : {
             $ref :  #/components/schemas/ChargebackSettlementMethod 
          },
           allow_split_flag : {
             $ref :  #/components/schemas/AllowSplitFlag 
          },
           split_level : {
             $ref :  #/components/schemas/SplitLevel 
          },
           take_reserves_flag : {
             $ref :  #/components/schemas/TakeReservesFlag 
          },
           reserve_entity_level : {
             $ref :  #/components/schemas/ReserveEntityLevel 
          },
           business_entity : {
             $ref :  #/components/schemas/BusinessEntity 
          },
           registration_address : {
             $ref :  #/components/schemas/AddressBlock 
          },
           merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           communication_language\  : {
             $ref :  #/components/schemas/Language 
          },
           pos_language : {
             $ref :  #/components/schemas/Language 
          },
           owners : {
             $ref :  #/components/schemas/Owners 
          },
           application_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           application_reference : {
             $ref :  #/components/schemas/ApplicationRef 
          },
           multiple_outlet : {
             type :  string ,
             description :  Is multiple outlet? - 1: Yes 0: No 
          },
           application_status_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           charges : {
             $ref :  #/components/schemas/Charges 
          }
        }
      },
       MerchantShort : {
         type :  object ,
         properties : {
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           sales_owner_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           creator_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           external_mid : {
             $ref :  #/components/schemas/MID 
          },
           legal_name : {
             $ref :  #/components/schemas/LegalName 
          },
           contact_title : {
             $ref :  #/components/schemas/Title 
          },
           contact_first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           contact_last_name : {
             $ref :  #/components/schemas/LastName 
          },
           contact_address1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           contact_town_city : {
             $ref :  #/components/schemas/City 
          },
           contact_county : {
             $ref :  #/components/schemas/State 
          },
           contact_postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           contact_country_code : {
             $ref :  #/components/schemas/Country 
          },
           contact_position : {
             $ref :  #/components/schemas/Position 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           reserve_entity_level : {
             $ref :  #/components/schemas/ReserveEntityLevel 
          },
           reserve_flag : {
             $ref :  #/components/schemas/ReserveFlag 
          },
           hold_suspend_flag : {
             $ref :  #/components/schemas/HoldSuspend 
          },
           settlement_method : {
             $ref :  #/components/schemas/SettlementMethod 
          },
           registration_address : {
             $ref :  #/components/schemas/AddressBlock 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       NonProcMerchantShort : {
         type :  object ,
         properties : {
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           sales_owner_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           creator_user_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           external_mid : {
             $ref :  #/components/schemas/MID 
          },
           non_processing_flag : {
             $ref :  #/components/schemas/non_processing_flag 
          },
           legal_name : {
             $ref :  #/components/schemas/LegalName 
          },
           contact_title : {
             $ref :  #/components/schemas/Title 
          },
           contact_first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           contact_last_name : {
             $ref :  #/components/schemas/LastName 
          },
           contact_address1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           contact_town_city : {
             $ref :  #/components/schemas/City 
          },
           contact_county : {
             $ref :  #/components/schemas/State 
          },
           contact_postcode : {
             $ref :  #/components/schemas/ZipCode 
          },
           contact_country_code : {
             $ref :  #/components/schemas/Country 
          },
           contact_position : {
             $ref :  #/components/schemas/Position 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           reserve_entity_level : {
             $ref :  #/components/schemas/ReserveEntityLevel 
          },
           reserve_flag : {
             $ref :  #/components/schemas/ReserveFlag 
          },
           hold_suspend_flag : {
             $ref :  #/components/schemas/HoldSuspend 
          },
           settlement_method : {
             $ref :  #/components/schemas/SettlementMethod 
          },
           registration_address : {
             $ref :  #/components/schemas/AddressBlock 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       SubGroupResponse : {
         type :  object ,
         properties : {
           sub_group_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_hierarchy_template_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           sub_group_data_id : {
             $ref :  #/components/schemas/SystemID 
          },
           subgroup_type : {
             $ref :  #/components/schemas/SubGroupType 
          },
           parent_mid : {
             $ref :  #/components/schemas/MID 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           group_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           root_merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           language_code : {
             $ref :  #/components/schemas/Language 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          },
           billing_flag : {
             $ref :  #/components/schemas/BillingFlag 
          },
           funding_flag : {
             $ref :  #/components/schemas/FundingFlag 
          },
           reserve_flag : {
             $ref :  #/components/schemas/ReserveFlag 
          },
           delay_funding_flag : {
             $ref :  #/components/schemas/DelayFundingFlag 
          },
           contacts : {
             $ref :  #/components/schemas/Contacts 
          },
           banks : {
             $ref :  #/components/schemas/Bank 
          },
           accounts_setup_flag : {
             type :  string 
          }
        }
      },
       OutletRequest : {
         required : [
           curr_code ,
           mcc_code ,
           parent_mid ,
           trade_name 
        ],
         type :  object ,
         properties : {
           parent_mid : {
             $ref :  #/components/schemas/MID 
          },
           trade_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           outlet_website : {
             $ref :  #/components/schemas/WebSite 
          },
           store_number : {
             $ref :  #/components/schemas/StoreNumber 
          },
           business_zone : {
             $ref :  #/components/schemas/BusinessZone 
          },
           business_location : {
             $ref :  #/components/schemas/BusinessLocation 
          },
           ground_floor : {
             $ref :  #/components/schemas/GroundFloor 
          },
           square_foot_count : {
             $ref :  #/components/schemas/SqFtCount 
          },
           number_of_building_floors : {
             $ref :  #/components/schemas/NoBuildingFloors 
          },
           visitation_required : {
             $ref :  #/components/schemas/VisitationRequired 
          },
           statement_type : {
             $ref :  #/components/schemas/StatementType 
          },
           external_mid : {
             $ref :  #/components/schemas/MID 
          },
           clearing_bank : {
             $ref :  #/components/schemas/SettlementBank 
          },
           funding_bank : {
             $ref :  #/components/schemas/SettlementBank 
          },
           number_of_employees : {
             $ref :  #/components/schemas/MID 
          },
           primary_email_address : {
             $ref :  #/components/schemas/Email 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           additional_information : {
             $ref :  #/components/schemas/AdditionalInformation 
          },
           mcc_code : {
             $ref :  #/components/schemas/MCC 
          },
           curr_code : {
             $ref :  #/components/schemas/Currency 
          },
           mastercard_sales : {
             $ref :  #/components/schemas/SaleAmount 
          },
           visa_sales : {
             $ref :  #/components/schemas/SaleAmount 
          },
           visa_mastercard_sales : {
             $ref :  #/components/schemas/SaleAmount 
          },
           discover_volume : {
             $ref :  #/components/schemas/SaleAmount 
          },
           amex_volume : {
             $ref :  #/components/schemas/SaleAmount 
          },
           telecheck_annual_volume : {
             $ref :  #/components/schemas/SaleAmount 
          },
           voyager_annual_volume : {
             $ref :  #/components/schemas/SaleAmount 
          },
           debit_se_number : {
             $ref :  #/components/schemas/DeditSE 
          },
           amex_type : {
             $ref :  #/components/schemas/AMEXType 
          },
           turnover_bus_to_bus_perc : {
             $ref :  #/components/schemas/PercentValue 
          },
           turnover_bus_to_cons_perc : {
             $ref :  #/components/schemas/PercentValue 
          },
           card_bus_to_bus_perc : {
             $ref :  #/components/schemas/PercentValue 
          },
           card_bus_to_cons_perc : {
             $ref :  #/components/schemas/PercentValue 
          },
           highest_ticket_sales_amt : {
             $ref :  #/components/schemas/HighestTV 
          },
           sales_ftf_perc : {
             $ref :  #/components/schemas/SalePerc 
          },
           sales_keyed_perc : {
             $ref :  #/components/schemas/SalePerc 
          },
           sales_phone_perc : {
             $ref :  #/components/schemas/SalePerc 
          },
           sales_mail_perc : {
             $ref :  #/components/schemas/SalePerc 
          },
           sales_internet_perc : {
             $ref :  #/components/schemas/SalePerc 
          },
           sales_tradeshow_perc : {
             $ref :  #/components/schemas/SalePerc 
          },
           chip_flag : {
             $ref :  #/components/schemas/ChipFlag 
          },
           recurring_flag : {
             $ref :  #/components/schemas/RecurringFlag 
          },
           transaction_process_mode : {
             $ref :  #/components/schemas/TransProcessMode 
          },
           annual_turnover : {
             $ref :  #/components/schemas/ATO 
          },
           annual_card_turnover : {
             $ref :  #/components/schemas/CardATO 
          },
           average_delivery_days : {
             $ref :  #/components/schemas/DeliveryDay 
          },
           delivery_0_days_perc : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_1_to_7_days_perc : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_8_to_14_days_perc : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_15_to_30_days_perc : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_over_30_days_perc : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           prod_serv_sold : {
             $ref :  #/components/schemas/AdditionalInformation 
          },
           sales_moto_perc : {
             $ref :  #/components/schemas/PercentValue 
          },
           avg_ticket_sales_amt : {
             $ref :  #/components/schemas/ATV 
          },
           banks : {
             $ref :  #/components/schemas/Bank 
          },
           contacts : {
             $ref :  #/components/schemas/Contacts 
          },
           equipment_offer : {
             $ref :  #/components/schemas/EquipmentOffering 
          },
           online_offer : {
             $ref :  #/components/schemas/OnlineOffering 
          }
        }
      },
       OutletResponse : {
         type :  object ,
         properties : {
           merchant_hierarchy_template_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           outlet_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           root_merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           pfac_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           billing_flag : {
             $ref :  #/components/schemas/BillingFlag 
          },
           billing_frequency : {
             $ref :  #/components/schemas/SettlementFrequency 
          },
           funding_flag : {
             $ref :  #/components/schemas/FundingFlag 
          },
           funding_frequency : {
             $ref :  #/components/schemas/SettlementFrequency 
          },
           delay_funding_flag : {
             $ref :  #/components/schemas/DelayFundingFlag 
          },
           funding_delay_days : {
             $ref :  #/components/schemas/DelayFundingDays 
          },
           reserve_flag : {
             $ref :  #/components/schemas/ReserveFlag 
          },
           reserve_type : {
             $ref :  #/components/schemas/ReserveType 
          },
           set_reserve_target : {
             $ref :  #/components/schemas/SetTargetReserve 
          },
           outlet_ref : {
             $ref :  #/components/schemas/SystemID 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           external_mid : {
             $ref :  #/components/schemas/MID 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/OutletRequest 
          }
        ]
      },
       NonProcessingOutletResponse : {
         type :  object ,
         properties : {
           merchant_hierarchy_template_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           outlet_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           pfac_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           root_merchant_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           pfac_node_id : {
             $ref :  #/components/schemas/NodeID 
          },
           billing_flag : {
             $ref :  #/components/schemas/BillingFlag 
          },
           billing_frequency : {
             $ref :  #/components/schemas/SettlementFrequency 
          },
           funding_flag : {
             $ref :  #/components/schemas/FundingFlag 
          },
           funding_frequency : {
             $ref :  #/components/schemas/SettlementFrequency 
          },
           delay_funding_flag : {
             $ref :  #/components/schemas/DelayFundingFlag 
          },
           funding_delay_days : {
             $ref :  #/components/schemas/DelayFundingDays 
          },
           reserve_flag : {
             $ref :  #/components/schemas/ReserveFlag 
          },
           reserve_type : {
             $ref :  #/components/schemas/ReserveType 
          },
           set_reserve_target : {
             $ref :  #/components/schemas/SetTargetReserve 
          },
           outlet_ref : {
             $ref :  #/components/schemas/SystemID 
          },
           internal_mid : {
             $ref :  #/components/schemas/MID 
          },
           external_mid : {
             $ref :  #/components/schemas/MID 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/NonProcOutlet 
          }
        ]
      },
       OnlineOffering : {
         type :  object ,
         properties : {
           equipment_offering_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           bundles : {
             $ref :  #/components/schemas/OnlineOfferBundleArray 
          }
        }
      },
       OnlineOfferBundleArray : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/OnlineOfferBundles 
        }
      },
       OnlineOfferBundles : {
         type :  object ,
         properties : {
           equipment_bundle_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           equipment_bundle_ref : {
             $ref :  #/components/schemas/Reference 
          },
           bundle_name : {
             $ref :  #/components/schemas/ItemName 
          },
           is_boarding_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           bundle_items : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/OnlineOfferBundleItem 
            }
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        },
         description :  Online Offer Bundles 
      },
       OnlineOfferBundleItem : {
         type :  object ,
         properties : {
           equipment_bundle_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           terminal_quantity : {
             type :  string ,
             description :  Terminal quantity ,
             example :  1 
          },
           is_boarding_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           service : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/OnlineService 
            }
          },
           service_charges : {
             $ref :  #/components/schemas/ServiceChargesBlock 
          }
        }
      },
       ServiceChargesBlock : {
         type :  object ,
         properties : {
           service_charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           is_selected : {
             $ref :  #/components/schemas/IsActivated 
          },
           service_base_charge : {
             $ref :  #/components/schemas/ServiceChargeBase 
          }
        }
      },
       EquipmentOffering : {
         type :  object ,
         properties : {
           equipment_offering_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           equipment_offering_ref : {
             $ref :  #/components/schemas/Reference 
          },
           agreement_length : {
             $ref :  #/components/schemas/AgreementLength 
          },
           bundles : {
             $ref :  #/components/schemas/EquipmentOfferBundleArray 
          }
        }
      },
       EquipmentOfferBundleArray : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/EquipmentOfferBundles 
        }
      },
       EquipmentOfferBundles : {
         type :  object ,
         properties : {
           equipment_bundle_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           equipment_bundle_ref : {
             $ref :  #/components/schemas/Reference 
          },
           bundle_name : {
             $ref :  #/components/schemas/ItemName 
          },
           is_boarding_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           bundle_items : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EquipmentOfferBundleItem 
            }
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        },
         description :  Equipment Offer Bundles 
      },
       EquipmentOfferBundleItem : {
         type :  object ,
         properties : {
           equipment_bundle_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           billing_method_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           terminal_unit_price : {
             $ref :  #/components/schemas/ApplyCharge 
          },
           terminal_quantity : {
             type :  string ,
             description :  Terminal quantity ,
             example :  1 
          },
           is_boarding_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           equipment : {
             $ref :  #/components/schemas/EquipmentBlock 
          },
           billing_plans : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/BillingPlanBlock 
            }
          },
           equipment_features : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EquipmentFeaturesBlock 
            }
          },
           service : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EquipmentService 
            }
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       EquipmentBlock : {
         type :  object ,
         properties : {
           equipment_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           equipment_name : {
             $ref :  #/components/schemas/ItemName 
          },
           equipment_manufacturer : {
             $ref :  #/components/schemas/EquipmentManufac 
          },
           equipment_api_code : {
             $ref :  #/components/schemas/APICode 
          },
           equipment_type_code : {
             $ref :  #/components/schemas/EquipmentType 
          },
           supplier_code : {
             $ref :  #/components/schemas/ExtID 
          }
        }
      },
       BillingPlanBlock : {
         type :  object ,
         properties : {
           billing_method_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           billing_type : {
             $ref :  #/components/schemas/BillingType 
          },
           billing_method_name : {
             $ref :  #/components/schemas/ItemName 
          },
           billing_length : {
             $ref :  #/components/schemas/AgreementLength 
          },
           charge_decimals : {
             $ref :  #/components/schemas/Decimal 
          },
           minimum_charge : {
             $ref :  #/components/schemas/MinimumCharge 
          },
           maximum_charge : {
             $ref :  #/components/schemas/MaximumCharge 
          },
           default_charge : {
             $ref :  #/components/schemas/DefaultCharge 
          },
           charge : {
             $ref :  #/components/schemas/ApplyCharge 
          },
           renewal_minimum_charge : {
             $ref :  #/components/schemas/RenewMinimumCharge 
          },
           renewal_maximum_charge : {
             $ref :  #/components/schemas/RenewMaximumCharge 
          },
           renewal_default_charge : {
             $ref :  #/components/schemas/RenewDefaultCharge 
          },
           renewal_charge : {
             $ref :  #/components/schemas/RenewApplyCharge 
          }
        }
      },
       EquipmentService : {
         type :  object ,
         properties : {
           belongs_to : {
             $ref :  #/components/schemas/ServiceOwnership 
          },
           service_api_code : {
             $ref :  #/components/schemas/APICode 
          },
           service_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           service_for : {
             $ref :  #/components/schemas/EquipmentServiceFor 
          },
           service_name : {
             $ref :  #/components/schemas/ItemName 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       OnlineService : {
         type :  object ,
         properties : {
           service_api_code : {
             $ref :  #/components/schemas/APICode 
          },
           service_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           service_type : {
             $ref :  #/components/schemas/ServiceType 
          },
           service_for : {
             $ref :  #/components/schemas/EquipmentServiceFor 
          },
           service_for_group : {
             $ref :  #/components/schemas/EquipmentServiceForGroup 
          },
           service_name : {
             $ref :  #/components/schemas/ItemName 
          }
        }
      },
       SettlementFrequency : {
         type :  string ,
         description :  Settlement Funding or Billing Frequency - 1= Daily 2= Weekly 3=Monthly ,
         enum : [
           1 ,
           2 ,
           3 
        ]
      },
       ReserveType : {
         type :  string ,
         description :  What reserve option for merchant? 1=Normal 2=Rolling ,
         enum : [
           1 ,
           2 
        ]
      },
       SetTargetReserve : {
         type :  string ,
         description :  Set maximum amount of holding reserve? ,
         enum : [
           0 ,
           1 
        ]
      },
       BillingType : {
         type :  string ,
         description :  terminal billing type ,
         enum : [
           PURCHASE ,
           FIXED ,
           DEFERRED ,
           ROLLING ,
           OWNED 
        ]
      },
       EquipmentType : {
         type :  string ,
         description :  Equipment Type ,
         enum : [
           POS ,
           MOTO ,
           PERIPHERAL 
        ]
      },
       EquipmentManufac : {
         type :  string ,
         description :  Equipment Manufacturer ,
         enum : [
           CLOVER ,
           FDGL ,
           INGENIGO ,
           THIRD_PARTY 
        ]
      },
       ServiceChargeBase : {
         type :  string ,
         description :  Base service charge ,
         example :  0.00 
      },
       MinimumCharge : {
         type :  string ,
         description :  Minimum allowed charge ,
         example :  50.00 
      },
       MaximumCharge : {
         type :  string ,
         description :  Maximum allowed charge ,
         example :  100.00 
      },
       DefaultCharge : {
         type :  string ,
         description :  Default charge ,
         example :  85.00 
      },
       ApplyCharge : {
         type :  string ,
         description :  Agreed Charge with merchant ,
         example :  80.00 
      },
       RenewMinimumCharge : {
         type :  string ,
         description :  Renewal Minimum allowed charge ,
         example :  45.00 
      },
       RenewMaximumCharge : {
         type :  string ,
         description :  Renewal Maximum allowed charge ,
         example :  85.00 
      },
       RenewDefaultCharge : {
         type :  string ,
         description :  Renewal Default charge ,
         example :  75.00 
      },
       RenewApplyCharge : {
         type :  string ,
         description :  Agreed Renewal Charge with merchant ,
         example :  70.00 
      },
       MinimumPerc : {
         type :  string ,
         description :  Minimum % allowed charge ,
         example :  0.50 
      },
       MaximumPerc : {
         type :  string ,
         description :  Maximum % allowed charge ,
         example :  2.50 
      },
       DefaultPerc : {
         type :  string ,
         description :  Default % charge ,
         example :  2.50 
      },
       ApplyPerc : {
         type :  string ,
         description :  Agreed % Charge with merchant ,
         example :  2.00 
      },
       EquipmentServiceFor : {
         type :  string ,
         description :  Service for Equipment as Value Added Services ,
         example :  POS_VAS 
      },
       ServiceType : {
         type :  string ,
         description :  Service type for Equipment ,
         example :  VAR 
      },
       EquipmentServiceForGroup : {
         type :  string ,
         description :  Service for Group ,
         example :  ONLINE_PRODUCT 
      },
       APICode : {
         type :  string ,
         description :  the identifier for API ,
         example :  API_CODE 
      },
       ServiceOwnership : {
         type :  string ,
         description :  Level of ownership, used to calculate the charge ,
         enum : [
           Merchant ,
           Outlet ,
           Equipment ,
           Feature 
        ]
      },
       EquipmentFeaturesBlock : {
         type :  object ,
         properties : {
           feature_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           value : {
             type :  string ,
             description :  Feature value ,
             example :  Feature 
          },
           selected : {
             type :  string ,
             description :  Is the feature selected? ,
             example :  1 ,
             enum : [
               0 ,
               1 
            ]
          }
        }
      },
       AgreementLength : {
         type :  string ,
         description :  Merchant Agreement length ,
         example :  PURCHASE 
      },
       ApplicationRef : {
         maxLength : 12,
         minLength : 12,
         type :  string ,
         description :  Application Identification ,
         example :  333000000794 
      },
       Status : {
         type :  string ,
         description :  1 = Active 0 = Inactive ,
         example :  Active ,
         enum : [
           0 ,
           1 
        ]
      },
       SystemID : {
         maxLength : 24,
         minLength : 24,
         type :  string ,
         description :  Identification ,
         example :  5fca5850dd865e005b21773d 
      },
       NodeID : {
         type :  string ,
         description :  Node Identification ,
         example :  2505 
      },
       ParentType : {
         type :  string ,
         description :  Parent Type ,
         example :  ALLIANCE ,
         enum : [
           ALLIANCE ,
           PARTNER 
        ]
      },
       Language : {
         type :  string ,
         description :  language ,
         example :  en_gb 
      },
       MID : {
         maxLength : 12,
         minLength : 12,
         type :  string ,
         description :  Merchant Identification ,
         example :  774589660012 
      },
       SubGroup : {
         type :  object ,
         properties : {
           parent_mid : {
             $ref :  #/components/schemas/MID 
          },
           sub_group_type : {
             $ref :  #/components/schemas/SubGroupType 
          },
           group_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           banks : {
             $ref :  #/components/schemas/Bank 
          },
           contacts : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/Contacts 
            }
          }
        }
      },
       non_processing_flag : {
         type :  string ,
         description :  Flags if a merchant is non processing. 1 = Yes 0 = No ,
         enum : [
           1 ,
           0 
        ]
      },
       Contacts : {
         type :  object ,
         properties : {
           contact_type : {
             type :  string ,
             description :  Contact type - Legal, Billing, Trading, Shipping, Technical ,
             enum : [
               L ,
               B ,
               OT ,
               S ,
               T 
            ]
          },
           contact_title : {
             $ref :  #/components/schemas/Title 
          },
           contact_first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           contact_second_name : {
             $ref :  #/components/schemas/SecondName 
          },
           contact_last_name : {
             $ref :  #/components/schemas/LastName 
          },
           email_address : {
             $ref :  #/components/schemas/Email 
          },
           ent_telephone_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           telephone_number : {
             $ref :  #/components/schemas/PhoneNumber 
          },
           ent_alternative_phone_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           alternative_phone_number : {
             $ref :  #/components/schemas/PhoneNumber 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/AddressBlock 
          }
        ]
      },
       SubGroupType : {
         type :  string ,
         example :  CHAIN ,
         enum : [
           CHAIN 
        ]
      },
       AcquiringOffering : {
         type :  object ,
         properties : {
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           transaction_pricing_name : {
             $ref :  #/components/schemas/ItemName 
          },
           transaction_pricing_ref : {
             $ref :  #/components/schemas/Reference 
          },
           currency : {
             $ref :  #/components/schemas/Currency 
          },
           is_tier_price : {
             type :  string ,
             description :  Is tier pricing - 1: Yes 0: No ,
             enum : [
               0 ,
               1 
            ]
          },
           tier_price_type : {
             type :  string 
          },
           fee_collection_type : {
             $ref :  #/components/schemas/FeeCollection 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           acquirer_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           processing_platform : {
             $ref :  #/components/schemas/Platform 
          },
           charge_items : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ChargeItem 
            }
          },
           service_items : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ServiceItem 
            }
          },
           additional_data : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/AdditionalData 
            }
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       Platform : {
         type :  string ,
         enum : [
           OTHER 
        ]
      },
       AdditionalData : {
         type :  object ,
         properties : {
           additional_attribute_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           additional_record_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       Charges : {
         type :  object ,
         properties : {
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           transaction_pricing_name : {
             $ref :  #/components/schemas/ItemName 
          },
           transaction_pricing_ref : {
             $ref :  #/components/schemas/Reference 
          },
           alliance_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           acquirer_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           processing_platform : {
             $ref :  #/components/schemas/Platform 
          },
           currency : {
             $ref :  #/components/schemas/Currency 
          },
           fee_collection_type : {
             $ref :  #/components/schemas/FeeCollection 
          },
           is_tier_price : {
             type :  string ,
             description :  Is tier pricing - 1: Yes 0: No ,
             enum : [
               0 ,
               1 
            ]
          },
           tier_price_type : {
             type :  string 
          },
           charge_item_groups : {
             $ref :  #/components/schemas/ChargeItemGroup 
          },
           service_items : {
             $ref :  #/components/schemas/ServiceItem 
          }
        }
      },
       ChargeItemGroup : {
         type :  object ,
         properties : {
           charge_item_group_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           charge_item_group_name : {
             $ref :  #/components/schemas/ItemName 
          },
           fee_collection_type : {
             $ref :  #/components/schemas/FeeCollection 
          },
           charge_items : {
             $ref :  #/components/schemas/ChargeItem 
          }
        }
      },
       ChargeItem : {
         type :  object ,
         properties : {
           charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           charge_item_name : {
             $ref :  #/components/schemas/ItemName 
          },
           charge_item_ref : {
             $ref :  #/components/schemas/Reference 
          },
           charge_item_group_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           charge_item_group_name : {
             $ref :  #/components/schemas/ItemName 
          },
           is_boarding_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           is_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           fee_collection_type : {
             $ref :  #/components/schemas/FeeCollection 
          },
           charge_decimals : {
             $ref :  #/components/schemas/Decimal 
          },
           is_invisible : {
             $ref :  #/components/schemas/IsInvisible 
          },
           is_mandatory : {
             $ref :  #/components/schemas/IsMandatory 
          },
           is_merged_charges : {
             $ref :  #/components/schemas/MergeredCharge 
          },
           charge_item_prices : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ItemPrice 
            }
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       ServiceItem : {
         type :  object ,
         properties : {
           service_charge_item_external_id : {
             $ref :  #/components/schemas/ExtID 
          },
           service_item_name : {
             $ref :  #/components/schemas/ItemName 
          },
           charge_ref : {
             $ref :  #/components/schemas/Reference 
          },
           is_boarding_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           is_activated : {
             $ref :  #/components/schemas/IsActivated 
          },
           charge_decimals : {
             $ref :  #/components/schemas/Decimal 
          },
           service_frequency : {
             type :  string 
          },
           is_invisible : {
             $ref :  #/components/schemas/IsInvisible 
          },
           is_mandatory : {
             $ref :  #/components/schemas/IsMandatory 
          },
           service_item_type : {
             type :  string 
          },
           service_item_charges : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ServiceChargeBlock 
            }
          }
        }
      },
       ItemPrice : {
         type :  object ,
         properties : {
           charge_item_price_charges : {
             $ref :  #/components/schemas/ItemCharges 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       ItemCharges : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/ItemChargeBlock 
        }
      },
       ServiceChargeBlock : {
         type :  object ,
         properties : {
           fee_type : {
             $ref :  #/components/schemas/FeeType 
          },
           base_charge : {
             $ref :  #/components/schemas/ApplyCharge 
          },
           default_base_charge : {
             $ref :  #/components/schemas/DefaultCharge 
          },
           minimum_base_charge : {
             $ref :  #/components/schemas/MinimumCharge 
          },
           maximum_base_charge : {
             $ref :  #/components/schemas/MaximumCharge 
          },
           perc_charge : {
             $ref :  #/components/schemas/ApplyPerc 
          },
           default_perc_charge : {
             $ref :  #/components/schemas/DefaultPerc 
          },
           minimum_perc_charge : {
             $ref :  #/components/schemas/MinimumPerc 
          },
           maximum_perc_charge : {
             $ref :  #/components/schemas/MaximumPerc 
          },
           date_added : {
             $ref :  #/components/schemas/Date 
          },
           date_updated : {
             $ref :  #/components/schemas/Date 
          }
        }
      },
       ItemChargeBlock : {
         type :  object ,
         properties : {
           tier_number : {
             type :  string ,
             description :  Tier number - only if Offer for tier pricing = 1 ,
             enum : [
               1 ,
               2 ,
               3 
            ]
          },
           category : {
             $ref :  #/components/schemas/ChargeCategory 
          }
        },
         allOf : [
          {
             $ref :  #/components/schemas/ServiceChargeBlock 
          }
        ]
      },
       IsInvisible : {
         type :  string ,
         description :  Is the charge invisible to boarding user? - 1: Yes 0: No ,
         enum : [
           0 ,
           1 
        ]
      },
       IsMandatory : {
         type :  string ,
         description :  Is the charge mandatory? - 1: Yes 0: No ,
         enum : [
           0 ,
           1 
        ]
      },
       FeeType : {
         type :  string ,
         description :  1= percentage 2 = base 3 = base and percent ,
         example :  3 ,
         enum : [
           1 ,
           2 ,
           3 
        ]
      },
       ChargeCategory : {
         type :  string ,
         description :  1= Secure 2 = Non-Secure ,
         example :  1 ,
         enum : [
           1 ,
           2 
        ]
      },
       MergeredCharge : {
         type :  string ,
         description :  Is the charge used for Secure and Non-secure? - 1: Yes 0: No ,
         enum : [
           0 ,
           1 
        ]
      },
       BaseCharge : {
         type :  string ,
         description :  charge apply per item ,
         example :  0.05 
      },
       PercentCharge : {
         type :  string ,
         description :  % charge <= 100 ,
         example :  0.1 
      },
       Decimal : {
         type :  string ,
         description :  Is active item? - 1: Yes 0: No ,
         enum : [
           2 ,
           3 ,
           4 ,
           5 
        ]
      },
       FeeCollection : {
         type :  string ,
         description :  Fee collection ,
         enum : [
           INTERCHANGE ,
           BLENDED 
        ]
      },
       IsActivated : {
         type :  string ,
         description :  Is active item? - 1: Yes 0: No ,
         enum : [
           1 ,
           0 
        ]
      },
       ItemName : {
         type :  string ,
         description :  Item Name ,
         example :  Item Name 
      },
       ExtID : {
         maxLength : 41,
         minLength : 41,
         type :  string ,
         description :  Unique identifier ,
         example :  AAA85-E9418-02AAF-CCE93-1AADB-0979A-F81C9 
      },
       Currency : {
         type :  string ,
         description :  ISO3 Currency code ,
         example :  USD 
      },
       Reference : {
         type :  string ,
         description :  Item reference ,
         example :  reference 
      },
       BusinessEntity : {
         type :  object ,
         properties : {
           legal_name : {
             $ref :  #/components/schemas/LegalName 
          },
           ownership_entity_type : {
             $ref :  #/components/schemas/BusinessLegalEntity 
          },
           reg_number : {
             $ref :  #/components/schemas/RegNumber 
          },
           foreign_entity : {
             $ref :  #/components/schemas/ForeignEntity 
          },
           business_tin_ssn_number : {
             $ref :  #/components/schemas/TinNumber 
          },
           irs_status : {
             $ref :  #/components/schemas/IrsStatus 
          },
           irs_filing_name : {
             $ref :  #/components/schemas/IrsName 
          },
           business_category : {
             $ref :  #/components/schemas/BusinessCategory 
          },
           tin_type : {
             $ref :  #/components/schemas/TinType 
          },
           int_tax_exempt_flag : {
             $ref :  #/components/schemas/TaxExempt 
          },
           int_tax_id : {
             $ref :  #/components/schemas/TaxID 
          },
           mcc_code : {
             $ref :  #/components/schemas/MCC 
          },
           date_incorporated : {
             $ref :  #/components/schemas/Date 
          },
           incorp_state : {
             $ref :  #/components/schemas/State 
          },
           foundation_date : {
             $ref :  #/components/schemas/Date 
          },
           security_code : {
             $ref :  #/components/schemas/securitycode 
          },
           project_name : {
             $ref :  #/components/schemas/ProjectName 
          },
           business_average_ticket_sales_amt : {
             $ref :  #/components/schemas/ATV 
          },
           business_highest_ticket_sales_amt : {
             $ref :  #/components/schemas/HighestTV 
          },
           banks : {
             $ref :  #/components/schemas/Bank 
          }
        }
      },
       Bank : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/BankDetail 
        }
      },
       BankDetail : {
         type :  object ,
         properties : {
           bank_name : {
             $ref :  #/components/schemas/BankName 
          },
           bank_city : {
             $ref :  #/components/schemas/City 
          },
           country_code : {
             $ref :  #/components/schemas/Country 
          },
           account_holder_name : {
             $ref :  #/components/schemas/AccountHolder 
          },
           street_line_1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           account_type : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/BankFor 
            }
          },
           bank_account_type : {
             $ref :  #/components/schemas/BankAccountType 
          },
           house_number : {
             $ref :  #/components/schemas/HouseNumber 
          },
           house_name : {
             $ref :  #/components/schemas/HouseName 
          },
           zip_code : {
             $ref :  #/components/schemas/ZipCode 
          },
           county_code : {
             $ref :  #/components/schemas/State 
          },
           dda_number : {
             $ref :  #/components/schemas/DDA 
          },
           routing_number : {
             $ref :  #/components/schemas/ABA 
          }
        }
      },
       BankName : {
         type :  string ,
         description :  Merchant bank name ,
         example :  ABC Bank 
      },
       AccountHolder : {
         type :  string ,
         description :  Merchant account holder name ,
         example :  John 
      },
       DDA : {
         type :  string ,
         description :  Merchant bank DDA ,
         example :  123456789000 
      },
       ABA : {
         maxLength : 9,
         minLength : 9,
         type :  string ,
         description :  Merchant bank ABA ,
         example :  123456789 
      },
       BankAccountType : {
         type :  string ,
         description :  Account Type - c= checking s= saving ,
         enum : [
           c ,
           s 
        ]
      },
       BankAccountTypeRetrieve : {
         type :  string ,
         enum : [
           CHECKING ,
           SAVING 
        ]
      },
       BankFor : {
         type :  string ,
         enum : [
           CREDIT ,
           DEBIT ,
           CHARGEBACK 
        ]
      },
       LegalName : {
         type :  string ,
         description :  Business legal name ,
         example :  Business Legal Name 
      },
       BusinessName : {
         type :  string ,
         description :  Business name ,
         example :  Business name 
      },
       BusinessLegalEntity : {
         type :  string ,
         description :  S = ASSOCIATION/ESTATE/TRUST, G = GOVERNMENT, I = INTERNATIONAL/ORG, L = LIMITED LIABILITY CO, N = PARTNERSHIP, O = PROPRIETORSHIP, V = PRIVATE CORP, U = PUBLIC CORP, X = TAX EXEMPT ORGANIZATION ,
         enum : [
           L ,
           G ,
           I ,
           S ,
           N ,
           O ,
           V ,
           U ,
           X 
        ]
      },
       RegNumber : {
         type :  string ,
         description :  Company registration number 
      },
       ForeignEntity : {
         type :  string ,
         description :  Is the Business a Foreign entity? - 1: Yes 0: No ,
         enum : [
           0 ,
           1 
        ]
      },
       TinNumber : {
         maxLength : 9,
         minLength : 9,
         type :  string ,
         description :  TIN/ EIN/ SSN number ,
         example :  999888555 
      },
       WebSite : {
         type :  string ,
         description :  Website ,
         example :  https://technologi.co.uk 
      },
       IrsStatus : {
         type :  string ,
         description :  IRS Status - Not Excluded, Foreign Entity Verfication Pending, Foreign Entity Identified before '1/1/11' , Foreign Identity Verified, Non Profit Verification Pending, Non Profit Verified, Goverment Entity, Financial Institution ,
         enum : [
           N ,
           A ,
           B ,
           F ,
           D ,
           C ,
           G ,
           J 
        ]
      },
       IrsName : {
         type :  string ,
         description :  IRS filing name 
      },
       ProjectName : {
         type :  string ,
         description :  Project Name 
      },
       securitycode : {
         type :  string ,
         description :  Security Code , '4000' Nashville '5083' Compass ,
         enum : [
           4000 ,
           5083 
        ]
      },
       BusinessCategory : {
         type :  string ,
         description :  Merchant Business Category - Retail, MOTO, Internet, Hotel, Restaurant ,
         enum : [
           R ,
           MOTO ,
           E ,
           H ,
           RT 
        ]
      },
       TinType : {
         type :  string ,
         description :  1 = SSN, 2 = EIN, 3 = OTHER TAX ID ,
         enum : [
           1 ,
           2 ,
           3 
        ]
      },
       TaxExempt : {
         type :  string ,
         description :  Tax exempt flag - 1: Yes 0: No ,
         enum : [
           0 ,
           1 
        ]
      },
       TaxID : {
         type :  string ,
         description :  Tax ID 
      },
       MCC : {
         maxLength : 4,
         minLength : 4,
         type :  string ,
         description :  MCC Code ,
         example :  5544 
      },
       Date : {
         type :  string ,
         description :  date mm-dd-yyyy ,
         example :  2020-01-01 
      },
       ATV : {
         type :  string ,
         description :  average ticket sales amount ,
         example :  50.00 
      },
       HighestTV : {
         type :  string ,
         description :  highest ticket sales amount ,
         example :  1000.00 
      },
       ATO : {
         type :  string ,
         description :  Annual Turn Over ,
         example :  100000.00 
      },
       CardATO : {
         type :  string ,
         description :  Card Annual Turn Over - must be less than annual_turnover ,
         example :  100000.00 
      },
       ChipFlag : {
         type :  string ,
         description :  Are card with chip transactions taken? - Y= yes N= No ,
         enum : [
           Y ,
           N 
        ]
      },
       RecurringFlag : {
         type :  string ,
         description :  Have recurring transaction? 1= Yes 0=No ,
         enum : [
           0 ,
           1 
        ]
      },
       SaleAmount : {
         type :  string ,
         description :  Sales amount ,
         example :  100000.00 
      },
       PercentValue : {
         maximum : 100,
         minimum : 0,
         type :  string ,
         description :  Percentage value ,
         example :  10.00 
      },
       DeditSE : {
         maxLength : 8,
         minLength : 8,
         type :  string ,
         description :  Debit SE Number ,
         example :  14862007 
      },
       AMEXType : {
         type :  string ,
         description :  AMEX Type D = PASS THRU/ESA, OB = OPT BLUE, NA = NOT APPLICABLE ,
         enum : [
           D ,
           OB ,
           NA 
        ]
      },
       DeliveryPerc : {
         type :  string ,
         description :  the % of delivery in a period of time - same day, 1-7 days, 8-14 ays, 15-30 days, >30 days - the total should be 100  ,
         example :  15% 
      },
       DeliveryDay : {
         type :  string ,
         description :  average delivery date 
      },
       SalePerc : {
         type :  string ,
         description :  the % of sale via each channel - sales_keyed_perc+sales_ftf_perc = 100; sales_phone_perc+sales_mail_perc+sales_internet_perc = sales_keyed_perc 
      },
       AdditionalInformation : {
         type :  string ,
         description :  Additional Information ,
         example :  Additional detail provide 
      },
       Owners : {
         type :  array ,
         items : {
           $ref :  #/components/schemas/OwnerBlock 
        }
      },
       OwnerBlock : {
         type :  object ,
         properties : {
           owner_title : {
             $ref :  #/components/schemas/Title 
          },
           owner_first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           owner_second_name : {
             $ref :  #/components/schemas/SecondName 
          },
           owner_surname : {
             $ref :  #/components/schemas/LastName 
          },
           contact_dob : {
             $ref :  #/components/schemas/Date 
          },
           owner_nationality : {
             $ref :  #/components/schemas/Nationality 
          },
           owner_position : {
             $ref :  #/components/schemas/Position 
          },
           owner_date_started : {
             $ref :  #/components/schemas/Date 
          },
           personal_guarantee : {
             type :  string ,
             description :  Is personal guarantee - N: No Y: Yes ,
             enum : [
               N ,
               Y 
            ]
          },
           owner_email : {
             $ref :  #/components/schemas/Email 
          },
           owner_tin_ssn_number : {
             $ref :  #/components/schemas/TinNumber 
          },
           is_main_principal : {
             type :  string ,
             description :  Is main principal - 0: No 1: Yes ,
             enum : [
               0 ,
               1 
            ]
          },
           ownership_perc : {
             $ref :  #/components/schemas/OwnershipPerc 
          },
           owner_phone_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           alternative_phone_code : {
             $ref :  #/components/schemas/PhoneCode 
          },
           owner_phone_no : {
             $ref :  #/components/schemas/PhoneNumber 
          },
           alternative_phone_number : {
             $ref :  #/components/schemas/PhoneNumber 
          },
           contacts : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/PrincipalAddressBlock 
            }
          }
        }
      },
       OwnershipPerc : {
         type :  string ,
         description :  Ownership % ,
         example :  50 
      },
       Title : {
         type :  string ,
         description :  Name title ,
         enum : [
           Mr. ,
           Mrs. ,
           Ms. ,
           Miss. ,
           Madam ,
           Dr. ,
           Sr. ,
           Jr. ,
           Sir. 
        ]
      },
       FirstName : {
         type :  string ,
         description :  First name ,
         example :  John 
      },
       SecondName : {
         type :  string ,
         description :  Middle name ,
         example :  H 
      },
       LastName : {
         type :  string ,
         description :  Last name ,
         example :  Doe 
      },
       Nationality : {
         type :  string ,
         description :  ISO3 nationality code ,
         example :  USA 
      },
       Position : {
         type :  string ,
         description :  Position in the company ,
         example :  CEO ,
         enum : [
           TR ,
           OW ,
           PA ,
           CEO ,
           SEC ,
           DIR ,
           OTH ,
           SP 
        ]
      },
       Email : {
         type :  string ,
         description :  Email addess ,
         example :  john.doe123@technologi.co.uk 
      },
       PrincipalAddressBlock : {
         type :  object ,
         allOf : [
          {
             $ref :  #/components/schemas/AddressBlock 
          }
        ]
      },
       AddressBlock : {
         type :  object ,
         properties : {
           country_code : {
             $ref :  #/components/schemas/Country 
          },
           city : {
             $ref :  #/components/schemas/City 
          },
           zip_code : {
             $ref :  #/components/schemas/ZipCode 
          },
           street_line_1 : {
             $ref :  #/components/schemas/AddressLine1 
          },
           county_code : {
             $ref :  #/components/schemas/State 
          },
           house_number : {
             $ref :  #/components/schemas/HouseNumber 
          },
           province : {
             $ref :  #/components/schemas/Province 
          },
           suite_apart_number : {
             $ref :  #/components/schemas/Apartment 
          },
           floor : {
             $ref :  #/components/schemas/Floor 
          },
           house_name : {
             $ref :  #/components/schemas/HouseName 
          }
        }
      },
       Apartment : {
         type :  string ,
         description :  Apartment Number ,
         example :  20 
      },
       Floor : {
         type :  string ,
         description :  Floor ,
         example :  3 
      },
       HouseNumber : {
         type :  string ,
         description :  House number ,
         example :  745 
      },
       HouseName : {
         type :  string ,
         description :  House name ,
         example :  Vincent 
      },
       AddressLine1 : {
         type :  string ,
         description :  Street line1 address ,
         example :  Sheila Lane 
      },
       City : {
         type :  string ,
         description :  City ,
         example :  Sparks 
      },
       Province : {
         type :  string ,
         description :  Province ,
         example :  Nevada 
      },
       State : {
         type :  string ,
         description :  State in abbreviation name ,
         example :  NV 
      },
       ZipCode : {
         type :  string ,
         description :  Zipcode ,
         example :  89431 
      },
       Country : {
         type :  string ,
         description :  ISO3 country code ,
         example :  840 
      },
       PhoneCode : {
         type :  string ,
         description :  Phone country code ,
         example :  GB|44 
      },
       PhoneNumber : {
         type :  string ,
         description :  Phone number ,
         example :  1477855436 
      },
       StoreNumber : {
         maxLength : 6,
         minLength : 6,
         type :  string ,
         description :  Store number 
      },
       SettlementBank : {
         maxLength : 3,
         minLength : 3,
         type :  string ,
         description :  3 digits bank code - 299= Meta Bank 060= Wells ,
         enum : [
           299 ,
           060 
        ]
      },
       BusinessZone : {
         type :  string ,
         description :  Business Zone: Business District, Industrial, Residential ,
         enum : [
           B ,
           I ,
           R 
        ]
      },
       BusinessLocation : {
         type :  string ,
         description :  Business Location - APT , Door to Door, Flea Market/Kiosk, Home, Isolated, Mall, Office, Other, Shopping Area ,
         enum : [
           A ,
           D ,
           F ,
           H ,
           I ,
           M ,
           O ,
           U ,
           S 
        ]
      },
       GroundFloor : {
         type :  string ,
         description :  On ground floor? ,
         enum : [
           G ,
           O 
        ]
      },
       SqFtCount : {
         type :  string ,
         description :  Square ft count 1 - 250 2 - 251-500 3 - 2000 4- 2000+ ,
         enum : [
           1 ,
           2 ,
           3 ,
           4 
        ]
      },
       NoBuildingFloors : {
         type :  string ,
         description :  If ground floor = O ,
         enum : [
           1 ,
           2 ,
           3 ,
           4 
        ]
      },
       VisitationRequired : {
         type :  string ,
         description :  Is Visitation Required? 0 = no 1 = yes ,
         enum : [
           0 ,
           1 
        ]
      },
       StatementType : {
         type :  string ,
         description :  FCDS Detail, FDCS Summary ,
         enum : [
           F ,
           G 
        ]
      },
       TransProcessMode : {
         type :  string ,
         description :  Transaction Process Mode: Paper Deposits/Voice Auth, Batch Auth and Deposit, Electronic Cash Register, Electronic Draft Capture, Tape Depositor, Peaper Deposits/Terminal Auth, On = US Cash advance outlet, Reserved for Future use, Funding Account Only ,
         enum : [
           0 ,
           1 ,
           2 ,
           3 ,
           4 ,
           5 ,
           6 ,
           7 ,
           8 ,
           9 
        ]
      },
       BillingFlag : {
         type :  string ,
         description :  A billing node indicator - if 1: this node is merchant billing level ,
         enum : [
           0 ,
           1 
        ]
      },
       FundingFlag : {
         type :  string ,
         description :  A funding node indicator - if 1: this node is merchant funding level ,
         enum : [
           0 ,
           1 
        ]
      },
       ReserveFlag : {
         type :  string ,
         description :  A reserve node indicator - if 1: this node is merchant reserve level ,
         enum : [
           0 ,
           1 
        ]
      },
       DelayFundingFlag : {
         type :  string ,
         description :  Delay merchant funding? 0= No 1= Yes ,
         enum : [
           0 ,
           1 
        ]
      },
       DelayFundingDays : {
         maxLength : 99,
         minLength : 1,
         type :  string ,
         description :  Delay days for merchant funding ,
         example :  5 
      },
       BillingLevel : {
         type :  string ,
         description :  A billing node indicator - dynamically define based on the Hierarchy, starting 1 = merchant until n = outlet - NOT REQUIRED if default value is set in the system ,
         example :  1 
      },
       FundingLevel : {
         type :  string ,
         description :  A funding node indicator - dynamically define based on the Hierarchy, starting 1 = merchant until n = outlet - NOT REQUIRED if default value is set in the system ,
         example :  1 
      },
       PricingLevel : {
         type :  string ,
         description :  A Pricing definition level - if Business: all outlets use the same price - if Outlet: each outlet can define its own price - NOT USED for Instructional Funding PFAC ,
         enum : [
           Business ,
           Outlet 
        ]
      },
       SettlementMethod : {
         type :  string ,
         description :  Merchant settlement method - 1: Net 2: Gross  - ONLY 1: Net for Instructional Funding PFAC ,
         enum : [
           1 ,
           2 
        ]
      },
       ChargebackSettlementMethod : {
         type :  string ,
         description :  Merchant changeback recoup method - 1: Net 2: Debit Merchant ,
         enum : [
           1 ,
           2 
        ]
      },
       AllowSplitFlag : {
         type :  string ,
         description :  Merchant allowed to split revenue - 1: Allowed 0: Not allowed - ONLY Avaulable if PFAC profile has split option ,
         enum : [
           0 ,
           1 
        ]
      },
       SplitLevel : {
         type :  string ,
         description :  Revenue split processing level, value dynamically define based on the Hierarchy, starting 1 = merchant until n = outlet - Required if allow_split_flag = 1 ,
         example :  1 
      },
       TakeReservesFlag : {
         type :  string ,
         description :  Collecting reserve money from merchant - 1: Yes 0: No ,
         enum : [
           0 ,
           1 
        ]
      },
       ReserveEntityLevel : {
         type :  string ,
         description :  Merchant reserve collect level - 1: Outlet 2: Funding level ,
         enum : [
           1 ,
           2 
        ]
      },
       HoldSuspend : {
         type :  string ,
         description :  Is this node hold/suspended - 0: No 1: Hold 2: Suspend ,
         enum : [
           0 ,
           1 ,
           2 
        ]
      },
       Get_Trade_Account_Response_account : {
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           transation_amount : {
             $ref :  #/components/schemas/amount 
          },
           refund_amount : {
             $ref :  #/components/schemas/amount 
          },
           net_transaction_amount : {
             $ref :  #/components/schemas/amount 
          },
           rejected_amount : {
             $ref :  #/components/schemas/amount 
          },
           chargeback : {
             $ref :  #/components/schemas/amount 
          },
           chargeback_reversal : {
             $ref :  #/components/schemas/amount 
          },
           deposit_adjustments_amount : {
             $ref :  #/components/schemas/amount 
          },
           processing_date : {
             $ref :  #/components/schemas/date 
          }
        },
         description :  merchant account 
      },
       Account_Transaction_Search_Response_response : {
         type :  object ,
         properties : {
           limit : {
             type :  number ,
             description :  The limit on how many transaction reports to retrieve 
          },
           page : {
             type :  number ,
             description :  The page where to get those reports from 
          },
           summary_status : {
             type :  string ,
             enum : [
               FOUND ,
               NOT FOUND 
            ]
          },
           transactions : {
             type :  array ,
             description :  Transaction list ,
             items : {
               $ref :  #/components/schemas/transaction 
            }
          }
        }
      },
       Account_Transaction_Search_Request_query_location_id : {
         type :  object ,
         properties : {
           operator : {
             type :  string ,
             description :  Database operator for the query, EQ = Equals LK = Like ,
             enum : [
               EQ ,
               LK 
            ]
          },
           value : {
             type :  string ,
             description :  the value used for the search ,
             example :  000000000000 
          }
        }
      },
       Account_Transaction_Search_Request_query_date_added : {
         type :  object ,
         properties : {
           operator : {
             type :  string ,
             description :  Database operator for the query, EQ = Equals, LK = Like, GT = Greater Than, LT = Lower Than, GE = Greater Or Equal, LE = Lower Or Equal, BW = Between, LK = Like ,
             enum : [
               EQ ,
               GT ,
               LT ,
               GE ,
               LE ,
               BW ,
               LK 
            ]
          },
           value : {
             $ref :  #/components/schemas/date 
          },
           and_value : {
             $ref :  #/components/schemas/date 
          }
        }
      },
       Account_Transaction_Search_Request_query : {
         type :  object ,
         properties : {
           location_id : {
             $ref :  #/components/schemas/Account_Transaction_Search_Request_query_location_id 
          },
           date_added : {
             $ref :  #/components/schemas/Account_Transaction_Search_Request_query_date_added 
          }
        }
      },
       Get_Settlement_Info_Response_settlment_summary : {
         type :  object ,
         properties : {
           settlement_ref : {
             $ref :  #/components/schemas/settlement_ref 
          },
           settlement_type : {
             $ref :  #/components/schemas/settlement_type 
          },
           settlement_amount : {
             $ref :  #/components/schemas/amount 
          },
           settlement_status : {
             $ref :  #/components/schemas/settlement_status 
          },
           dda : {
             $ref :  #/components/schemas/dda 
          },
           aba : {
             $ref :  #/components/schemas/aba 
          },
           effective_date : {
             $ref :  #/components/schemas/effective_date 
          }
        }
      },
       Get_Settlement_Info_Response_settlement_details : {
         type :  object ,
         properties : {
           amount : {
             multipleOf : 0.01,
             type :  number ,
             description :  Amount to be settled ,
             example : 30.04
          },
           description : {
             description :  Description of the account type ,
             example :  Delay funding 
          },
           account_type : {
             $ref :  #/components/schemas/AccountType 
          }
        }
      },
       Get_Settlement_Info_Response_received_instruction : {
         type :  object ,
         properties : {
           amount : {
             multipleOf : 0.01,
             type :  number ,
             description :  Instructional Amount ,
             example : 20.04
          },
           account_type : {
             $ref :  #/components/schemas/AccountType 
          }
        }
      },
       Get_Settlement_Info_Response_instructions_received : {
         type :  object ,
         properties : {
           received_datetime : {
             $ref :  #/components/schemas/exactDate 
          },
           received_instruction : {
             type :  array ,
             description :  List of received instructions ,
             items : {
               $ref :  #/components/schemas/Get_Settlement_Info_Response_received_instruction 
            }
          }
        }
      },
       Get_Account_Summary_Response_trade_summary : {
         type :  object ,
         properties : {
           transaction_amount : {
             multipleOf : 0.01,
             type :  number ,
             description :  Transaction amount ,
             example : 140.5
          },
           refund_amount : {
             multipleOf : 0.01,
             type :  number ,
             description :  Refund amount ,
             example : 30.5
          },
           net_transaction_amount : {
             multipleOf : 0.01,
             type :  number ,
             description :  Net Transaction amount ,
             example : 50
          },
           rejected_amount : {
             multipleOf : 0.01,
             type :  number ,
             description :  Rejected amount ,
             example : 80
          },
           chargeback : {
             multipleOf : 0.01,
             type :  number ,
             description :  Chargeback ,
             example : 90
          },
           chargeback_reversal : {
             multipleOf : 0.01,
             type :  number ,
             description :  Chargeback Reversal ,
             example : 30
          }
        },
         description :  Trade Summary 
      },
       Get_Account_Summary_Response_account_summary : {
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           total_in : {
             multipleOf : 0.01,
             type :  number ,
             description :  Total Amount In ,
             example : 30
          },
           total_out : {
             multipleOf : 0.01,
             type :  number ,
             description :  Total Amount Out ,
             example : 30
          },
           destinations : {
             type :  array ,
             description :  Destinations ,
             items : {
               $ref :  #/components/schemas/DestinationsBlock 
            }
          },
           balance : {
             multipleOf : 0.01,
             type :  number ,
             description :  Balance in this account ,
             example : 50
          },
           prev_balance : {
             multipleOf : 0.01,
             type :  number ,
             description :  Previous Balance in this account ,
             example : 10
          }
        }
      },
       SplitTransactionResponse_summary : {
         type :  object ,
         properties : {
           split_details : {
             $ref :  #/components/schemas/TrasnactionSplitDetail 
          }
        }
      },
       Reprocess_Settlement_RejectResponse_reject_info : {
         type :  object ,
         properties : {
           settlement_ref : {
             $ref :  #/components/schemas/settlement_ref 
          },
           reprocess_settlement_ref : {
             $ref :  #/components/schemas/settlement_ref 
          },
           settlement_type : {
             $ref :  #/components/schemas/settlement_type 
          },
           settlement_amount : {
             $ref :  #/components/schemas/amount 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           hierarchy : {
             $ref :  #/components/schemas/hierarchy 
          },
           date : {
             $ref :  #/components/schemas/date 
          }
        }
      },
       Get_Settlement_Reject_Response_details : {
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           amount : {
             $ref :  #/components/schemas/amount 
          },
           settlement_type : {
             $ref :  #/components/schemas/settlement_type 
          }
        }
      },
       Get_Settlement_Reject_Response_rejected_transaction : {
         type :  object ,
         properties : {
           settlement_ref : {
             $ref :  #/components/schemas/settlement_ref 
          },
           settlement_type : {
             $ref :  #/components/schemas/settlement_type 
          },
           settlement_amount : {
             $ref :  #/components/schemas/amount 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           reject_reason_code : {
             $ref :  #/components/schemas/reject_reason_code 
          },
           reject_reason_more_info : {
             type :  string ,
             description :  information about reject reason ,
             example :  More info 
          },
           hierarchy : {
             $ref :  #/components/schemas/hierarchy 
          },
           merchant_id : {
             $ref :  #/components/schemas/merchant_id_optional 
          },
           details : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/Get_Settlement_Reject_Response_details 
            }
          }
        }
      },
       AccountArrayReleaseReponse_inner : {
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           balance : {
             $ref :  #/components/schemas/amount 
          }
        }
      },
       AccountsArrayRelease_inner : {
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           amount : {
             $ref :  #/components/schemas/amount 
          },
           release_reason : {
             type :  string ,
             description :  The reason for release 
          }
        }
      },
       InstructionDetailsResponse_summary : {
         type :  object ,
         properties : {
           accounts : {
             $ref :  #/components/schemas/AccountsArrayResponse 
          }
        }
      },
       Get_Account_Balance_Response_account : {
         type :  object ,
         properties : {
           account_type : {
             $ref :  #/components/schemas/AccountType 
          },
           currency : {
             $ref :  #/components/schemas/currency 
          },
           balance : {
             $ref :  #/components/schemas/amount 
          },
           previous_balance : {
             $ref :  #/components/schemas/amount 
          },
           today_in : {
             $ref :  #/components/schemas/amount 
          },
           today_out : {
             $ref :  #/components/schemas/amount 
          }
        }
      },
       InstructionBatchResponse_summary : {
         required : [
           batch_number ,
           batch_total_amount ,
           batch_total_merchant ,
           message 
        ],
         type :  object ,
         properties : {
           batch_number : {
             $ref :  #/components/schemas/BatchNumber 
          },
           batch_total_merchant : {
             $ref :  #/components/schemas/BatchTotalMerchant 
          },
           batch_total_amount : {
             $ref :  #/components/schemas/BatchTotalAmount 
          },
           message : {
             type :  string ,
             description :  Accepted for processing. ,
             example :  Accepted for processing. 
          }
        }
      },
       RequestedProcessingOffer_processing_offering : {
         type :  object ,
         properties : {
           transaction_pricing_external_id : {
             $ref :  #/components/schemas/ExtID 
          }
        }
      },
       RequestedEquipmentOffer_equipment_offering : {
         type :  object ,
         properties : {
           equipment_offering_external_id : {
             $ref :  #/components/schemas/ExtID 
          }
        }
      },
       PricingTiers_inner : {
         type :  object ,
         properties : {
           from : {
             type :  string ,
             description :  The price of this tier will apply from this number of the transaction ,
             example :  1 
          },
           to : {
             type :  string ,
             description :  The price of this tier will apply to this number of the transaction do not present if there is no ending number ,
             example :  100 
          }
        }
      },
       Criteria_business_address : {
         type :  object ,
         properties : {
           country_code : {
             $ref :  #/components/schemas/Country 
          },
           city : {
             $ref :  #/components/schemas/City 
          },
           county_code : {
             $ref :  #/components/schemas/State 
          }
        }
      },
       error_error : {
         required : [
           cause ,
           code ,
           explanation ,
           extended_explanation ,
           reference 
        ],
         type :  object ,
         properties : {
           cause : {
             type :  string ,
             description :  __Description:__ Cause of Error. ,
             enum : [
               REQUEST_REJECTED ,
               INVALID_REQUEST ,
               REQUEST_FAILED ,
               SYSTEM_ERROR ,
               INVALID_OPERATION ,
               VALIDATION_ERROR ,
               FILE_OPERATION ,
               HTTP_ERROR ,
               THIRD_PARTY_ERROR 
            ]
          },
           code : {
             type :  string ,
             description :  __Description:__ Code ,
             example :  12-15-004 
          },
           reference : {
             type :  string ,
             description :  __Description:__ Reference ,
             example :  5AC7915618677230385591 
          },
           time : {
             type :  string ,
             description :  __Description:__ Time ,
             format :  YYYY-MM-DD HH:MM:SS ,
             example :  2018-05-27 12:34:23 
          },
           explanation : {
             type :  string ,
             description :  __Description:__ Explanation 
          }
        },
         description :  Error 
      },
       applicationref_application : {
         type :  object ,
         properties : {
           application_reference : {
             $ref :  #/components/schemas/ApplicationRef 
          }
        }
      },
       MonitorCreditSafeFullReportDetail_corporate_financials_payment_performance : {
         type :  object ,
         properties : {
           monthly_data : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/MonitorCreditFinancialMonthly 
            }
          }
        },
         example : null
      },
       MonitorCreditSafeFullReportDetail_corporate_financials : {
         type :  object ,
         properties : {
           financial_accounts : {
             type :  string 
          },
           payment_performance : {
             $ref :  #/components/schemas/MonitorCreditSafeFullReportDetail_corporate_financials_payment_performance 
          },
           trade_payment : {
             $ref :  #/components/schemas/MonitorCreditFinTradePayment 
          },
           percentage_change : {
             $ref :  #/components/schemas/MonitorCreditFinPercChange 
          },
           ltd_company_cais : {
             $ref :  #/components/schemas/MonitorCreditFinCAI 
          }
        },
         example : null
      },
       MonitorCreditSafeFullReportDetail_corporate_summary : {
         type :  object ,
         properties : {
           company_summary : {
             $ref :  #/components/schemas/MonitorCreditSumCompany 
          },
           director_summary : {
             $ref :  #/components/schemas/MonitorCreditSumDirector 
          }
        },
         example : null
      },
       MonitorCreditSumCompany_changes : {
         type :  object ,
         properties : {
           number_reg_office_changes_last_12_month : {
             type :  string 
          },
           number_mem_arts_changes_last_12_month : {
             type :  string 
          }
        },
         example : null
      },
       MonitorCreditSumCompany_legal_notices : {
         type :  object ,
         properties : {
           summary_count : {
             type :  string 
          }
        },
         example : null
      },
       MonitorCreditSumCompany_alerts : {
         type :  object ,
         properties : {
           notes_count : {
             type :  string 
          },
           notes : {
             type :  array ,
             items : {
               type :  object ,
               additionalProperties : {
                 type :  string 
              }
            }
          }
        },
         example : null
      },
       MonitorCreditSumBankrupt_filling_details : {
         type :  object ,
         properties : {
           filed_with : {
             type :  string 
          }
        },
         example : null
      },
       MonitorCreditFinTradePayment_trade_payment_summary : {
         type :  object ,
         properties : {
           currency : {
             $ref :  #/components/schemas/Currency 
          },
           total_trades_number : {
             type :  string 
          },
           total_trades_balance : {
             type :  string 
          },
           continuous_trades_number : {
             type :  string 
          },
           recent_high_credit : {
             type :  string 
          }
        },
         example : null
      },
       CorporateDirector_directors : {
         type :  object ,
         properties : {
           current_directors : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/MonitorCreditSafeDirector 
            }
          }
        },
         example : null
      },
       MonitorFullReportDetail_request_reference : {
         type :  object ,
         properties : {
           application_reference : {
             $ref :  #/components/schemas/ApplicationRef 
          }
        },
         example : null
      },
       MonitorFullReportDetail_intelligence_report_overall_evaluation : {
         type :  object ,
         properties : {
           negative_hit : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           pep_hits : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           enforcement_hits : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           sanctions_hits : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           previous_sanctions : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           financial_regulator : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           disqualified_director_match : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           adverse_media_match : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           insolvent_match : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           deceased : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           business_has_pep : {
             type :  string ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          }
        },
         example : null
      },
       MonitorFullReportDetail_intelligence_report : {
         type :  object ,
         properties : {
           possible_matches : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/possibleMatch 
            }
          },
           overall_evaluation : {
             $ref :  #/components/schemas/MonitorFullReportDetail_intelligence_report_overall_evaluation 
          },
           original_status : {
             type :  string ,
             description :  original decision suggested by Prospect based on the rules possible match, exact match, no match ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           status : {
             type :  string ,
             description :  decision made from user ,
             enum : [
               PM ,
               EM ,
               NM 
            ]
          },
           is_overwritten : {
             type :  string ,
             description :  1 = Yes, 0 = No ,
             enum : [
               1 ,
               0 
            ]
          },
           review_info : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/reviewInfo 
            }
          }
        },
         example : null
      },
       MonitorIntelligenceCompanyBlock_business : {
         type :  object ,
         properties : {
           business_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           country_code : {
             $ref :  #/components/schemas/CountryCodeLetter 
          },
           business_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           mcc_code : {
             $ref :  #/components/schemas/MCC 
          },
           registration_number : {
             $ref :  #/components/schemas/RegNumber 
          },
           incorporated_date : {
             $ref :  #/components/schemas/Date 
          },
           business_type : {
             $ref :  #/components/schemas/BusinessLegalEntity 
          },
           business_sub_type : {
             $ref :  #/components/schemas/BusinessLegalEntity 
          },
           trading_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           address : {
             $ref :  #/components/schemas/AddressReportShort 
          }
        },
         example : null
      },
       RetrieveIntelligenceFullResponse_reports : {
         type :  object ,
         properties : {
           PEP_SANCTION_PRINCIPAL : {
             $ref :  #/components/schemas/PepSancPrincipal 
          },
           PEP_SANCTION_BUSINESS : {
             $ref :  #/components/schemas/PepSancBusiness 
          }
        },
         example : null
      },
       RetrieveHitRequest_search : {
         type :  object ,
         properties : {
           merchant_id : {
             $ref :  #/components/schemas/MID 
          },
           decision_made : {
             type :  string ,
             description :  Decision already made? 1= Yes 0= No ,
             enum : [
               1 ,
               0 
            ]
          }
        },
         example : null
      },
       OverwriteMonitorRequest_merchant : {
         type :  object ,
         properties : {
           merchant_id : {
             $ref :  #/components/schemas/MID 
          }
        },
         example : null
      },
       OverwriteAMLResponseBlock_additionalProperties : {
         type :  object ,
         properties : {
           hash_key : {
             type :  string 
          },
           entity_type : {
             $ref :  #/components/schemas/EntityType 
          },
           report_type : {
             $ref :  #/components/schemas/ReportType 
          },
           parent_type : {
             $ref :  #/components/schemas/ParentType 
          },
           alliance_unique_id : {
             $ref :  #/components/schemas/AllianceID 
          },
           partner_unique_id : {
             $ref :  #/components/schemas/PartnerID 
          },
           third_party_source : {
             $ref :  #/components/schemas/ThirdPartySource 
          },
           request_data : {
             $ref :  #/components/schemas/IntelligenceCompanyBlock 
          },
           response_data : {
             $ref :  #/components/schemas/IntelligencePrincipalBlock 
          },
           date_added : {
             $ref :  #/components/schemas/DateTime 
          },
           date_updated : {
             $ref :  #/components/schemas/DateTime 
          },
           expiry_date : {
             $ref :  #/components/schemas/Date 
          },
           original_copy : {
             $ref :  #/components/schemas/OriginalCopy 
          },
           is_test_data : {
             $ref :  #/components/schemas/IsTestData 
          }
        },
         example : null
      },
       IntelligenceCompanyBlock_business_principals : {
         type :  object ,
         properties : {
           principal_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           forename : {
             $ref :  #/components/schemas/FirstName 
          },
           surname : {
             $ref :  #/components/schemas/LastName 
          },
           date_of_birth : {
             $ref :  #/components/schemas/Date 
          },
           email : {
             $ref :  #/components/schemas/Email 
          },
           ownership_percentage : {
             $ref :  #/components/schemas/OwnershipPerc 
          },
           nationality : {
             $ref :  #/components/schemas/EntityReference 
          },
           current_address : {
             $ref :  #/components/schemas/ReportAddressBlock 
          },
           role : {
             $ref :  #/components/schemas/Position 
          }
        },
         example : null
      },
       IntelligenceCompanyBlock_business : {
         type :  object ,
         properties : {
           business_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           country_code : {
             $ref :  #/components/schemas/CountryCodeLetter 
          },
           business_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           mcc_code : {
             $ref :  #/components/schemas/MCC 
          },
           registration_number : {
             $ref :  #/components/schemas/RegNumber 
          },
           incorporated_date : {
             $ref :  #/components/schemas/DateOnly 
          },
           business_type : {
             $ref :  #/components/schemas/BusinessLegalEntity 
          },
           business_sub_type : {
             $ref :  #/components/schemas/BusinessLegalEntity 
          },
           tax_id : {
             $ref :  #/components/schemas/TaxID 
          },
           address : {
             $ref :  #/components/schemas/AddressReportShort 
          },
           principals : {
             $ref :  #/components/schemas/IntelligenceCompanyBlock_business_principals 
          },
           decision_purpose : {
             type :  string ,
             enum : [
               BOARDING 
            ]
          }
        },
         example : null
      },
       IntelligenceCompanyBlock_outlet : {
         type :  object ,
         properties : {
           outlet_ref : {
             $ref :  #/components/schemas/EntityReference 
          },
           trading_name : {
             $ref :  #/components/schemas/BusinessName 
          },
           mcc_code : {
             $ref :  #/components/schemas/EntityReference 
          },
           average_delivery_days : {
             $ref :  #/components/schemas/DeliveryDay 
          },
           delivery_0_days : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_1_to_7_days : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_8_to_14_days : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_15_to_30_days : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           delivery_over_30_days : {
             $ref :  #/components/schemas/DeliveryPerc 
          },
           outlet_type : {
             type :  string ,
             enum : [
               FACE_TO_FACE 
            ]
          },
           monthly_card_turnover : {
             $ref :  #/components/schemas/MCardATO 
          },
           monthly_turnover : {
             $ref :  #/components/schemas/MATO 
          },
           annual_turnover : {
             $ref :  #/components/schemas/ATO 
          },
           annual_card_turnover : {
             $ref :  #/components/schemas/CardATO 
          },
           average_transaction_value : {
             $ref :  #/components/schemas/ATV 
          },
           address : {
             $ref :  #/components/schemas/AddressReportShort 
          },
           bank : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/ReportBankShort 
            }
          }
        },
         example : null
      },
       ReportBankShort_proprietor : {
         type :  object ,
         properties : {
           first_name : {
             $ref :  #/components/schemas/FirstName 
          },
           surname : {
             $ref :  #/components/schemas/LastName 
          },
           date_of_birth : {
             $ref :  #/components/schemas/Date 
          }
        },
         example : null
      },
       possibleMatchBusinessBlock_title : {
         type :  object ,
         properties : {
           description : {
             type :  string ,
             example :  Ms 
          }
        },
         example : null
      },
       possibleMatchBusinessBlock_nationality : {
         type :  object ,
         properties : {
           nationality : {
             type :  string ,
             example :  American 
          }
        },
         example : null
      },
       Addresses_country : {
         type :  object ,
         properties : {
           name : {
             type :  string ,
             example :  United States of America 
          }
        },
         example : null
      },
       RetrieveIntelligenceResponse_aml_check_response_aml_reviewer : {
         type :  object ,
         properties : {
           name : {
             $ref :  #/components/schemas/Reviewer 
          },
           user_name : {
             $ref :  #/components/schemas/UserName 
          },
           email : {
             $ref :  #/components/schemas/Email 
          }
        },
         example : null
      },
       RetrieveIntelligenceResponse_aml_check_response : {
         type :  object ,
         properties : {
           check_purpose : {
             type :  string ,
             enum : [
               BOARDING 
            ]
          },
           decision : {
             type :  string ,
             enum : [
               REFER ,
               PREAPPROVE ,
               APPROVE 
            ]
          },
           original_decision : {
             type :  string ,
             enum : [
               REFER ,
               PREAPPROVE ,
               APPROVE 
            ]
          },
           risk_band_id : {
             type :  string ,
             example :  1 
          },
           original_risk_band_id : {
             type :  string ,
             example :  1 
          },
           entity_decisions : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/EntityDecisionsBlock 
            }
          },
           intelligence_references : {
             type :  array ,
             items : {
               $ref :  #/components/schemas/IntelligenceReferenceBlock 
            }
          },
           aml_reviewer : {
             $ref :  #/components/schemas/RetrieveIntelligenceResponse_aml_check_response_aml_reviewer 
          }
        },
         example : null
      }
    }
  }
}
